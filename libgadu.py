# This file was automatically generated by SWIG (http://www.swig.org).
# Version 3.0.0
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.





from sys import version_info
if version_info >= (2,6,0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_libgadu', [dirname(__file__)])
        except ImportError:
            import _libgadu
            return _libgadu
        if fp is not None:
            try:
                _mod = imp.load_module('_libgadu', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _libgadu = swig_import_helper()
    del swig_import_helper
else:
    import _libgadu
del version_info
try:
    _swig_property = property
except NameError:
    pass # Python < 2.2 doesn't have 'property'.
def _swig_setattr_nondynamic(self,class_type,name,value,static=1):
    if (name == "thisown"): return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name,None)
    if method: return method(self,value)
    if (not static):
        self.__dict__[name] = value
    else:
        raise AttributeError("You cannot add attributes to %s" % self)

def _swig_setattr(self,class_type,name,value):
    return _swig_setattr_nondynamic(self,class_type,name,value,0)

def _swig_getattr(self,class_type,name):
    if (name == "thisown"): return self.this.own()
    method = class_type.__swig_getmethods__.get(name,None)
    if method: return method(self)
    raise AttributeError(name)

def _swig_repr(self):
    try: strthis = "proxy of " + self.this.__repr__()
    except: strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object : pass
    _newclass = 0


class gg_dcc7_id_t(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, gg_dcc7_id_t, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, gg_dcc7_id_t, name)
    __repr__ = _swig_repr
    __swig_setmethods__["id"] = _libgadu.gg_dcc7_id_t_id_set
    __swig_getmethods__["id"] = _libgadu.gg_dcc7_id_t_id_get
    if _newclass:id = _swig_property(_libgadu.gg_dcc7_id_t_id_get, _libgadu.gg_dcc7_id_t_id_set)
    def __init__(self): 
        this = _libgadu.new_gg_dcc7_id_t()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _libgadu.delete_gg_dcc7_id_t
    __del__ = lambda self : None;
gg_dcc7_id_t_swigregister = _libgadu.gg_dcc7_id_t_swigregister
gg_dcc7_id_t_swigregister(gg_dcc7_id_t)

class gg_multilogon_id_t(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, gg_multilogon_id_t, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, gg_multilogon_id_t, name)
    __repr__ = _swig_repr
    __swig_setmethods__["id"] = _libgadu.gg_multilogon_id_t_id_set
    __swig_getmethods__["id"] = _libgadu.gg_multilogon_id_t_id_get
    if _newclass:id = _swig_property(_libgadu.gg_multilogon_id_t_id_get, _libgadu.gg_multilogon_id_t_id_set)
    def __init__(self): 
        this = _libgadu.new_gg_multilogon_id_t()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _libgadu.delete_gg_multilogon_id_t
    __del__ = lambda self : None;
gg_multilogon_id_t_swigregister = _libgadu.gg_multilogon_id_t_swigregister
gg_multilogon_id_t_swigregister(gg_multilogon_id_t)

class gg_common(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, gg_common, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, gg_common, name)
    __repr__ = _swig_repr
    __swig_setmethods__["fd"] = _libgadu.gg_common_fd_set
    __swig_getmethods__["fd"] = _libgadu.gg_common_fd_get
    if _newclass:fd = _swig_property(_libgadu.gg_common_fd_get, _libgadu.gg_common_fd_set)
    __swig_setmethods__["check"] = _libgadu.gg_common_check_set
    __swig_getmethods__["check"] = _libgadu.gg_common_check_get
    if _newclass:check = _swig_property(_libgadu.gg_common_check_get, _libgadu.gg_common_check_set)
    __swig_setmethods__["state"] = _libgadu.gg_common_state_set
    __swig_getmethods__["state"] = _libgadu.gg_common_state_get
    if _newclass:state = _swig_property(_libgadu.gg_common_state_get, _libgadu.gg_common_state_set)
    __swig_setmethods__["error"] = _libgadu.gg_common_error_set
    __swig_getmethods__["error"] = _libgadu.gg_common_error_get
    if _newclass:error = _swig_property(_libgadu.gg_common_error_get, _libgadu.gg_common_error_set)
    __swig_setmethods__["type"] = _libgadu.gg_common_type_set
    __swig_getmethods__["type"] = _libgadu.gg_common_type_get
    if _newclass:type = _swig_property(_libgadu.gg_common_type_get, _libgadu.gg_common_type_set)
    __swig_setmethods__["id"] = _libgadu.gg_common_id_set
    __swig_getmethods__["id"] = _libgadu.gg_common_id_get
    if _newclass:id = _swig_property(_libgadu.gg_common_id_get, _libgadu.gg_common_id_set)
    __swig_setmethods__["timeout"] = _libgadu.gg_common_timeout_set
    __swig_getmethods__["timeout"] = _libgadu.gg_common_timeout_get
    if _newclass:timeout = _swig_property(_libgadu.gg_common_timeout_get, _libgadu.gg_common_timeout_set)
    __swig_setmethods__["callback"] = _libgadu.gg_common_callback_set
    __swig_getmethods__["callback"] = _libgadu.gg_common_callback_get
    if _newclass:callback = _swig_property(_libgadu.gg_common_callback_get, _libgadu.gg_common_callback_set)
    __swig_setmethods__["destroy"] = _libgadu.gg_common_destroy_set
    __swig_getmethods__["destroy"] = _libgadu.gg_common_destroy_get
    if _newclass:destroy = _swig_property(_libgadu.gg_common_destroy_get, _libgadu.gg_common_destroy_set)
    def __init__(self): 
        this = _libgadu.new_gg_common()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _libgadu.delete_gg_common
    __del__ = lambda self : None;
gg_common_swigregister = _libgadu.gg_common_swigregister
gg_common_swigregister(gg_common)

GG_RESOLVER_DEFAULT = _libgadu.GG_RESOLVER_DEFAULT
GG_RESOLVER_FORK = _libgadu.GG_RESOLVER_FORK
GG_RESOLVER_PTHREAD = _libgadu.GG_RESOLVER_PTHREAD
GG_RESOLVER_CUSTOM = _libgadu.GG_RESOLVER_CUSTOM
GG_RESOLVER_INVALID = _libgadu.GG_RESOLVER_INVALID
GG_ENCODING_CP1250 = _libgadu.GG_ENCODING_CP1250
GG_ENCODING_UTF8 = _libgadu.GG_ENCODING_UTF8
GG_ENCODING_INVALID = _libgadu.GG_ENCODING_INVALID
class gg_session(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, gg_session, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, gg_session, name)
    __repr__ = _swig_repr
    __swig_setmethods__["fd"] = _libgadu.gg_session_fd_set
    __swig_getmethods__["fd"] = _libgadu.gg_session_fd_get
    if _newclass:fd = _swig_property(_libgadu.gg_session_fd_get, _libgadu.gg_session_fd_set)
    __swig_setmethods__["check"] = _libgadu.gg_session_check_set
    __swig_getmethods__["check"] = _libgadu.gg_session_check_get
    if _newclass:check = _swig_property(_libgadu.gg_session_check_get, _libgadu.gg_session_check_set)
    __swig_setmethods__["state"] = _libgadu.gg_session_state_set
    __swig_getmethods__["state"] = _libgadu.gg_session_state_get
    if _newclass:state = _swig_property(_libgadu.gg_session_state_get, _libgadu.gg_session_state_set)
    __swig_setmethods__["error"] = _libgadu.gg_session_error_set
    __swig_getmethods__["error"] = _libgadu.gg_session_error_get
    if _newclass:error = _swig_property(_libgadu.gg_session_error_get, _libgadu.gg_session_error_set)
    __swig_setmethods__["type"] = _libgadu.gg_session_type_set
    __swig_getmethods__["type"] = _libgadu.gg_session_type_get
    if _newclass:type = _swig_property(_libgadu.gg_session_type_get, _libgadu.gg_session_type_set)
    __swig_setmethods__["id"] = _libgadu.gg_session_id_set
    __swig_getmethods__["id"] = _libgadu.gg_session_id_get
    if _newclass:id = _swig_property(_libgadu.gg_session_id_get, _libgadu.gg_session_id_set)
    __swig_setmethods__["timeout"] = _libgadu.gg_session_timeout_set
    __swig_getmethods__["timeout"] = _libgadu.gg_session_timeout_get
    if _newclass:timeout = _swig_property(_libgadu.gg_session_timeout_get, _libgadu.gg_session_timeout_set)
    __swig_setmethods__["callback"] = _libgadu.gg_session_callback_set
    __swig_getmethods__["callback"] = _libgadu.gg_session_callback_get
    if _newclass:callback = _swig_property(_libgadu.gg_session_callback_get, _libgadu.gg_session_callback_set)
    __swig_setmethods__["destroy"] = _libgadu.gg_session_destroy_set
    __swig_getmethods__["destroy"] = _libgadu.gg_session_destroy_get
    if _newclass:destroy = _swig_property(_libgadu.gg_session_destroy_get, _libgadu.gg_session_destroy_set)
    __swig_setmethods__["async"] = _libgadu.gg_session_async_set
    __swig_getmethods__["async"] = _libgadu.gg_session_async_get
    if _newclass:async = _swig_property(_libgadu.gg_session_async_get, _libgadu.gg_session_async_set)
    __swig_setmethods__["pid"] = _libgadu.gg_session_pid_set
    __swig_getmethods__["pid"] = _libgadu.gg_session_pid_get
    if _newclass:pid = _swig_property(_libgadu.gg_session_pid_get, _libgadu.gg_session_pid_set)
    __swig_setmethods__["port"] = _libgadu.gg_session_port_set
    __swig_getmethods__["port"] = _libgadu.gg_session_port_get
    if _newclass:port = _swig_property(_libgadu.gg_session_port_get, _libgadu.gg_session_port_set)
    __swig_setmethods__["seq"] = _libgadu.gg_session_seq_set
    __swig_getmethods__["seq"] = _libgadu.gg_session_seq_get
    if _newclass:seq = _swig_property(_libgadu.gg_session_seq_get, _libgadu.gg_session_seq_set)
    __swig_setmethods__["last_pong"] = _libgadu.gg_session_last_pong_set
    __swig_getmethods__["last_pong"] = _libgadu.gg_session_last_pong_get
    if _newclass:last_pong = _swig_property(_libgadu.gg_session_last_pong_get, _libgadu.gg_session_last_pong_set)
    __swig_setmethods__["last_event"] = _libgadu.gg_session_last_event_set
    __swig_getmethods__["last_event"] = _libgadu.gg_session_last_event_get
    if _newclass:last_event = _swig_property(_libgadu.gg_session_last_event_get, _libgadu.gg_session_last_event_set)
    __swig_setmethods__["event"] = _libgadu.gg_session_event_set
    __swig_getmethods__["event"] = _libgadu.gg_session_event_get
    if _newclass:event = _swig_property(_libgadu.gg_session_event_get, _libgadu.gg_session_event_set)
    __swig_setmethods__["proxy_addr"] = _libgadu.gg_session_proxy_addr_set
    __swig_getmethods__["proxy_addr"] = _libgadu.gg_session_proxy_addr_get
    if _newclass:proxy_addr = _swig_property(_libgadu.gg_session_proxy_addr_get, _libgadu.gg_session_proxy_addr_set)
    __swig_setmethods__["proxy_port"] = _libgadu.gg_session_proxy_port_set
    __swig_getmethods__["proxy_port"] = _libgadu.gg_session_proxy_port_get
    if _newclass:proxy_port = _swig_property(_libgadu.gg_session_proxy_port_get, _libgadu.gg_session_proxy_port_set)
    __swig_setmethods__["hub_addr"] = _libgadu.gg_session_hub_addr_set
    __swig_getmethods__["hub_addr"] = _libgadu.gg_session_hub_addr_get
    if _newclass:hub_addr = _swig_property(_libgadu.gg_session_hub_addr_get, _libgadu.gg_session_hub_addr_set)
    __swig_setmethods__["server_addr"] = _libgadu.gg_session_server_addr_set
    __swig_getmethods__["server_addr"] = _libgadu.gg_session_server_addr_get
    if _newclass:server_addr = _swig_property(_libgadu.gg_session_server_addr_get, _libgadu.gg_session_server_addr_set)
    __swig_setmethods__["client_addr"] = _libgadu.gg_session_client_addr_set
    __swig_getmethods__["client_addr"] = _libgadu.gg_session_client_addr_get
    if _newclass:client_addr = _swig_property(_libgadu.gg_session_client_addr_get, _libgadu.gg_session_client_addr_set)
    __swig_setmethods__["client_port"] = _libgadu.gg_session_client_port_set
    __swig_getmethods__["client_port"] = _libgadu.gg_session_client_port_get
    if _newclass:client_port = _swig_property(_libgadu.gg_session_client_port_get, _libgadu.gg_session_client_port_set)
    __swig_setmethods__["external_addr"] = _libgadu.gg_session_external_addr_set
    __swig_getmethods__["external_addr"] = _libgadu.gg_session_external_addr_get
    if _newclass:external_addr = _swig_property(_libgadu.gg_session_external_addr_get, _libgadu.gg_session_external_addr_set)
    __swig_setmethods__["external_port"] = _libgadu.gg_session_external_port_set
    __swig_getmethods__["external_port"] = _libgadu.gg_session_external_port_get
    if _newclass:external_port = _swig_property(_libgadu.gg_session_external_port_get, _libgadu.gg_session_external_port_set)
    __swig_setmethods__["uin"] = _libgadu.gg_session_uin_set
    __swig_getmethods__["uin"] = _libgadu.gg_session_uin_get
    if _newclass:uin = _swig_property(_libgadu.gg_session_uin_get, _libgadu.gg_session_uin_set)
    __swig_setmethods__["password"] = _libgadu.gg_session_password_set
    __swig_getmethods__["password"] = _libgadu.gg_session_password_get
    if _newclass:password = _swig_property(_libgadu.gg_session_password_get, _libgadu.gg_session_password_set)
    __swig_setmethods__["initial_status"] = _libgadu.gg_session_initial_status_set
    __swig_getmethods__["initial_status"] = _libgadu.gg_session_initial_status_get
    if _newclass:initial_status = _swig_property(_libgadu.gg_session_initial_status_get, _libgadu.gg_session_initial_status_set)
    __swig_setmethods__["status"] = _libgadu.gg_session_status_set
    __swig_getmethods__["status"] = _libgadu.gg_session_status_get
    if _newclass:status = _swig_property(_libgadu.gg_session_status_get, _libgadu.gg_session_status_set)
    __swig_setmethods__["recv_buf"] = _libgadu.gg_session_recv_buf_set
    __swig_getmethods__["recv_buf"] = _libgadu.gg_session_recv_buf_get
    if _newclass:recv_buf = _swig_property(_libgadu.gg_session_recv_buf_get, _libgadu.gg_session_recv_buf_set)
    __swig_setmethods__["recv_done"] = _libgadu.gg_session_recv_done_set
    __swig_getmethods__["recv_done"] = _libgadu.gg_session_recv_done_get
    if _newclass:recv_done = _swig_property(_libgadu.gg_session_recv_done_get, _libgadu.gg_session_recv_done_set)
    __swig_setmethods__["recv_left"] = _libgadu.gg_session_recv_left_set
    __swig_getmethods__["recv_left"] = _libgadu.gg_session_recv_left_get
    if _newclass:recv_left = _swig_property(_libgadu.gg_session_recv_left_get, _libgadu.gg_session_recv_left_set)
    __swig_setmethods__["protocol_version"] = _libgadu.gg_session_protocol_version_set
    __swig_getmethods__["protocol_version"] = _libgadu.gg_session_protocol_version_get
    if _newclass:protocol_version = _swig_property(_libgadu.gg_session_protocol_version_get, _libgadu.gg_session_protocol_version_set)
    __swig_setmethods__["client_version"] = _libgadu.gg_session_client_version_set
    __swig_getmethods__["client_version"] = _libgadu.gg_session_client_version_get
    if _newclass:client_version = _swig_property(_libgadu.gg_session_client_version_get, _libgadu.gg_session_client_version_set)
    __swig_setmethods__["last_sysmsg"] = _libgadu.gg_session_last_sysmsg_set
    __swig_getmethods__["last_sysmsg"] = _libgadu.gg_session_last_sysmsg_get
    if _newclass:last_sysmsg = _swig_property(_libgadu.gg_session_last_sysmsg_get, _libgadu.gg_session_last_sysmsg_set)
    __swig_setmethods__["initial_descr"] = _libgadu.gg_session_initial_descr_set
    __swig_getmethods__["initial_descr"] = _libgadu.gg_session_initial_descr_get
    if _newclass:initial_descr = _swig_property(_libgadu.gg_session_initial_descr_get, _libgadu.gg_session_initial_descr_set)
    __swig_setmethods__["resolver"] = _libgadu.gg_session_resolver_set
    __swig_getmethods__["resolver"] = _libgadu.gg_session_resolver_get
    if _newclass:resolver = _swig_property(_libgadu.gg_session_resolver_get, _libgadu.gg_session_resolver_set)
    __swig_setmethods__["header_buf"] = _libgadu.gg_session_header_buf_set
    __swig_getmethods__["header_buf"] = _libgadu.gg_session_header_buf_get
    if _newclass:header_buf = _swig_property(_libgadu.gg_session_header_buf_get, _libgadu.gg_session_header_buf_set)
    __swig_setmethods__["header_done"] = _libgadu.gg_session_header_done_set
    __swig_getmethods__["header_done"] = _libgadu.gg_session_header_done_get
    if _newclass:header_done = _swig_property(_libgadu.gg_session_header_done_get, _libgadu.gg_session_header_done_set)
    __swig_setmethods__["ssl"] = _libgadu.gg_session_ssl_set
    __swig_getmethods__["ssl"] = _libgadu.gg_session_ssl_get
    if _newclass:ssl = _swig_property(_libgadu.gg_session_ssl_get, _libgadu.gg_session_ssl_set)
    __swig_setmethods__["ssl_ctx"] = _libgadu.gg_session_ssl_ctx_set
    __swig_getmethods__["ssl_ctx"] = _libgadu.gg_session_ssl_ctx_get
    if _newclass:ssl_ctx = _swig_property(_libgadu.gg_session_ssl_ctx_get, _libgadu.gg_session_ssl_ctx_set)
    __swig_setmethods__["image_size"] = _libgadu.gg_session_image_size_set
    __swig_getmethods__["image_size"] = _libgadu.gg_session_image_size_get
    if _newclass:image_size = _swig_property(_libgadu.gg_session_image_size_get, _libgadu.gg_session_image_size_set)
    __swig_setmethods__["userlist_reply"] = _libgadu.gg_session_userlist_reply_set
    __swig_getmethods__["userlist_reply"] = _libgadu.gg_session_userlist_reply_get
    if _newclass:userlist_reply = _swig_property(_libgadu.gg_session_userlist_reply_get, _libgadu.gg_session_userlist_reply_set)
    __swig_setmethods__["userlist_blocks"] = _libgadu.gg_session_userlist_blocks_set
    __swig_getmethods__["userlist_blocks"] = _libgadu.gg_session_userlist_blocks_get
    if _newclass:userlist_blocks = _swig_property(_libgadu.gg_session_userlist_blocks_get, _libgadu.gg_session_userlist_blocks_set)
    __swig_setmethods__["images"] = _libgadu.gg_session_images_set
    __swig_getmethods__["images"] = _libgadu.gg_session_images_get
    if _newclass:images = _swig_property(_libgadu.gg_session_images_get, _libgadu.gg_session_images_set)
    __swig_setmethods__["hash_type"] = _libgadu.gg_session_hash_type_set
    __swig_getmethods__["hash_type"] = _libgadu.gg_session_hash_type_get
    if _newclass:hash_type = _swig_property(_libgadu.gg_session_hash_type_get, _libgadu.gg_session_hash_type_set)
    __swig_setmethods__["send_buf"] = _libgadu.gg_session_send_buf_set
    __swig_getmethods__["send_buf"] = _libgadu.gg_session_send_buf_get
    if _newclass:send_buf = _swig_property(_libgadu.gg_session_send_buf_get, _libgadu.gg_session_send_buf_set)
    __swig_setmethods__["send_left"] = _libgadu.gg_session_send_left_set
    __swig_getmethods__["send_left"] = _libgadu.gg_session_send_left_get
    if _newclass:send_left = _swig_property(_libgadu.gg_session_send_left_get, _libgadu.gg_session_send_left_set)
    __swig_setmethods__["dcc7_list"] = _libgadu.gg_session_dcc7_list_set
    __swig_getmethods__["dcc7_list"] = _libgadu.gg_session_dcc7_list_get
    if _newclass:dcc7_list = _swig_property(_libgadu.gg_session_dcc7_list_get, _libgadu.gg_session_dcc7_list_set)
    __swig_setmethods__["soft_timeout"] = _libgadu.gg_session_soft_timeout_set
    __swig_getmethods__["soft_timeout"] = _libgadu.gg_session_soft_timeout_get
    if _newclass:soft_timeout = _swig_property(_libgadu.gg_session_soft_timeout_get, _libgadu.gg_session_soft_timeout_set)
    __swig_setmethods__["protocol_flags"] = _libgadu.gg_session_protocol_flags_set
    __swig_getmethods__["protocol_flags"] = _libgadu.gg_session_protocol_flags_get
    if _newclass:protocol_flags = _swig_property(_libgadu.gg_session_protocol_flags_get, _libgadu.gg_session_protocol_flags_set)
    __swig_setmethods__["encoding"] = _libgadu.gg_session_encoding_set
    __swig_getmethods__["encoding"] = _libgadu.gg_session_encoding_get
    if _newclass:encoding = _swig_property(_libgadu.gg_session_encoding_get, _libgadu.gg_session_encoding_set)
    __swig_setmethods__["resolver_type"] = _libgadu.gg_session_resolver_type_set
    __swig_getmethods__["resolver_type"] = _libgadu.gg_session_resolver_type_get
    if _newclass:resolver_type = _swig_property(_libgadu.gg_session_resolver_type_get, _libgadu.gg_session_resolver_type_set)
    __swig_setmethods__["resolver_start"] = _libgadu.gg_session_resolver_start_set
    __swig_getmethods__["resolver_start"] = _libgadu.gg_session_resolver_start_get
    if _newclass:resolver_start = _swig_property(_libgadu.gg_session_resolver_start_get, _libgadu.gg_session_resolver_start_set)
    __swig_setmethods__["resolver_cleanup"] = _libgadu.gg_session_resolver_cleanup_set
    __swig_getmethods__["resolver_cleanup"] = _libgadu.gg_session_resolver_cleanup_get
    if _newclass:resolver_cleanup = _swig_property(_libgadu.gg_session_resolver_cleanup_get, _libgadu.gg_session_resolver_cleanup_set)
    __swig_setmethods__["protocol_features"] = _libgadu.gg_session_protocol_features_set
    __swig_getmethods__["protocol_features"] = _libgadu.gg_session_protocol_features_get
    if _newclass:protocol_features = _swig_property(_libgadu.gg_session_protocol_features_get, _libgadu.gg_session_protocol_features_set)
    __swig_setmethods__["status_flags"] = _libgadu.gg_session_status_flags_set
    __swig_getmethods__["status_flags"] = _libgadu.gg_session_status_flags_get
    if _newclass:status_flags = _swig_property(_libgadu.gg_session_status_flags_get, _libgadu.gg_session_status_flags_set)
    __swig_setmethods__["recv_msg_count"] = _libgadu.gg_session_recv_msg_count_set
    __swig_getmethods__["recv_msg_count"] = _libgadu.gg_session_recv_msg_count_get
    if _newclass:recv_msg_count = _swig_property(_libgadu.gg_session_recv_msg_count_get, _libgadu.gg_session_recv_msg_count_set)
    def __init__(self): 
        this = _libgadu.new_gg_session()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _libgadu.delete_gg_session
    __del__ = lambda self : None;
gg_session_swigregister = _libgadu.gg_session_swigregister
gg_session_swigregister(gg_session)

class gg_http(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, gg_http, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, gg_http, name)
    __repr__ = _swig_repr
    __swig_setmethods__["fd"] = _libgadu.gg_http_fd_set
    __swig_getmethods__["fd"] = _libgadu.gg_http_fd_get
    if _newclass:fd = _swig_property(_libgadu.gg_http_fd_get, _libgadu.gg_http_fd_set)
    __swig_setmethods__["check"] = _libgadu.gg_http_check_set
    __swig_getmethods__["check"] = _libgadu.gg_http_check_get
    if _newclass:check = _swig_property(_libgadu.gg_http_check_get, _libgadu.gg_http_check_set)
    __swig_setmethods__["state"] = _libgadu.gg_http_state_set
    __swig_getmethods__["state"] = _libgadu.gg_http_state_get
    if _newclass:state = _swig_property(_libgadu.gg_http_state_get, _libgadu.gg_http_state_set)
    __swig_setmethods__["error"] = _libgadu.gg_http_error_set
    __swig_getmethods__["error"] = _libgadu.gg_http_error_get
    if _newclass:error = _swig_property(_libgadu.gg_http_error_get, _libgadu.gg_http_error_set)
    __swig_setmethods__["type"] = _libgadu.gg_http_type_set
    __swig_getmethods__["type"] = _libgadu.gg_http_type_get
    if _newclass:type = _swig_property(_libgadu.gg_http_type_get, _libgadu.gg_http_type_set)
    __swig_setmethods__["id"] = _libgadu.gg_http_id_set
    __swig_getmethods__["id"] = _libgadu.gg_http_id_get
    if _newclass:id = _swig_property(_libgadu.gg_http_id_get, _libgadu.gg_http_id_set)
    __swig_setmethods__["timeout"] = _libgadu.gg_http_timeout_set
    __swig_getmethods__["timeout"] = _libgadu.gg_http_timeout_get
    if _newclass:timeout = _swig_property(_libgadu.gg_http_timeout_get, _libgadu.gg_http_timeout_set)
    __swig_setmethods__["callback"] = _libgadu.gg_http_callback_set
    __swig_getmethods__["callback"] = _libgadu.gg_http_callback_get
    if _newclass:callback = _swig_property(_libgadu.gg_http_callback_get, _libgadu.gg_http_callback_set)
    __swig_setmethods__["destroy"] = _libgadu.gg_http_destroy_set
    __swig_getmethods__["destroy"] = _libgadu.gg_http_destroy_get
    if _newclass:destroy = _swig_property(_libgadu.gg_http_destroy_get, _libgadu.gg_http_destroy_set)
    __swig_setmethods__["async"] = _libgadu.gg_http_async_set
    __swig_getmethods__["async"] = _libgadu.gg_http_async_get
    if _newclass:async = _swig_property(_libgadu.gg_http_async_get, _libgadu.gg_http_async_set)
    __swig_setmethods__["pid"] = _libgadu.gg_http_pid_set
    __swig_getmethods__["pid"] = _libgadu.gg_http_pid_get
    if _newclass:pid = _swig_property(_libgadu.gg_http_pid_get, _libgadu.gg_http_pid_set)
    __swig_setmethods__["port"] = _libgadu.gg_http_port_set
    __swig_getmethods__["port"] = _libgadu.gg_http_port_get
    if _newclass:port = _swig_property(_libgadu.gg_http_port_get, _libgadu.gg_http_port_set)
    __swig_setmethods__["query"] = _libgadu.gg_http_query_set
    __swig_getmethods__["query"] = _libgadu.gg_http_query_get
    if _newclass:query = _swig_property(_libgadu.gg_http_query_get, _libgadu.gg_http_query_set)
    __swig_setmethods__["header"] = _libgadu.gg_http_header_set
    __swig_getmethods__["header"] = _libgadu.gg_http_header_get
    if _newclass:header = _swig_property(_libgadu.gg_http_header_get, _libgadu.gg_http_header_set)
    __swig_setmethods__["header_size"] = _libgadu.gg_http_header_size_set
    __swig_getmethods__["header_size"] = _libgadu.gg_http_header_size_get
    if _newclass:header_size = _swig_property(_libgadu.gg_http_header_size_get, _libgadu.gg_http_header_size_set)
    __swig_setmethods__["body"] = _libgadu.gg_http_body_set
    __swig_getmethods__["body"] = _libgadu.gg_http_body_get
    if _newclass:body = _swig_property(_libgadu.gg_http_body_get, _libgadu.gg_http_body_set)
    __swig_setmethods__["body_size"] = _libgadu.gg_http_body_size_set
    __swig_getmethods__["body_size"] = _libgadu.gg_http_body_size_get
    if _newclass:body_size = _swig_property(_libgadu.gg_http_body_size_get, _libgadu.gg_http_body_size_set)
    __swig_setmethods__["data"] = _libgadu.gg_http_data_set
    __swig_getmethods__["data"] = _libgadu.gg_http_data_get
    if _newclass:data = _swig_property(_libgadu.gg_http_data_get, _libgadu.gg_http_data_set)
    __swig_setmethods__["user_data"] = _libgadu.gg_http_user_data_set
    __swig_getmethods__["user_data"] = _libgadu.gg_http_user_data_get
    if _newclass:user_data = _swig_property(_libgadu.gg_http_user_data_get, _libgadu.gg_http_user_data_set)
    __swig_setmethods__["resolver"] = _libgadu.gg_http_resolver_set
    __swig_getmethods__["resolver"] = _libgadu.gg_http_resolver_get
    if _newclass:resolver = _swig_property(_libgadu.gg_http_resolver_get, _libgadu.gg_http_resolver_set)
    __swig_setmethods__["body_done"] = _libgadu.gg_http_body_done_set
    __swig_getmethods__["body_done"] = _libgadu.gg_http_body_done_get
    if _newclass:body_done = _swig_property(_libgadu.gg_http_body_done_get, _libgadu.gg_http_body_done_set)
    __swig_setmethods__["resolver_type"] = _libgadu.gg_http_resolver_type_set
    __swig_getmethods__["resolver_type"] = _libgadu.gg_http_resolver_type_get
    if _newclass:resolver_type = _swig_property(_libgadu.gg_http_resolver_type_get, _libgadu.gg_http_resolver_type_set)
    __swig_setmethods__["resolver_start"] = _libgadu.gg_http_resolver_start_set
    __swig_getmethods__["resolver_start"] = _libgadu.gg_http_resolver_start_get
    if _newclass:resolver_start = _swig_property(_libgadu.gg_http_resolver_start_get, _libgadu.gg_http_resolver_start_set)
    __swig_setmethods__["resolver_cleanup"] = _libgadu.gg_http_resolver_cleanup_set
    __swig_getmethods__["resolver_cleanup"] = _libgadu.gg_http_resolver_cleanup_get
    if _newclass:resolver_cleanup = _swig_property(_libgadu.gg_http_resolver_cleanup_get, _libgadu.gg_http_resolver_cleanup_set)
    def __init__(self): 
        this = _libgadu.new_gg_http()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _libgadu.delete_gg_http
    __del__ = lambda self : None;
gg_http_swigregister = _libgadu.gg_http_swigregister
gg_http_swigregister(gg_http)

GG_MAX_PATH = _libgadu.GG_MAX_PATH
class gg_file_info(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, gg_file_info, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, gg_file_info, name)
    __repr__ = _swig_repr
    __swig_setmethods__["mode"] = _libgadu.gg_file_info_mode_set
    __swig_getmethods__["mode"] = _libgadu.gg_file_info_mode_get
    if _newclass:mode = _swig_property(_libgadu.gg_file_info_mode_get, _libgadu.gg_file_info_mode_set)
    __swig_setmethods__["ctime"] = _libgadu.gg_file_info_ctime_set
    __swig_getmethods__["ctime"] = _libgadu.gg_file_info_ctime_get
    if _newclass:ctime = _swig_property(_libgadu.gg_file_info_ctime_get, _libgadu.gg_file_info_ctime_set)
    __swig_setmethods__["atime"] = _libgadu.gg_file_info_atime_set
    __swig_getmethods__["atime"] = _libgadu.gg_file_info_atime_get
    if _newclass:atime = _swig_property(_libgadu.gg_file_info_atime_get, _libgadu.gg_file_info_atime_set)
    __swig_setmethods__["mtime"] = _libgadu.gg_file_info_mtime_set
    __swig_getmethods__["mtime"] = _libgadu.gg_file_info_mtime_get
    if _newclass:mtime = _swig_property(_libgadu.gg_file_info_mtime_get, _libgadu.gg_file_info_mtime_set)
    __swig_setmethods__["size_hi"] = _libgadu.gg_file_info_size_hi_set
    __swig_getmethods__["size_hi"] = _libgadu.gg_file_info_size_hi_get
    if _newclass:size_hi = _swig_property(_libgadu.gg_file_info_size_hi_get, _libgadu.gg_file_info_size_hi_set)
    __swig_setmethods__["size"] = _libgadu.gg_file_info_size_set
    __swig_getmethods__["size"] = _libgadu.gg_file_info_size_get
    if _newclass:size = _swig_property(_libgadu.gg_file_info_size_get, _libgadu.gg_file_info_size_set)
    __swig_setmethods__["reserved0"] = _libgadu.gg_file_info_reserved0_set
    __swig_getmethods__["reserved0"] = _libgadu.gg_file_info_reserved0_get
    if _newclass:reserved0 = _swig_property(_libgadu.gg_file_info_reserved0_get, _libgadu.gg_file_info_reserved0_set)
    __swig_setmethods__["reserved1"] = _libgadu.gg_file_info_reserved1_set
    __swig_getmethods__["reserved1"] = _libgadu.gg_file_info_reserved1_get
    if _newclass:reserved1 = _swig_property(_libgadu.gg_file_info_reserved1_get, _libgadu.gg_file_info_reserved1_set)
    __swig_setmethods__["filename"] = _libgadu.gg_file_info_filename_set
    __swig_getmethods__["filename"] = _libgadu.gg_file_info_filename_get
    if _newclass:filename = _swig_property(_libgadu.gg_file_info_filename_get, _libgadu.gg_file_info_filename_set)
    __swig_setmethods__["short_filename"] = _libgadu.gg_file_info_short_filename_set
    __swig_getmethods__["short_filename"] = _libgadu.gg_file_info_short_filename_get
    if _newclass:short_filename = _swig_property(_libgadu.gg_file_info_short_filename_get, _libgadu.gg_file_info_short_filename_set)
    def __init__(self): 
        this = _libgadu.new_gg_file_info()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _libgadu.delete_gg_file_info
    __del__ = lambda self : None;
gg_file_info_swigregister = _libgadu.gg_file_info_swigregister
gg_file_info_swigregister(gg_file_info)

class gg_dcc(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, gg_dcc, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, gg_dcc, name)
    __repr__ = _swig_repr
    __swig_setmethods__["fd"] = _libgadu.gg_dcc_fd_set
    __swig_getmethods__["fd"] = _libgadu.gg_dcc_fd_get
    if _newclass:fd = _swig_property(_libgadu.gg_dcc_fd_get, _libgadu.gg_dcc_fd_set)
    __swig_setmethods__["check"] = _libgadu.gg_dcc_check_set
    __swig_getmethods__["check"] = _libgadu.gg_dcc_check_get
    if _newclass:check = _swig_property(_libgadu.gg_dcc_check_get, _libgadu.gg_dcc_check_set)
    __swig_setmethods__["state"] = _libgadu.gg_dcc_state_set
    __swig_getmethods__["state"] = _libgadu.gg_dcc_state_get
    if _newclass:state = _swig_property(_libgadu.gg_dcc_state_get, _libgadu.gg_dcc_state_set)
    __swig_setmethods__["error"] = _libgadu.gg_dcc_error_set
    __swig_getmethods__["error"] = _libgadu.gg_dcc_error_get
    if _newclass:error = _swig_property(_libgadu.gg_dcc_error_get, _libgadu.gg_dcc_error_set)
    __swig_setmethods__["type"] = _libgadu.gg_dcc_type_set
    __swig_getmethods__["type"] = _libgadu.gg_dcc_type_get
    if _newclass:type = _swig_property(_libgadu.gg_dcc_type_get, _libgadu.gg_dcc_type_set)
    __swig_setmethods__["id"] = _libgadu.gg_dcc_id_set
    __swig_getmethods__["id"] = _libgadu.gg_dcc_id_get
    if _newclass:id = _swig_property(_libgadu.gg_dcc_id_get, _libgadu.gg_dcc_id_set)
    __swig_setmethods__["timeout"] = _libgadu.gg_dcc_timeout_set
    __swig_getmethods__["timeout"] = _libgadu.gg_dcc_timeout_get
    if _newclass:timeout = _swig_property(_libgadu.gg_dcc_timeout_get, _libgadu.gg_dcc_timeout_set)
    __swig_setmethods__["callback"] = _libgadu.gg_dcc_callback_set
    __swig_getmethods__["callback"] = _libgadu.gg_dcc_callback_get
    if _newclass:callback = _swig_property(_libgadu.gg_dcc_callback_get, _libgadu.gg_dcc_callback_set)
    __swig_setmethods__["destroy"] = _libgadu.gg_dcc_destroy_set
    __swig_getmethods__["destroy"] = _libgadu.gg_dcc_destroy_get
    if _newclass:destroy = _swig_property(_libgadu.gg_dcc_destroy_get, _libgadu.gg_dcc_destroy_set)
    __swig_setmethods__["event"] = _libgadu.gg_dcc_event_set
    __swig_getmethods__["event"] = _libgadu.gg_dcc_event_get
    if _newclass:event = _swig_property(_libgadu.gg_dcc_event_get, _libgadu.gg_dcc_event_set)
    __swig_setmethods__["active"] = _libgadu.gg_dcc_active_set
    __swig_getmethods__["active"] = _libgadu.gg_dcc_active_get
    if _newclass:active = _swig_property(_libgadu.gg_dcc_active_get, _libgadu.gg_dcc_active_set)
    __swig_setmethods__["port"] = _libgadu.gg_dcc_port_set
    __swig_getmethods__["port"] = _libgadu.gg_dcc_port_get
    if _newclass:port = _swig_property(_libgadu.gg_dcc_port_get, _libgadu.gg_dcc_port_set)
    __swig_setmethods__["uin"] = _libgadu.gg_dcc_uin_set
    __swig_getmethods__["uin"] = _libgadu.gg_dcc_uin_get
    if _newclass:uin = _swig_property(_libgadu.gg_dcc_uin_get, _libgadu.gg_dcc_uin_set)
    __swig_setmethods__["peer_uin"] = _libgadu.gg_dcc_peer_uin_set
    __swig_getmethods__["peer_uin"] = _libgadu.gg_dcc_peer_uin_get
    if _newclass:peer_uin = _swig_property(_libgadu.gg_dcc_peer_uin_get, _libgadu.gg_dcc_peer_uin_set)
    __swig_setmethods__["file_fd"] = _libgadu.gg_dcc_file_fd_set
    __swig_getmethods__["file_fd"] = _libgadu.gg_dcc_file_fd_get
    if _newclass:file_fd = _swig_property(_libgadu.gg_dcc_file_fd_get, _libgadu.gg_dcc_file_fd_set)
    __swig_setmethods__["offset"] = _libgadu.gg_dcc_offset_set
    __swig_getmethods__["offset"] = _libgadu.gg_dcc_offset_get
    if _newclass:offset = _swig_property(_libgadu.gg_dcc_offset_get, _libgadu.gg_dcc_offset_set)
    __swig_setmethods__["chunk_size"] = _libgadu.gg_dcc_chunk_size_set
    __swig_getmethods__["chunk_size"] = _libgadu.gg_dcc_chunk_size_get
    if _newclass:chunk_size = _swig_property(_libgadu.gg_dcc_chunk_size_get, _libgadu.gg_dcc_chunk_size_set)
    __swig_setmethods__["chunk_offset"] = _libgadu.gg_dcc_chunk_offset_set
    __swig_getmethods__["chunk_offset"] = _libgadu.gg_dcc_chunk_offset_get
    if _newclass:chunk_offset = _swig_property(_libgadu.gg_dcc_chunk_offset_get, _libgadu.gg_dcc_chunk_offset_set)
    __swig_setmethods__["file_info"] = _libgadu.gg_dcc_file_info_set
    __swig_getmethods__["file_info"] = _libgadu.gg_dcc_file_info_get
    if _newclass:file_info = _swig_property(_libgadu.gg_dcc_file_info_get, _libgadu.gg_dcc_file_info_set)
    __swig_setmethods__["established"] = _libgadu.gg_dcc_established_set
    __swig_getmethods__["established"] = _libgadu.gg_dcc_established_get
    if _newclass:established = _swig_property(_libgadu.gg_dcc_established_get, _libgadu.gg_dcc_established_set)
    __swig_setmethods__["voice_buf"] = _libgadu.gg_dcc_voice_buf_set
    __swig_getmethods__["voice_buf"] = _libgadu.gg_dcc_voice_buf_get
    if _newclass:voice_buf = _swig_property(_libgadu.gg_dcc_voice_buf_get, _libgadu.gg_dcc_voice_buf_set)
    __swig_setmethods__["incoming"] = _libgadu.gg_dcc_incoming_set
    __swig_getmethods__["incoming"] = _libgadu.gg_dcc_incoming_get
    if _newclass:incoming = _swig_property(_libgadu.gg_dcc_incoming_get, _libgadu.gg_dcc_incoming_set)
    __swig_setmethods__["chunk_buf"] = _libgadu.gg_dcc_chunk_buf_set
    __swig_getmethods__["chunk_buf"] = _libgadu.gg_dcc_chunk_buf_get
    if _newclass:chunk_buf = _swig_property(_libgadu.gg_dcc_chunk_buf_get, _libgadu.gg_dcc_chunk_buf_set)
    __swig_setmethods__["remote_addr"] = _libgadu.gg_dcc_remote_addr_set
    __swig_getmethods__["remote_addr"] = _libgadu.gg_dcc_remote_addr_get
    if _newclass:remote_addr = _swig_property(_libgadu.gg_dcc_remote_addr_get, _libgadu.gg_dcc_remote_addr_set)
    __swig_setmethods__["remote_port"] = _libgadu.gg_dcc_remote_port_set
    __swig_getmethods__["remote_port"] = _libgadu.gg_dcc_remote_port_get
    if _newclass:remote_port = _swig_property(_libgadu.gg_dcc_remote_port_get, _libgadu.gg_dcc_remote_port_set)
    def __init__(self): 
        this = _libgadu.new_gg_dcc()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _libgadu.delete_gg_dcc
    __del__ = lambda self : None;
gg_dcc_swigregister = _libgadu.gg_dcc_swigregister
gg_dcc_swigregister(gg_dcc)

GG_DCC7_HASH_LEN = _libgadu.GG_DCC7_HASH_LEN
GG_DCC7_FILENAME_LEN = _libgadu.GG_DCC7_FILENAME_LEN
GG_DCC7_INFO_LEN = _libgadu.GG_DCC7_INFO_LEN
GG_DCC7_INFO_HASH_LEN = _libgadu.GG_DCC7_INFO_HASH_LEN
class gg_dcc7(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, gg_dcc7, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, gg_dcc7, name)
    __repr__ = _swig_repr
    __swig_setmethods__["fd"] = _libgadu.gg_dcc7_fd_set
    __swig_getmethods__["fd"] = _libgadu.gg_dcc7_fd_get
    if _newclass:fd = _swig_property(_libgadu.gg_dcc7_fd_get, _libgadu.gg_dcc7_fd_set)
    __swig_setmethods__["check"] = _libgadu.gg_dcc7_check_set
    __swig_getmethods__["check"] = _libgadu.gg_dcc7_check_get
    if _newclass:check = _swig_property(_libgadu.gg_dcc7_check_get, _libgadu.gg_dcc7_check_set)
    __swig_setmethods__["state"] = _libgadu.gg_dcc7_state_set
    __swig_getmethods__["state"] = _libgadu.gg_dcc7_state_get
    if _newclass:state = _swig_property(_libgadu.gg_dcc7_state_get, _libgadu.gg_dcc7_state_set)
    __swig_setmethods__["error"] = _libgadu.gg_dcc7_error_set
    __swig_getmethods__["error"] = _libgadu.gg_dcc7_error_get
    if _newclass:error = _swig_property(_libgadu.gg_dcc7_error_get, _libgadu.gg_dcc7_error_set)
    __swig_setmethods__["type"] = _libgadu.gg_dcc7_type_set
    __swig_getmethods__["type"] = _libgadu.gg_dcc7_type_get
    if _newclass:type = _swig_property(_libgadu.gg_dcc7_type_get, _libgadu.gg_dcc7_type_set)
    __swig_setmethods__["id"] = _libgadu.gg_dcc7_id_set
    __swig_getmethods__["id"] = _libgadu.gg_dcc7_id_get
    if _newclass:id = _swig_property(_libgadu.gg_dcc7_id_get, _libgadu.gg_dcc7_id_set)
    __swig_setmethods__["timeout"] = _libgadu.gg_dcc7_timeout_set
    __swig_getmethods__["timeout"] = _libgadu.gg_dcc7_timeout_get
    if _newclass:timeout = _swig_property(_libgadu.gg_dcc7_timeout_get, _libgadu.gg_dcc7_timeout_set)
    __swig_setmethods__["callback"] = _libgadu.gg_dcc7_callback_set
    __swig_getmethods__["callback"] = _libgadu.gg_dcc7_callback_get
    if _newclass:callback = _swig_property(_libgadu.gg_dcc7_callback_get, _libgadu.gg_dcc7_callback_set)
    __swig_setmethods__["destroy"] = _libgadu.gg_dcc7_destroy_set
    __swig_getmethods__["destroy"] = _libgadu.gg_dcc7_destroy_get
    if _newclass:destroy = _swig_property(_libgadu.gg_dcc7_destroy_get, _libgadu.gg_dcc7_destroy_set)
    __swig_setmethods__["cid"] = _libgadu.gg_dcc7_cid_set
    __swig_getmethods__["cid"] = _libgadu.gg_dcc7_cid_get
    if _newclass:cid = _swig_property(_libgadu.gg_dcc7_cid_get, _libgadu.gg_dcc7_cid_set)
    __swig_setmethods__["event"] = _libgadu.gg_dcc7_event_set
    __swig_getmethods__["event"] = _libgadu.gg_dcc7_event_get
    if _newclass:event = _swig_property(_libgadu.gg_dcc7_event_get, _libgadu.gg_dcc7_event_set)
    __swig_setmethods__["uin"] = _libgadu.gg_dcc7_uin_set
    __swig_getmethods__["uin"] = _libgadu.gg_dcc7_uin_get
    if _newclass:uin = _swig_property(_libgadu.gg_dcc7_uin_get, _libgadu.gg_dcc7_uin_set)
    __swig_setmethods__["peer_uin"] = _libgadu.gg_dcc7_peer_uin_set
    __swig_getmethods__["peer_uin"] = _libgadu.gg_dcc7_peer_uin_get
    if _newclass:peer_uin = _swig_property(_libgadu.gg_dcc7_peer_uin_get, _libgadu.gg_dcc7_peer_uin_set)
    __swig_setmethods__["file_fd"] = _libgadu.gg_dcc7_file_fd_set
    __swig_getmethods__["file_fd"] = _libgadu.gg_dcc7_file_fd_get
    if _newclass:file_fd = _swig_property(_libgadu.gg_dcc7_file_fd_get, _libgadu.gg_dcc7_file_fd_set)
    __swig_setmethods__["offset"] = _libgadu.gg_dcc7_offset_set
    __swig_getmethods__["offset"] = _libgadu.gg_dcc7_offset_get
    if _newclass:offset = _swig_property(_libgadu.gg_dcc7_offset_get, _libgadu.gg_dcc7_offset_set)
    __swig_setmethods__["size"] = _libgadu.gg_dcc7_size_set
    __swig_getmethods__["size"] = _libgadu.gg_dcc7_size_get
    if _newclass:size = _swig_property(_libgadu.gg_dcc7_size_get, _libgadu.gg_dcc7_size_set)
    __swig_setmethods__["filename"] = _libgadu.gg_dcc7_filename_set
    __swig_getmethods__["filename"] = _libgadu.gg_dcc7_filename_get
    if _newclass:filename = _swig_property(_libgadu.gg_dcc7_filename_get, _libgadu.gg_dcc7_filename_set)
    __swig_setmethods__["hash"] = _libgadu.gg_dcc7_hash_set
    __swig_getmethods__["hash"] = _libgadu.gg_dcc7_hash_get
    if _newclass:hash = _swig_property(_libgadu.gg_dcc7_hash_get, _libgadu.gg_dcc7_hash_set)
    __swig_setmethods__["dcc_type"] = _libgadu.gg_dcc7_dcc_type_set
    __swig_getmethods__["dcc_type"] = _libgadu.gg_dcc7_dcc_type_get
    if _newclass:dcc_type = _swig_property(_libgadu.gg_dcc7_dcc_type_get, _libgadu.gg_dcc7_dcc_type_set)
    __swig_setmethods__["established"] = _libgadu.gg_dcc7_established_set
    __swig_getmethods__["established"] = _libgadu.gg_dcc7_established_get
    if _newclass:established = _swig_property(_libgadu.gg_dcc7_established_get, _libgadu.gg_dcc7_established_set)
    __swig_setmethods__["incoming"] = _libgadu.gg_dcc7_incoming_set
    __swig_getmethods__["incoming"] = _libgadu.gg_dcc7_incoming_get
    if _newclass:incoming = _swig_property(_libgadu.gg_dcc7_incoming_get, _libgadu.gg_dcc7_incoming_set)
    __swig_setmethods__["reverse"] = _libgadu.gg_dcc7_reverse_set
    __swig_getmethods__["reverse"] = _libgadu.gg_dcc7_reverse_get
    if _newclass:reverse = _swig_property(_libgadu.gg_dcc7_reverse_get, _libgadu.gg_dcc7_reverse_set)
    __swig_setmethods__["local_addr"] = _libgadu.gg_dcc7_local_addr_set
    __swig_getmethods__["local_addr"] = _libgadu.gg_dcc7_local_addr_get
    if _newclass:local_addr = _swig_property(_libgadu.gg_dcc7_local_addr_get, _libgadu.gg_dcc7_local_addr_set)
    __swig_setmethods__["local_port"] = _libgadu.gg_dcc7_local_port_set
    __swig_getmethods__["local_port"] = _libgadu.gg_dcc7_local_port_get
    if _newclass:local_port = _swig_property(_libgadu.gg_dcc7_local_port_get, _libgadu.gg_dcc7_local_port_set)
    __swig_setmethods__["remote_addr"] = _libgadu.gg_dcc7_remote_addr_set
    __swig_getmethods__["remote_addr"] = _libgadu.gg_dcc7_remote_addr_get
    if _newclass:remote_addr = _swig_property(_libgadu.gg_dcc7_remote_addr_get, _libgadu.gg_dcc7_remote_addr_set)
    __swig_setmethods__["remote_port"] = _libgadu.gg_dcc7_remote_port_set
    __swig_getmethods__["remote_port"] = _libgadu.gg_dcc7_remote_port_get
    if _newclass:remote_port = _swig_property(_libgadu.gg_dcc7_remote_port_get, _libgadu.gg_dcc7_remote_port_set)
    __swig_setmethods__["sess"] = _libgadu.gg_dcc7_sess_set
    __swig_getmethods__["sess"] = _libgadu.gg_dcc7_sess_get
    if _newclass:sess = _swig_property(_libgadu.gg_dcc7_sess_get, _libgadu.gg_dcc7_sess_set)
    __swig_setmethods__["next"] = _libgadu.gg_dcc7_next_set
    __swig_getmethods__["next"] = _libgadu.gg_dcc7_next_get
    if _newclass:next = _swig_property(_libgadu.gg_dcc7_next_get, _libgadu.gg_dcc7_next_set)
    __swig_setmethods__["soft_timeout"] = _libgadu.gg_dcc7_soft_timeout_set
    __swig_getmethods__["soft_timeout"] = _libgadu.gg_dcc7_soft_timeout_get
    if _newclass:soft_timeout = _swig_property(_libgadu.gg_dcc7_soft_timeout_get, _libgadu.gg_dcc7_soft_timeout_set)
    __swig_setmethods__["seek"] = _libgadu.gg_dcc7_seek_set
    __swig_getmethods__["seek"] = _libgadu.gg_dcc7_seek_get
    if _newclass:seek = _swig_property(_libgadu.gg_dcc7_seek_get, _libgadu.gg_dcc7_seek_set)
    __swig_setmethods__["resolver"] = _libgadu.gg_dcc7_resolver_set
    __swig_getmethods__["resolver"] = _libgadu.gg_dcc7_resolver_get
    if _newclass:resolver = _swig_property(_libgadu.gg_dcc7_resolver_get, _libgadu.gg_dcc7_resolver_set)
    __swig_setmethods__["relay"] = _libgadu.gg_dcc7_relay_set
    __swig_getmethods__["relay"] = _libgadu.gg_dcc7_relay_get
    if _newclass:relay = _swig_property(_libgadu.gg_dcc7_relay_get, _libgadu.gg_dcc7_relay_set)
    __swig_setmethods__["relay_index"] = _libgadu.gg_dcc7_relay_index_set
    __swig_getmethods__["relay_index"] = _libgadu.gg_dcc7_relay_index_get
    if _newclass:relay_index = _swig_property(_libgadu.gg_dcc7_relay_index_get, _libgadu.gg_dcc7_relay_index_set)
    __swig_setmethods__["relay_count"] = _libgadu.gg_dcc7_relay_count_set
    __swig_getmethods__["relay_count"] = _libgadu.gg_dcc7_relay_count_get
    if _newclass:relay_count = _swig_property(_libgadu.gg_dcc7_relay_count_get, _libgadu.gg_dcc7_relay_count_set)
    __swig_setmethods__["relay_list"] = _libgadu.gg_dcc7_relay_list_set
    __swig_getmethods__["relay_list"] = _libgadu.gg_dcc7_relay_list_get
    if _newclass:relay_list = _swig_property(_libgadu.gg_dcc7_relay_list_get, _libgadu.gg_dcc7_relay_list_set)
    def __init__(self): 
        this = _libgadu.new_gg_dcc7()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _libgadu.delete_gg_dcc7
    __del__ = lambda self : None;
gg_dcc7_swigregister = _libgadu.gg_dcc7_swigregister
gg_dcc7_swigregister(gg_dcc7)

GG_SESSION_GG = _libgadu.GG_SESSION_GG
GG_SESSION_HTTP = _libgadu.GG_SESSION_HTTP
GG_SESSION_SEARCH = _libgadu.GG_SESSION_SEARCH
GG_SESSION_REGISTER = _libgadu.GG_SESSION_REGISTER
GG_SESSION_REMIND = _libgadu.GG_SESSION_REMIND
GG_SESSION_PASSWD = _libgadu.GG_SESSION_PASSWD
GG_SESSION_CHANGE = _libgadu.GG_SESSION_CHANGE
GG_SESSION_DCC = _libgadu.GG_SESSION_DCC
GG_SESSION_DCC_SOCKET = _libgadu.GG_SESSION_DCC_SOCKET
GG_SESSION_DCC_SEND = _libgadu.GG_SESSION_DCC_SEND
GG_SESSION_DCC_GET = _libgadu.GG_SESSION_DCC_GET
GG_SESSION_DCC_VOICE = _libgadu.GG_SESSION_DCC_VOICE
GG_SESSION_USERLIST_GET = _libgadu.GG_SESSION_USERLIST_GET
GG_SESSION_USERLIST_PUT = _libgadu.GG_SESSION_USERLIST_PUT
GG_SESSION_UNREGISTER = _libgadu.GG_SESSION_UNREGISTER
GG_SESSION_USERLIST_REMOVE = _libgadu.GG_SESSION_USERLIST_REMOVE
GG_SESSION_TOKEN = _libgadu.GG_SESSION_TOKEN
GG_SESSION_DCC7_SOCKET = _libgadu.GG_SESSION_DCC7_SOCKET
GG_SESSION_DCC7_SEND = _libgadu.GG_SESSION_DCC7_SEND
GG_SESSION_DCC7_GET = _libgadu.GG_SESSION_DCC7_GET
GG_SESSION_DCC7_VOICE = _libgadu.GG_SESSION_DCC7_VOICE
GG_SESSION_USER0 = _libgadu.GG_SESSION_USER0
GG_SESSION_USER1 = _libgadu.GG_SESSION_USER1
GG_SESSION_USER2 = _libgadu.GG_SESSION_USER2
GG_SESSION_USER3 = _libgadu.GG_SESSION_USER3
GG_SESSION_USER4 = _libgadu.GG_SESSION_USER4
GG_SESSION_USER5 = _libgadu.GG_SESSION_USER5
GG_SESSION_USER6 = _libgadu.GG_SESSION_USER6
GG_SESSION_USER7 = _libgadu.GG_SESSION_USER7
GG_STATE_IDLE = _libgadu.GG_STATE_IDLE
GG_STATE_RESOLVING = _libgadu.GG_STATE_RESOLVING
GG_STATE_CONNECTING = _libgadu.GG_STATE_CONNECTING
GG_STATE_READING_DATA = _libgadu.GG_STATE_READING_DATA
GG_STATE_ERROR = _libgadu.GG_STATE_ERROR
GG_STATE_CONNECTING_HUB = _libgadu.GG_STATE_CONNECTING_HUB
GG_STATE_CONNECTING_GG = _libgadu.GG_STATE_CONNECTING_GG
GG_STATE_READING_KEY = _libgadu.GG_STATE_READING_KEY
GG_STATE_READING_REPLY = _libgadu.GG_STATE_READING_REPLY
GG_STATE_CONNECTED = _libgadu.GG_STATE_CONNECTED
GG_STATE_SENDING_QUERY = _libgadu.GG_STATE_SENDING_QUERY
GG_STATE_READING_HEADER = _libgadu.GG_STATE_READING_HEADER
GG_STATE_PARSING = _libgadu.GG_STATE_PARSING
GG_STATE_DONE = _libgadu.GG_STATE_DONE
GG_STATE_LISTENING = _libgadu.GG_STATE_LISTENING
GG_STATE_READING_UIN_1 = _libgadu.GG_STATE_READING_UIN_1
GG_STATE_READING_UIN_2 = _libgadu.GG_STATE_READING_UIN_2
GG_STATE_SENDING_ACK = _libgadu.GG_STATE_SENDING_ACK
GG_STATE_READING_ACK = _libgadu.GG_STATE_READING_ACK
GG_STATE_READING_REQUEST = _libgadu.GG_STATE_READING_REQUEST
GG_STATE_SENDING_REQUEST = _libgadu.GG_STATE_SENDING_REQUEST
GG_STATE_SENDING_FILE_INFO = _libgadu.GG_STATE_SENDING_FILE_INFO
GG_STATE_READING_PRE_FILE_INFO = _libgadu.GG_STATE_READING_PRE_FILE_INFO
GG_STATE_READING_FILE_INFO = _libgadu.GG_STATE_READING_FILE_INFO
GG_STATE_SENDING_FILE_ACK = _libgadu.GG_STATE_SENDING_FILE_ACK
GG_STATE_READING_FILE_ACK = _libgadu.GG_STATE_READING_FILE_ACK
GG_STATE_SENDING_FILE_HEADER = _libgadu.GG_STATE_SENDING_FILE_HEADER
GG_STATE_READING_FILE_HEADER = _libgadu.GG_STATE_READING_FILE_HEADER
GG_STATE_GETTING_FILE = _libgadu.GG_STATE_GETTING_FILE
GG_STATE_SENDING_FILE = _libgadu.GG_STATE_SENDING_FILE
GG_STATE_READING_VOICE_ACK = _libgadu.GG_STATE_READING_VOICE_ACK
GG_STATE_READING_VOICE_HEADER = _libgadu.GG_STATE_READING_VOICE_HEADER
GG_STATE_READING_VOICE_SIZE = _libgadu.GG_STATE_READING_VOICE_SIZE
GG_STATE_READING_VOICE_DATA = _libgadu.GG_STATE_READING_VOICE_DATA
GG_STATE_SENDING_VOICE_ACK = _libgadu.GG_STATE_SENDING_VOICE_ACK
GG_STATE_SENDING_VOICE_REQUEST = _libgadu.GG_STATE_SENDING_VOICE_REQUEST
GG_STATE_READING_TYPE = _libgadu.GG_STATE_READING_TYPE
GG_STATE_TLS_NEGOTIATION = _libgadu.GG_STATE_TLS_NEGOTIATION
GG_STATE_REQUESTING_ID = _libgadu.GG_STATE_REQUESTING_ID
GG_STATE_WAITING_FOR_ACCEPT = _libgadu.GG_STATE_WAITING_FOR_ACCEPT
GG_STATE_WAITING_FOR_INFO = _libgadu.GG_STATE_WAITING_FOR_INFO
GG_STATE_READING_ID = _libgadu.GG_STATE_READING_ID
GG_STATE_SENDING_ID = _libgadu.GG_STATE_SENDING_ID
GG_STATE_RESOLVING_GG = _libgadu.GG_STATE_RESOLVING_GG
GG_STATE_RESOLVING_RELAY = _libgadu.GG_STATE_RESOLVING_RELAY
GG_STATE_CONNECTING_RELAY = _libgadu.GG_STATE_CONNECTING_RELAY
GG_STATE_READING_RELAY = _libgadu.GG_STATE_READING_RELAY
GG_STATE_DISCONNECTING = _libgadu.GG_STATE_DISCONNECTING
GG_CHECK_NONE = _libgadu.GG_CHECK_NONE
GG_CHECK_WRITE = _libgadu.GG_CHECK_WRITE
GG_CHECK_READ = _libgadu.GG_CHECK_READ
GG_SSL_DISABLED = _libgadu.GG_SSL_DISABLED
GG_SSL_ENABLED = _libgadu.GG_SSL_ENABLED
GG_SSL_REQUIRED = _libgadu.GG_SSL_REQUIRED
class gg_login_params(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, gg_login_params, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, gg_login_params, name)
    __repr__ = _swig_repr
    __swig_setmethods__["uin"] = _libgadu.gg_login_params_uin_set
    __swig_getmethods__["uin"] = _libgadu.gg_login_params_uin_get
    if _newclass:uin = _swig_property(_libgadu.gg_login_params_uin_get, _libgadu.gg_login_params_uin_set)
    __swig_setmethods__["password"] = _libgadu.gg_login_params_password_set
    __swig_getmethods__["password"] = _libgadu.gg_login_params_password_get
    if _newclass:password = _swig_property(_libgadu.gg_login_params_password_get, _libgadu.gg_login_params_password_set)
    __swig_setmethods__["async"] = _libgadu.gg_login_params_async_set
    __swig_getmethods__["async"] = _libgadu.gg_login_params_async_get
    if _newclass:async = _swig_property(_libgadu.gg_login_params_async_get, _libgadu.gg_login_params_async_set)
    __swig_setmethods__["status"] = _libgadu.gg_login_params_status_set
    __swig_getmethods__["status"] = _libgadu.gg_login_params_status_get
    if _newclass:status = _swig_property(_libgadu.gg_login_params_status_get, _libgadu.gg_login_params_status_set)
    __swig_setmethods__["status_descr"] = _libgadu.gg_login_params_status_descr_set
    __swig_getmethods__["status_descr"] = _libgadu.gg_login_params_status_descr_get
    if _newclass:status_descr = _swig_property(_libgadu.gg_login_params_status_descr_get, _libgadu.gg_login_params_status_descr_set)
    __swig_setmethods__["server_addr"] = _libgadu.gg_login_params_server_addr_set
    __swig_getmethods__["server_addr"] = _libgadu.gg_login_params_server_addr_get
    if _newclass:server_addr = _swig_property(_libgadu.gg_login_params_server_addr_get, _libgadu.gg_login_params_server_addr_set)
    __swig_setmethods__["server_port"] = _libgadu.gg_login_params_server_port_set
    __swig_getmethods__["server_port"] = _libgadu.gg_login_params_server_port_get
    if _newclass:server_port = _swig_property(_libgadu.gg_login_params_server_port_get, _libgadu.gg_login_params_server_port_set)
    __swig_setmethods__["client_addr"] = _libgadu.gg_login_params_client_addr_set
    __swig_getmethods__["client_addr"] = _libgadu.gg_login_params_client_addr_get
    if _newclass:client_addr = _swig_property(_libgadu.gg_login_params_client_addr_get, _libgadu.gg_login_params_client_addr_set)
    __swig_setmethods__["client_port"] = _libgadu.gg_login_params_client_port_set
    __swig_getmethods__["client_port"] = _libgadu.gg_login_params_client_port_get
    if _newclass:client_port = _swig_property(_libgadu.gg_login_params_client_port_get, _libgadu.gg_login_params_client_port_set)
    __swig_setmethods__["protocol_version"] = _libgadu.gg_login_params_protocol_version_set
    __swig_getmethods__["protocol_version"] = _libgadu.gg_login_params_protocol_version_get
    if _newclass:protocol_version = _swig_property(_libgadu.gg_login_params_protocol_version_get, _libgadu.gg_login_params_protocol_version_set)
    __swig_setmethods__["client_version"] = _libgadu.gg_login_params_client_version_set
    __swig_getmethods__["client_version"] = _libgadu.gg_login_params_client_version_get
    if _newclass:client_version = _swig_property(_libgadu.gg_login_params_client_version_get, _libgadu.gg_login_params_client_version_set)
    __swig_setmethods__["has_audio"] = _libgadu.gg_login_params_has_audio_set
    __swig_getmethods__["has_audio"] = _libgadu.gg_login_params_has_audio_get
    if _newclass:has_audio = _swig_property(_libgadu.gg_login_params_has_audio_get, _libgadu.gg_login_params_has_audio_set)
    __swig_setmethods__["last_sysmsg"] = _libgadu.gg_login_params_last_sysmsg_set
    __swig_getmethods__["last_sysmsg"] = _libgadu.gg_login_params_last_sysmsg_get
    if _newclass:last_sysmsg = _swig_property(_libgadu.gg_login_params_last_sysmsg_get, _libgadu.gg_login_params_last_sysmsg_set)
    __swig_setmethods__["external_addr"] = _libgadu.gg_login_params_external_addr_set
    __swig_getmethods__["external_addr"] = _libgadu.gg_login_params_external_addr_get
    if _newclass:external_addr = _swig_property(_libgadu.gg_login_params_external_addr_get, _libgadu.gg_login_params_external_addr_set)
    __swig_setmethods__["external_port"] = _libgadu.gg_login_params_external_port_set
    __swig_getmethods__["external_port"] = _libgadu.gg_login_params_external_port_get
    if _newclass:external_port = _swig_property(_libgadu.gg_login_params_external_port_get, _libgadu.gg_login_params_external_port_set)
    __swig_setmethods__["tls"] = _libgadu.gg_login_params_tls_set
    __swig_getmethods__["tls"] = _libgadu.gg_login_params_tls_get
    if _newclass:tls = _swig_property(_libgadu.gg_login_params_tls_get, _libgadu.gg_login_params_tls_set)
    __swig_setmethods__["image_size"] = _libgadu.gg_login_params_image_size_set
    __swig_getmethods__["image_size"] = _libgadu.gg_login_params_image_size_get
    if _newclass:image_size = _swig_property(_libgadu.gg_login_params_image_size_get, _libgadu.gg_login_params_image_size_set)
    __swig_setmethods__["era_omnix"] = _libgadu.gg_login_params_era_omnix_set
    __swig_getmethods__["era_omnix"] = _libgadu.gg_login_params_era_omnix_get
    if _newclass:era_omnix = _swig_property(_libgadu.gg_login_params_era_omnix_get, _libgadu.gg_login_params_era_omnix_set)
    __swig_setmethods__["hash_type"] = _libgadu.gg_login_params_hash_type_set
    __swig_getmethods__["hash_type"] = _libgadu.gg_login_params_hash_type_get
    if _newclass:hash_type = _swig_property(_libgadu.gg_login_params_hash_type_get, _libgadu.gg_login_params_hash_type_set)
    __swig_setmethods__["encoding"] = _libgadu.gg_login_params_encoding_set
    __swig_getmethods__["encoding"] = _libgadu.gg_login_params_encoding_get
    if _newclass:encoding = _swig_property(_libgadu.gg_login_params_encoding_get, _libgadu.gg_login_params_encoding_set)
    __swig_setmethods__["resolver"] = _libgadu.gg_login_params_resolver_set
    __swig_getmethods__["resolver"] = _libgadu.gg_login_params_resolver_get
    if _newclass:resolver = _swig_property(_libgadu.gg_login_params_resolver_get, _libgadu.gg_login_params_resolver_set)
    __swig_setmethods__["protocol_features"] = _libgadu.gg_login_params_protocol_features_set
    __swig_getmethods__["protocol_features"] = _libgadu.gg_login_params_protocol_features_get
    if _newclass:protocol_features = _swig_property(_libgadu.gg_login_params_protocol_features_get, _libgadu.gg_login_params_protocol_features_set)
    __swig_setmethods__["status_flags"] = _libgadu.gg_login_params_status_flags_set
    __swig_getmethods__["status_flags"] = _libgadu.gg_login_params_status_flags_get
    if _newclass:status_flags = _swig_property(_libgadu.gg_login_params_status_flags_get, _libgadu.gg_login_params_status_flags_set)
    __swig_setmethods__["dummy"] = _libgadu.gg_login_params_dummy_set
    __swig_getmethods__["dummy"] = _libgadu.gg_login_params_dummy_get
    if _newclass:dummy = _swig_property(_libgadu.gg_login_params_dummy_get, _libgadu.gg_login_params_dummy_set)
    def __init__(self): 
        this = _libgadu.new_gg_login_params()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _libgadu.delete_gg_login_params
    __del__ = lambda self : None;
gg_login_params_swigregister = _libgadu.gg_login_params_swigregister
gg_login_params_swigregister(gg_login_params)


def gg_login(*args):
  return _libgadu.gg_login(*args)
gg_login = _libgadu.gg_login

def gg_free_session(*args):
  return _libgadu.gg_free_session(*args)
gg_free_session = _libgadu.gg_free_session

def gg_logoff(*args):
  return _libgadu.gg_logoff(*args)
gg_logoff = _libgadu.gg_logoff

def gg_change_status(*args):
  return _libgadu.gg_change_status(*args)
gg_change_status = _libgadu.gg_change_status

def gg_change_status_descr(*args):
  return _libgadu.gg_change_status_descr(*args)
gg_change_status_descr = _libgadu.gg_change_status_descr

def gg_change_status_descr_time(*args):
  return _libgadu.gg_change_status_descr_time(*args)
gg_change_status_descr_time = _libgadu.gg_change_status_descr_time

def gg_change_status_flags(*args):
  return _libgadu.gg_change_status_flags(*args)
gg_change_status_flags = _libgadu.gg_change_status_flags

def gg_send_message(*args):
  return _libgadu.gg_send_message(*args)
gg_send_message = _libgadu.gg_send_message

def gg_send_message_richtext(*args):
  return _libgadu.gg_send_message_richtext(*args)
gg_send_message_richtext = _libgadu.gg_send_message_richtext

def gg_send_message_confer(*args):
  return _libgadu.gg_send_message_confer(*args)
gg_send_message_confer = _libgadu.gg_send_message_confer

def gg_send_message_confer_richtext(*args):
  return _libgadu.gg_send_message_confer_richtext(*args)
gg_send_message_confer_richtext = _libgadu.gg_send_message_confer_richtext

def gg_send_message_ctcp(*args):
  return _libgadu.gg_send_message_ctcp(*args)
gg_send_message_ctcp = _libgadu.gg_send_message_ctcp

def gg_ping(*args):
  return _libgadu.gg_ping(*args)
gg_ping = _libgadu.gg_ping

def gg_userlist_request(*args):
  return _libgadu.gg_userlist_request(*args)
gg_userlist_request = _libgadu.gg_userlist_request

def gg_userlist100_request(*args):
  return _libgadu.gg_userlist100_request(*args)
gg_userlist100_request = _libgadu.gg_userlist100_request

def gg_image_request(*args):
  return _libgadu.gg_image_request(*args)
gg_image_request = _libgadu.gg_image_request

def gg_image_reply(*args):
  return _libgadu.gg_image_reply(*args)
gg_image_reply = _libgadu.gg_image_reply

def gg_typing_notification(*args):
  return _libgadu.gg_typing_notification(*args)
gg_typing_notification = _libgadu.gg_typing_notification

def gg_crc32(*args):
  return _libgadu.gg_crc32(*args)
gg_crc32 = _libgadu.gg_crc32

def gg_session_set_resolver(*args):
  return _libgadu.gg_session_set_resolver(*args)
gg_session_set_resolver = _libgadu.gg_session_set_resolver

def gg_session_get_resolver(*args):
  return _libgadu.gg_session_get_resolver(*args)
gg_session_get_resolver = _libgadu.gg_session_get_resolver

def gg_session_set_custom_resolver(*args):
  return _libgadu.gg_session_set_custom_resolver(*args)
gg_session_set_custom_resolver = _libgadu.gg_session_set_custom_resolver

def gg_http_set_resolver(*args):
  return _libgadu.gg_http_set_resolver(*args)
gg_http_set_resolver = _libgadu.gg_http_set_resolver

def gg_http_get_resolver(*args):
  return _libgadu.gg_http_get_resolver(*args)
gg_http_get_resolver = _libgadu.gg_http_get_resolver

def gg_http_set_custom_resolver(*args):
  return _libgadu.gg_http_set_custom_resolver(*args)
gg_http_set_custom_resolver = _libgadu.gg_http_set_custom_resolver

def gg_global_set_resolver(*args):
  return _libgadu.gg_global_set_resolver(*args)
gg_global_set_resolver = _libgadu.gg_global_set_resolver

def gg_global_get_resolver():
  return _libgadu.gg_global_get_resolver()
gg_global_get_resolver = _libgadu.gg_global_get_resolver

def gg_global_set_custom_resolver(*args):
  return _libgadu.gg_global_set_custom_resolver(*args)
gg_global_set_custom_resolver = _libgadu.gg_global_set_custom_resolver

def gg_multilogon_disconnect(*args):
  return _libgadu.gg_multilogon_disconnect(*args)
gg_multilogon_disconnect = _libgadu.gg_multilogon_disconnect
GG_EVENT_NONE = _libgadu.GG_EVENT_NONE
GG_EVENT_MSG = _libgadu.GG_EVENT_MSG
GG_EVENT_NOTIFY = _libgadu.GG_EVENT_NOTIFY
GG_EVENT_NOTIFY_DESCR = _libgadu.GG_EVENT_NOTIFY_DESCR
GG_EVENT_STATUS = _libgadu.GG_EVENT_STATUS
GG_EVENT_ACK = _libgadu.GG_EVENT_ACK
GG_EVENT_PONG = _libgadu.GG_EVENT_PONG
GG_EVENT_CONN_FAILED = _libgadu.GG_EVENT_CONN_FAILED
GG_EVENT_CONN_SUCCESS = _libgadu.GG_EVENT_CONN_SUCCESS
GG_EVENT_DISCONNECT = _libgadu.GG_EVENT_DISCONNECT
GG_EVENT_DCC_NEW = _libgadu.GG_EVENT_DCC_NEW
GG_EVENT_DCC_ERROR = _libgadu.GG_EVENT_DCC_ERROR
GG_EVENT_DCC_DONE = _libgadu.GG_EVENT_DCC_DONE
GG_EVENT_DCC_CLIENT_ACCEPT = _libgadu.GG_EVENT_DCC_CLIENT_ACCEPT
GG_EVENT_DCC_CALLBACK = _libgadu.GG_EVENT_DCC_CALLBACK
GG_EVENT_DCC_NEED_FILE_INFO = _libgadu.GG_EVENT_DCC_NEED_FILE_INFO
GG_EVENT_DCC_NEED_FILE_ACK = _libgadu.GG_EVENT_DCC_NEED_FILE_ACK
GG_EVENT_DCC_NEED_VOICE_ACK = _libgadu.GG_EVENT_DCC_NEED_VOICE_ACK
GG_EVENT_DCC_VOICE_DATA = _libgadu.GG_EVENT_DCC_VOICE_DATA
GG_EVENT_PUBDIR50_SEARCH_REPLY = _libgadu.GG_EVENT_PUBDIR50_SEARCH_REPLY
GG_EVENT_PUBDIR50_READ = _libgadu.GG_EVENT_PUBDIR50_READ
GG_EVENT_PUBDIR50_WRITE = _libgadu.GG_EVENT_PUBDIR50_WRITE
GG_EVENT_STATUS60 = _libgadu.GG_EVENT_STATUS60
GG_EVENT_NOTIFY60 = _libgadu.GG_EVENT_NOTIFY60
GG_EVENT_USERLIST = _libgadu.GG_EVENT_USERLIST
GG_EVENT_IMAGE_REQUEST = _libgadu.GG_EVENT_IMAGE_REQUEST
GG_EVENT_IMAGE_REPLY = _libgadu.GG_EVENT_IMAGE_REPLY
GG_EVENT_DCC_ACK = _libgadu.GG_EVENT_DCC_ACK
GG_EVENT_DCC7_NEW = _libgadu.GG_EVENT_DCC7_NEW
GG_EVENT_DCC7_ACCEPT = _libgadu.GG_EVENT_DCC7_ACCEPT
GG_EVENT_DCC7_REJECT = _libgadu.GG_EVENT_DCC7_REJECT
GG_EVENT_DCC7_CONNECTED = _libgadu.GG_EVENT_DCC7_CONNECTED
GG_EVENT_DCC7_ERROR = _libgadu.GG_EVENT_DCC7_ERROR
GG_EVENT_DCC7_DONE = _libgadu.GG_EVENT_DCC7_DONE
GG_EVENT_DCC7_PENDING = _libgadu.GG_EVENT_DCC7_PENDING
GG_EVENT_XML_EVENT = _libgadu.GG_EVENT_XML_EVENT
GG_EVENT_DISCONNECT_ACK = _libgadu.GG_EVENT_DISCONNECT_ACK
GG_EVENT_TYPING_NOTIFICATION = _libgadu.GG_EVENT_TYPING_NOTIFICATION
GG_EVENT_USER_DATA = _libgadu.GG_EVENT_USER_DATA
GG_EVENT_MULTILOGON_MSG = _libgadu.GG_EVENT_MULTILOGON_MSG
GG_EVENT_MULTILOGON_INFO = _libgadu.GG_EVENT_MULTILOGON_INFO
GG_EVENT_USERLIST100_VERSION = _libgadu.GG_EVENT_USERLIST100_VERSION
GG_EVENT_USERLIST100_REPLY = _libgadu.GG_EVENT_USERLIST100_REPLY
GG_FAILURE_RESOLVING = _libgadu.GG_FAILURE_RESOLVING
GG_FAILURE_CONNECTING = _libgadu.GG_FAILURE_CONNECTING
GG_FAILURE_INVALID = _libgadu.GG_FAILURE_INVALID
GG_FAILURE_READING = _libgadu.GG_FAILURE_READING
GG_FAILURE_WRITING = _libgadu.GG_FAILURE_WRITING
GG_FAILURE_PASSWORD = _libgadu.GG_FAILURE_PASSWORD
GG_FAILURE_404 = _libgadu.GG_FAILURE_404
GG_FAILURE_TLS = _libgadu.GG_FAILURE_TLS
GG_FAILURE_NEED_EMAIL = _libgadu.GG_FAILURE_NEED_EMAIL
GG_FAILURE_INTRUDER = _libgadu.GG_FAILURE_INTRUDER
GG_FAILURE_UNAVAILABLE = _libgadu.GG_FAILURE_UNAVAILABLE
GG_FAILURE_PROXY = _libgadu.GG_FAILURE_PROXY
GG_FAILURE_HUB = _libgadu.GG_FAILURE_HUB
GG_ERROR_RESOLVING = _libgadu.GG_ERROR_RESOLVING
GG_ERROR_CONNECTING = _libgadu.GG_ERROR_CONNECTING
GG_ERROR_READING = _libgadu.GG_ERROR_READING
GG_ERROR_WRITING = _libgadu.GG_ERROR_WRITING
GG_ERROR_DCC_HANDSHAKE = _libgadu.GG_ERROR_DCC_HANDSHAKE
GG_ERROR_DCC_FILE = _libgadu.GG_ERROR_DCC_FILE
GG_ERROR_DCC_EOF = _libgadu.GG_ERROR_DCC_EOF
GG_ERROR_DCC_NET = _libgadu.GG_ERROR_DCC_NET
GG_ERROR_DCC_REFUSED = _libgadu.GG_ERROR_DCC_REFUSED
GG_ERROR_DCC7_HANDSHAKE = _libgadu.GG_ERROR_DCC7_HANDSHAKE
GG_ERROR_DCC7_FILE = _libgadu.GG_ERROR_DCC7_FILE
GG_ERROR_DCC7_EOF = _libgadu.GG_ERROR_DCC7_EOF
GG_ERROR_DCC7_NET = _libgadu.GG_ERROR_DCC7_NET
GG_ERROR_DCC7_REFUSED = _libgadu.GG_ERROR_DCC7_REFUSED
GG_ERROR_DCC7_RELAY = _libgadu.GG_ERROR_DCC7_RELAY
class gg_pubdir50_entry(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, gg_pubdir50_entry, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, gg_pubdir50_entry, name)
    __repr__ = _swig_repr
    __swig_setmethods__["num"] = _libgadu.gg_pubdir50_entry_num_set
    __swig_getmethods__["num"] = _libgadu.gg_pubdir50_entry_num_get
    if _newclass:num = _swig_property(_libgadu.gg_pubdir50_entry_num_get, _libgadu.gg_pubdir50_entry_num_set)
    __swig_setmethods__["field"] = _libgadu.gg_pubdir50_entry_field_set
    __swig_getmethods__["field"] = _libgadu.gg_pubdir50_entry_field_get
    if _newclass:field = _swig_property(_libgadu.gg_pubdir50_entry_field_get, _libgadu.gg_pubdir50_entry_field_set)
    __swig_setmethods__["value"] = _libgadu.gg_pubdir50_entry_value_set
    __swig_getmethods__["value"] = _libgadu.gg_pubdir50_entry_value_get
    if _newclass:value = _swig_property(_libgadu.gg_pubdir50_entry_value_get, _libgadu.gg_pubdir50_entry_value_set)
    def __init__(self): 
        this = _libgadu.new_gg_pubdir50_entry()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _libgadu.delete_gg_pubdir50_entry
    __del__ = lambda self : None;
gg_pubdir50_entry_swigregister = _libgadu.gg_pubdir50_entry_swigregister
gg_pubdir50_entry_swigregister(gg_pubdir50_entry)

class gg_pubdir50_s(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, gg_pubdir50_s, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, gg_pubdir50_s, name)
    __repr__ = _swig_repr
    __swig_setmethods__["count"] = _libgadu.gg_pubdir50_s_count_set
    __swig_getmethods__["count"] = _libgadu.gg_pubdir50_s_count_get
    if _newclass:count = _swig_property(_libgadu.gg_pubdir50_s_count_get, _libgadu.gg_pubdir50_s_count_set)
    __swig_setmethods__["next"] = _libgadu.gg_pubdir50_s_next_set
    __swig_getmethods__["next"] = _libgadu.gg_pubdir50_s_next_get
    if _newclass:next = _swig_property(_libgadu.gg_pubdir50_s_next_get, _libgadu.gg_pubdir50_s_next_set)
    __swig_setmethods__["type"] = _libgadu.gg_pubdir50_s_type_set
    __swig_getmethods__["type"] = _libgadu.gg_pubdir50_s_type_get
    if _newclass:type = _swig_property(_libgadu.gg_pubdir50_s_type_get, _libgadu.gg_pubdir50_s_type_set)
    __swig_setmethods__["seq"] = _libgadu.gg_pubdir50_s_seq_set
    __swig_getmethods__["seq"] = _libgadu.gg_pubdir50_s_seq_get
    if _newclass:seq = _swig_property(_libgadu.gg_pubdir50_s_seq_get, _libgadu.gg_pubdir50_s_seq_set)
    __swig_setmethods__["entries"] = _libgadu.gg_pubdir50_s_entries_set
    __swig_getmethods__["entries"] = _libgadu.gg_pubdir50_s_entries_get
    if _newclass:entries = _swig_property(_libgadu.gg_pubdir50_s_entries_get, _libgadu.gg_pubdir50_s_entries_set)
    __swig_setmethods__["entries_count"] = _libgadu.gg_pubdir50_s_entries_count_set
    __swig_getmethods__["entries_count"] = _libgadu.gg_pubdir50_s_entries_count_get
    if _newclass:entries_count = _swig_property(_libgadu.gg_pubdir50_s_entries_count_get, _libgadu.gg_pubdir50_s_entries_count_set)
    def __init__(self): 
        this = _libgadu.new_gg_pubdir50_s()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _libgadu.delete_gg_pubdir50_s
    __del__ = lambda self : None;
gg_pubdir50_s_swigregister = _libgadu.gg_pubdir50_s_swigregister
gg_pubdir50_s_swigregister(gg_pubdir50_s)

class gg_event_msg(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, gg_event_msg, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, gg_event_msg, name)
    __repr__ = _swig_repr
    __swig_setmethods__["sender"] = _libgadu.gg_event_msg_sender_set
    __swig_getmethods__["sender"] = _libgadu.gg_event_msg_sender_get
    if _newclass:sender = _swig_property(_libgadu.gg_event_msg_sender_get, _libgadu.gg_event_msg_sender_set)
    __swig_setmethods__["msgclass"] = _libgadu.gg_event_msg_msgclass_set
    __swig_getmethods__["msgclass"] = _libgadu.gg_event_msg_msgclass_get
    if _newclass:msgclass = _swig_property(_libgadu.gg_event_msg_msgclass_get, _libgadu.gg_event_msg_msgclass_set)
    __swig_setmethods__["time"] = _libgadu.gg_event_msg_time_set
    __swig_getmethods__["time"] = _libgadu.gg_event_msg_time_get
    if _newclass:time = _swig_property(_libgadu.gg_event_msg_time_get, _libgadu.gg_event_msg_time_set)
    __swig_setmethods__["message"] = _libgadu.gg_event_msg_message_set
    __swig_getmethods__["message"] = _libgadu.gg_event_msg_message_get
    if _newclass:message = _swig_property(_libgadu.gg_event_msg_message_get, _libgadu.gg_event_msg_message_set)
    __swig_setmethods__["recipients_count"] = _libgadu.gg_event_msg_recipients_count_set
    __swig_getmethods__["recipients_count"] = _libgadu.gg_event_msg_recipients_count_get
    if _newclass:recipients_count = _swig_property(_libgadu.gg_event_msg_recipients_count_get, _libgadu.gg_event_msg_recipients_count_set)
    __swig_setmethods__["recipients"] = _libgadu.gg_event_msg_recipients_set
    __swig_getmethods__["recipients"] = _libgadu.gg_event_msg_recipients_get
    if _newclass:recipients = _swig_property(_libgadu.gg_event_msg_recipients_get, _libgadu.gg_event_msg_recipients_set)
    __swig_setmethods__["formats_length"] = _libgadu.gg_event_msg_formats_length_set
    __swig_getmethods__["formats_length"] = _libgadu.gg_event_msg_formats_length_get
    if _newclass:formats_length = _swig_property(_libgadu.gg_event_msg_formats_length_get, _libgadu.gg_event_msg_formats_length_set)
    __swig_setmethods__["formats"] = _libgadu.gg_event_msg_formats_set
    __swig_getmethods__["formats"] = _libgadu.gg_event_msg_formats_get
    if _newclass:formats = _swig_property(_libgadu.gg_event_msg_formats_get, _libgadu.gg_event_msg_formats_set)
    __swig_setmethods__["seq"] = _libgadu.gg_event_msg_seq_set
    __swig_getmethods__["seq"] = _libgadu.gg_event_msg_seq_get
    if _newclass:seq = _swig_property(_libgadu.gg_event_msg_seq_get, _libgadu.gg_event_msg_seq_set)
    __swig_setmethods__["xhtml_message"] = _libgadu.gg_event_msg_xhtml_message_set
    __swig_getmethods__["xhtml_message"] = _libgadu.gg_event_msg_xhtml_message_get
    if _newclass:xhtml_message = _swig_property(_libgadu.gg_event_msg_xhtml_message_get, _libgadu.gg_event_msg_xhtml_message_set)
    def __init__(self): 
        this = _libgadu.new_gg_event_msg()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _libgadu.delete_gg_event_msg
    __del__ = lambda self : None;
gg_event_msg_swigregister = _libgadu.gg_event_msg_swigregister
gg_event_msg_swigregister(gg_event_msg)

class gg_event_notify_descr(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, gg_event_notify_descr, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, gg_event_notify_descr, name)
    __repr__ = _swig_repr
    __swig_setmethods__["notify"] = _libgadu.gg_event_notify_descr_notify_set
    __swig_getmethods__["notify"] = _libgadu.gg_event_notify_descr_notify_get
    if _newclass:notify = _swig_property(_libgadu.gg_event_notify_descr_notify_get, _libgadu.gg_event_notify_descr_notify_set)
    __swig_setmethods__["descr"] = _libgadu.gg_event_notify_descr_descr_set
    __swig_getmethods__["descr"] = _libgadu.gg_event_notify_descr_descr_get
    if _newclass:descr = _swig_property(_libgadu.gg_event_notify_descr_descr_get, _libgadu.gg_event_notify_descr_descr_set)
    def __init__(self): 
        this = _libgadu.new_gg_event_notify_descr()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _libgadu.delete_gg_event_notify_descr
    __del__ = lambda self : None;
gg_event_notify_descr_swigregister = _libgadu.gg_event_notify_descr_swigregister
gg_event_notify_descr_swigregister(gg_event_notify_descr)

class gg_event_status(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, gg_event_status, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, gg_event_status, name)
    __repr__ = _swig_repr
    __swig_setmethods__["uin"] = _libgadu.gg_event_status_uin_set
    __swig_getmethods__["uin"] = _libgadu.gg_event_status_uin_get
    if _newclass:uin = _swig_property(_libgadu.gg_event_status_uin_get, _libgadu.gg_event_status_uin_set)
    __swig_setmethods__["status"] = _libgadu.gg_event_status_status_set
    __swig_getmethods__["status"] = _libgadu.gg_event_status_status_get
    if _newclass:status = _swig_property(_libgadu.gg_event_status_status_get, _libgadu.gg_event_status_status_set)
    __swig_setmethods__["descr"] = _libgadu.gg_event_status_descr_set
    __swig_getmethods__["descr"] = _libgadu.gg_event_status_descr_get
    if _newclass:descr = _swig_property(_libgadu.gg_event_status_descr_get, _libgadu.gg_event_status_descr_set)
    def __init__(self): 
        this = _libgadu.new_gg_event_status()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _libgadu.delete_gg_event_status
    __del__ = lambda self : None;
gg_event_status_swigregister = _libgadu.gg_event_status_swigregister
gg_event_status_swigregister(gg_event_status)

class gg_event_status60(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, gg_event_status60, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, gg_event_status60, name)
    __repr__ = _swig_repr
    __swig_setmethods__["uin"] = _libgadu.gg_event_status60_uin_set
    __swig_getmethods__["uin"] = _libgadu.gg_event_status60_uin_get
    if _newclass:uin = _swig_property(_libgadu.gg_event_status60_uin_get, _libgadu.gg_event_status60_uin_set)
    __swig_setmethods__["status"] = _libgadu.gg_event_status60_status_set
    __swig_getmethods__["status"] = _libgadu.gg_event_status60_status_get
    if _newclass:status = _swig_property(_libgadu.gg_event_status60_status_get, _libgadu.gg_event_status60_status_set)
    __swig_setmethods__["remote_ip"] = _libgadu.gg_event_status60_remote_ip_set
    __swig_getmethods__["remote_ip"] = _libgadu.gg_event_status60_remote_ip_get
    if _newclass:remote_ip = _swig_property(_libgadu.gg_event_status60_remote_ip_get, _libgadu.gg_event_status60_remote_ip_set)
    __swig_setmethods__["remote_port"] = _libgadu.gg_event_status60_remote_port_set
    __swig_getmethods__["remote_port"] = _libgadu.gg_event_status60_remote_port_get
    if _newclass:remote_port = _swig_property(_libgadu.gg_event_status60_remote_port_get, _libgadu.gg_event_status60_remote_port_set)
    __swig_setmethods__["version"] = _libgadu.gg_event_status60_version_set
    __swig_getmethods__["version"] = _libgadu.gg_event_status60_version_get
    if _newclass:version = _swig_property(_libgadu.gg_event_status60_version_get, _libgadu.gg_event_status60_version_set)
    __swig_setmethods__["image_size"] = _libgadu.gg_event_status60_image_size_set
    __swig_getmethods__["image_size"] = _libgadu.gg_event_status60_image_size_get
    if _newclass:image_size = _swig_property(_libgadu.gg_event_status60_image_size_get, _libgadu.gg_event_status60_image_size_set)
    __swig_setmethods__["descr"] = _libgadu.gg_event_status60_descr_set
    __swig_getmethods__["descr"] = _libgadu.gg_event_status60_descr_get
    if _newclass:descr = _swig_property(_libgadu.gg_event_status60_descr_get, _libgadu.gg_event_status60_descr_set)
    __swig_setmethods__["time"] = _libgadu.gg_event_status60_time_set
    __swig_getmethods__["time"] = _libgadu.gg_event_status60_time_get
    if _newclass:time = _swig_property(_libgadu.gg_event_status60_time_get, _libgadu.gg_event_status60_time_set)
    def __init__(self): 
        this = _libgadu.new_gg_event_status60()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _libgadu.delete_gg_event_status60
    __del__ = lambda self : None;
gg_event_status60_swigregister = _libgadu.gg_event_status60_swigregister
gg_event_status60_swigregister(gg_event_status60)

class gg_event_notify60(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, gg_event_notify60, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, gg_event_notify60, name)
    __repr__ = _swig_repr
    __swig_setmethods__["uin"] = _libgadu.gg_event_notify60_uin_set
    __swig_getmethods__["uin"] = _libgadu.gg_event_notify60_uin_get
    if _newclass:uin = _swig_property(_libgadu.gg_event_notify60_uin_get, _libgadu.gg_event_notify60_uin_set)
    __swig_setmethods__["status"] = _libgadu.gg_event_notify60_status_set
    __swig_getmethods__["status"] = _libgadu.gg_event_notify60_status_get
    if _newclass:status = _swig_property(_libgadu.gg_event_notify60_status_get, _libgadu.gg_event_notify60_status_set)
    __swig_setmethods__["remote_ip"] = _libgadu.gg_event_notify60_remote_ip_set
    __swig_getmethods__["remote_ip"] = _libgadu.gg_event_notify60_remote_ip_get
    if _newclass:remote_ip = _swig_property(_libgadu.gg_event_notify60_remote_ip_get, _libgadu.gg_event_notify60_remote_ip_set)
    __swig_setmethods__["remote_port"] = _libgadu.gg_event_notify60_remote_port_set
    __swig_getmethods__["remote_port"] = _libgadu.gg_event_notify60_remote_port_get
    if _newclass:remote_port = _swig_property(_libgadu.gg_event_notify60_remote_port_get, _libgadu.gg_event_notify60_remote_port_set)
    __swig_setmethods__["version"] = _libgadu.gg_event_notify60_version_set
    __swig_getmethods__["version"] = _libgadu.gg_event_notify60_version_get
    if _newclass:version = _swig_property(_libgadu.gg_event_notify60_version_get, _libgadu.gg_event_notify60_version_set)
    __swig_setmethods__["image_size"] = _libgadu.gg_event_notify60_image_size_set
    __swig_getmethods__["image_size"] = _libgadu.gg_event_notify60_image_size_get
    if _newclass:image_size = _swig_property(_libgadu.gg_event_notify60_image_size_get, _libgadu.gg_event_notify60_image_size_set)
    __swig_setmethods__["descr"] = _libgadu.gg_event_notify60_descr_set
    __swig_getmethods__["descr"] = _libgadu.gg_event_notify60_descr_get
    if _newclass:descr = _swig_property(_libgadu.gg_event_notify60_descr_get, _libgadu.gg_event_notify60_descr_set)
    __swig_setmethods__["time"] = _libgadu.gg_event_notify60_time_set
    __swig_getmethods__["time"] = _libgadu.gg_event_notify60_time_get
    if _newclass:time = _swig_property(_libgadu.gg_event_notify60_time_get, _libgadu.gg_event_notify60_time_set)
    def __init__(self): 
        this = _libgadu.new_gg_event_notify60()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _libgadu.delete_gg_event_notify60
    __del__ = lambda self : None;
gg_event_notify60_swigregister = _libgadu.gg_event_notify60_swigregister
gg_event_notify60_swigregister(gg_event_notify60)

class gg_event_ack(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, gg_event_ack, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, gg_event_ack, name)
    __repr__ = _swig_repr
    __swig_setmethods__["recipient"] = _libgadu.gg_event_ack_recipient_set
    __swig_getmethods__["recipient"] = _libgadu.gg_event_ack_recipient_get
    if _newclass:recipient = _swig_property(_libgadu.gg_event_ack_recipient_get, _libgadu.gg_event_ack_recipient_set)
    __swig_setmethods__["status"] = _libgadu.gg_event_ack_status_set
    __swig_getmethods__["status"] = _libgadu.gg_event_ack_status_get
    if _newclass:status = _swig_property(_libgadu.gg_event_ack_status_get, _libgadu.gg_event_ack_status_set)
    __swig_setmethods__["seq"] = _libgadu.gg_event_ack_seq_set
    __swig_getmethods__["seq"] = _libgadu.gg_event_ack_seq_get
    if _newclass:seq = _swig_property(_libgadu.gg_event_ack_seq_get, _libgadu.gg_event_ack_seq_set)
    def __init__(self): 
        this = _libgadu.new_gg_event_ack()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _libgadu.delete_gg_event_ack
    __del__ = lambda self : None;
gg_event_ack_swigregister = _libgadu.gg_event_ack_swigregister
gg_event_ack_swigregister(gg_event_ack)

class gg_event_userlist(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, gg_event_userlist, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, gg_event_userlist, name)
    __repr__ = _swig_repr
    __swig_setmethods__["type"] = _libgadu.gg_event_userlist_type_set
    __swig_getmethods__["type"] = _libgadu.gg_event_userlist_type_get
    if _newclass:type = _swig_property(_libgadu.gg_event_userlist_type_get, _libgadu.gg_event_userlist_type_set)
    __swig_setmethods__["reply"] = _libgadu.gg_event_userlist_reply_set
    __swig_getmethods__["reply"] = _libgadu.gg_event_userlist_reply_get
    if _newclass:reply = _swig_property(_libgadu.gg_event_userlist_reply_get, _libgadu.gg_event_userlist_reply_set)
    def __init__(self): 
        this = _libgadu.new_gg_event_userlist()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _libgadu.delete_gg_event_userlist
    __del__ = lambda self : None;
gg_event_userlist_swigregister = _libgadu.gg_event_userlist_swigregister
gg_event_userlist_swigregister(gg_event_userlist)

class gg_event_dcc_voice_data(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, gg_event_dcc_voice_data, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, gg_event_dcc_voice_data, name)
    __repr__ = _swig_repr
    __swig_setmethods__["data"] = _libgadu.gg_event_dcc_voice_data_data_set
    __swig_getmethods__["data"] = _libgadu.gg_event_dcc_voice_data_data_get
    if _newclass:data = _swig_property(_libgadu.gg_event_dcc_voice_data_data_get, _libgadu.gg_event_dcc_voice_data_data_set)
    __swig_setmethods__["length"] = _libgadu.gg_event_dcc_voice_data_length_set
    __swig_getmethods__["length"] = _libgadu.gg_event_dcc_voice_data_length_get
    if _newclass:length = _swig_property(_libgadu.gg_event_dcc_voice_data_length_get, _libgadu.gg_event_dcc_voice_data_length_set)
    def __init__(self): 
        this = _libgadu.new_gg_event_dcc_voice_data()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _libgadu.delete_gg_event_dcc_voice_data
    __del__ = lambda self : None;
gg_event_dcc_voice_data_swigregister = _libgadu.gg_event_dcc_voice_data_swigregister
gg_event_dcc_voice_data_swigregister(gg_event_dcc_voice_data)

class gg_event_image_request(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, gg_event_image_request, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, gg_event_image_request, name)
    __repr__ = _swig_repr
    __swig_setmethods__["sender"] = _libgadu.gg_event_image_request_sender_set
    __swig_getmethods__["sender"] = _libgadu.gg_event_image_request_sender_get
    if _newclass:sender = _swig_property(_libgadu.gg_event_image_request_sender_get, _libgadu.gg_event_image_request_sender_set)
    __swig_setmethods__["size"] = _libgadu.gg_event_image_request_size_set
    __swig_getmethods__["size"] = _libgadu.gg_event_image_request_size_get
    if _newclass:size = _swig_property(_libgadu.gg_event_image_request_size_get, _libgadu.gg_event_image_request_size_set)
    __swig_setmethods__["crc32"] = _libgadu.gg_event_image_request_crc32_set
    __swig_getmethods__["crc32"] = _libgadu.gg_event_image_request_crc32_get
    if _newclass:crc32 = _swig_property(_libgadu.gg_event_image_request_crc32_get, _libgadu.gg_event_image_request_crc32_set)
    def __init__(self): 
        this = _libgadu.new_gg_event_image_request()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _libgadu.delete_gg_event_image_request
    __del__ = lambda self : None;
gg_event_image_request_swigregister = _libgadu.gg_event_image_request_swigregister
gg_event_image_request_swigregister(gg_event_image_request)

class gg_event_image_reply(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, gg_event_image_reply, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, gg_event_image_reply, name)
    __repr__ = _swig_repr
    __swig_setmethods__["sender"] = _libgadu.gg_event_image_reply_sender_set
    __swig_getmethods__["sender"] = _libgadu.gg_event_image_reply_sender_get
    if _newclass:sender = _swig_property(_libgadu.gg_event_image_reply_sender_get, _libgadu.gg_event_image_reply_sender_set)
    __swig_setmethods__["size"] = _libgadu.gg_event_image_reply_size_set
    __swig_getmethods__["size"] = _libgadu.gg_event_image_reply_size_get
    if _newclass:size = _swig_property(_libgadu.gg_event_image_reply_size_get, _libgadu.gg_event_image_reply_size_set)
    __swig_setmethods__["crc32"] = _libgadu.gg_event_image_reply_crc32_set
    __swig_getmethods__["crc32"] = _libgadu.gg_event_image_reply_crc32_get
    if _newclass:crc32 = _swig_property(_libgadu.gg_event_image_reply_crc32_get, _libgadu.gg_event_image_reply_crc32_set)
    __swig_setmethods__["filename"] = _libgadu.gg_event_image_reply_filename_set
    __swig_getmethods__["filename"] = _libgadu.gg_event_image_reply_filename_get
    if _newclass:filename = _swig_property(_libgadu.gg_event_image_reply_filename_get, _libgadu.gg_event_image_reply_filename_set)
    __swig_setmethods__["image"] = _libgadu.gg_event_image_reply_image_set
    __swig_getmethods__["image"] = _libgadu.gg_event_image_reply_image_get
    if _newclass:image = _swig_property(_libgadu.gg_event_image_reply_image_get, _libgadu.gg_event_image_reply_image_set)
    def __init__(self): 
        this = _libgadu.new_gg_event_image_reply()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _libgadu.delete_gg_event_image_reply
    __del__ = lambda self : None;
gg_event_image_reply_swigregister = _libgadu.gg_event_image_reply_swigregister
gg_event_image_reply_swigregister(gg_event_image_reply)

class gg_event_xml_event(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, gg_event_xml_event, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, gg_event_xml_event, name)
    __repr__ = _swig_repr
    __swig_setmethods__["data"] = _libgadu.gg_event_xml_event_data_set
    __swig_getmethods__["data"] = _libgadu.gg_event_xml_event_data_get
    if _newclass:data = _swig_property(_libgadu.gg_event_xml_event_data_get, _libgadu.gg_event_xml_event_data_set)
    def __init__(self): 
        this = _libgadu.new_gg_event_xml_event()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _libgadu.delete_gg_event_xml_event
    __del__ = lambda self : None;
gg_event_xml_event_swigregister = _libgadu.gg_event_xml_event_swigregister
gg_event_xml_event_swigregister(gg_event_xml_event)

class gg_event_dcc7_connected(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, gg_event_dcc7_connected, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, gg_event_dcc7_connected, name)
    __repr__ = _swig_repr
    __swig_setmethods__["dcc7"] = _libgadu.gg_event_dcc7_connected_dcc7_set
    __swig_getmethods__["dcc7"] = _libgadu.gg_event_dcc7_connected_dcc7_get
    if _newclass:dcc7 = _swig_property(_libgadu.gg_event_dcc7_connected_dcc7_get, _libgadu.gg_event_dcc7_connected_dcc7_set)
    def __init__(self): 
        this = _libgadu.new_gg_event_dcc7_connected()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _libgadu.delete_gg_event_dcc7_connected
    __del__ = lambda self : None;
gg_event_dcc7_connected_swigregister = _libgadu.gg_event_dcc7_connected_swigregister
gg_event_dcc7_connected_swigregister(gg_event_dcc7_connected)

class gg_event_dcc7_pending(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, gg_event_dcc7_pending, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, gg_event_dcc7_pending, name)
    __repr__ = _swig_repr
    __swig_setmethods__["dcc7"] = _libgadu.gg_event_dcc7_pending_dcc7_set
    __swig_getmethods__["dcc7"] = _libgadu.gg_event_dcc7_pending_dcc7_get
    if _newclass:dcc7 = _swig_property(_libgadu.gg_event_dcc7_pending_dcc7_get, _libgadu.gg_event_dcc7_pending_dcc7_set)
    def __init__(self): 
        this = _libgadu.new_gg_event_dcc7_pending()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _libgadu.delete_gg_event_dcc7_pending
    __del__ = lambda self : None;
gg_event_dcc7_pending_swigregister = _libgadu.gg_event_dcc7_pending_swigregister
gg_event_dcc7_pending_swigregister(gg_event_dcc7_pending)

class gg_event_dcc7_reject(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, gg_event_dcc7_reject, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, gg_event_dcc7_reject, name)
    __repr__ = _swig_repr
    __swig_setmethods__["dcc7"] = _libgadu.gg_event_dcc7_reject_dcc7_set
    __swig_getmethods__["dcc7"] = _libgadu.gg_event_dcc7_reject_dcc7_get
    if _newclass:dcc7 = _swig_property(_libgadu.gg_event_dcc7_reject_dcc7_get, _libgadu.gg_event_dcc7_reject_dcc7_set)
    __swig_setmethods__["reason"] = _libgadu.gg_event_dcc7_reject_reason_set
    __swig_getmethods__["reason"] = _libgadu.gg_event_dcc7_reject_reason_get
    if _newclass:reason = _swig_property(_libgadu.gg_event_dcc7_reject_reason_get, _libgadu.gg_event_dcc7_reject_reason_set)
    def __init__(self): 
        this = _libgadu.new_gg_event_dcc7_reject()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _libgadu.delete_gg_event_dcc7_reject
    __del__ = lambda self : None;
gg_event_dcc7_reject_swigregister = _libgadu.gg_event_dcc7_reject_swigregister
gg_event_dcc7_reject_swigregister(gg_event_dcc7_reject)

class gg_event_dcc7_accept(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, gg_event_dcc7_accept, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, gg_event_dcc7_accept, name)
    __repr__ = _swig_repr
    __swig_setmethods__["dcc7"] = _libgadu.gg_event_dcc7_accept_dcc7_set
    __swig_getmethods__["dcc7"] = _libgadu.gg_event_dcc7_accept_dcc7_get
    if _newclass:dcc7 = _swig_property(_libgadu.gg_event_dcc7_accept_dcc7_get, _libgadu.gg_event_dcc7_accept_dcc7_set)
    __swig_setmethods__["type"] = _libgadu.gg_event_dcc7_accept_type_set
    __swig_getmethods__["type"] = _libgadu.gg_event_dcc7_accept_type_get
    if _newclass:type = _swig_property(_libgadu.gg_event_dcc7_accept_type_get, _libgadu.gg_event_dcc7_accept_type_set)
    __swig_setmethods__["remote_ip"] = _libgadu.gg_event_dcc7_accept_remote_ip_set
    __swig_getmethods__["remote_ip"] = _libgadu.gg_event_dcc7_accept_remote_ip_get
    if _newclass:remote_ip = _swig_property(_libgadu.gg_event_dcc7_accept_remote_ip_get, _libgadu.gg_event_dcc7_accept_remote_ip_set)
    __swig_setmethods__["remote_port"] = _libgadu.gg_event_dcc7_accept_remote_port_set
    __swig_getmethods__["remote_port"] = _libgadu.gg_event_dcc7_accept_remote_port_get
    if _newclass:remote_port = _swig_property(_libgadu.gg_event_dcc7_accept_remote_port_get, _libgadu.gg_event_dcc7_accept_remote_port_set)
    def __init__(self): 
        this = _libgadu.new_gg_event_dcc7_accept()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _libgadu.delete_gg_event_dcc7_accept
    __del__ = lambda self : None;
gg_event_dcc7_accept_swigregister = _libgadu.gg_event_dcc7_accept_swigregister
gg_event_dcc7_accept_swigregister(gg_event_dcc7_accept)

class gg_event_dcc7_done(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, gg_event_dcc7_done, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, gg_event_dcc7_done, name)
    __repr__ = _swig_repr
    __swig_setmethods__["dcc7"] = _libgadu.gg_event_dcc7_done_dcc7_set
    __swig_getmethods__["dcc7"] = _libgadu.gg_event_dcc7_done_dcc7_get
    if _newclass:dcc7 = _swig_property(_libgadu.gg_event_dcc7_done_dcc7_get, _libgadu.gg_event_dcc7_done_dcc7_set)
    def __init__(self): 
        this = _libgadu.new_gg_event_dcc7_done()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _libgadu.delete_gg_event_dcc7_done
    __del__ = lambda self : None;
gg_event_dcc7_done_swigregister = _libgadu.gg_event_dcc7_done_swigregister
gg_event_dcc7_done_swigregister(gg_event_dcc7_done)

class gg_event_typing_notification(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, gg_event_typing_notification, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, gg_event_typing_notification, name)
    __repr__ = _swig_repr
    __swig_setmethods__["uin"] = _libgadu.gg_event_typing_notification_uin_set
    __swig_getmethods__["uin"] = _libgadu.gg_event_typing_notification_uin_get
    if _newclass:uin = _swig_property(_libgadu.gg_event_typing_notification_uin_get, _libgadu.gg_event_typing_notification_uin_set)
    __swig_setmethods__["length"] = _libgadu.gg_event_typing_notification_length_set
    __swig_getmethods__["length"] = _libgadu.gg_event_typing_notification_length_get
    if _newclass:length = _swig_property(_libgadu.gg_event_typing_notification_length_get, _libgadu.gg_event_typing_notification_length_set)
    def __init__(self): 
        this = _libgadu.new_gg_event_typing_notification()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _libgadu.delete_gg_event_typing_notification
    __del__ = lambda self : None;
gg_event_typing_notification_swigregister = _libgadu.gg_event_typing_notification_swigregister
gg_event_typing_notification_swigregister(gg_event_typing_notification)

class gg_event_user_data_attr(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, gg_event_user_data_attr, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, gg_event_user_data_attr, name)
    __repr__ = _swig_repr
    __swig_setmethods__["type"] = _libgadu.gg_event_user_data_attr_type_set
    __swig_getmethods__["type"] = _libgadu.gg_event_user_data_attr_type_get
    if _newclass:type = _swig_property(_libgadu.gg_event_user_data_attr_type_get, _libgadu.gg_event_user_data_attr_type_set)
    __swig_setmethods__["key"] = _libgadu.gg_event_user_data_attr_key_set
    __swig_getmethods__["key"] = _libgadu.gg_event_user_data_attr_key_get
    if _newclass:key = _swig_property(_libgadu.gg_event_user_data_attr_key_get, _libgadu.gg_event_user_data_attr_key_set)
    __swig_setmethods__["value"] = _libgadu.gg_event_user_data_attr_value_set
    __swig_getmethods__["value"] = _libgadu.gg_event_user_data_attr_value_get
    if _newclass:value = _swig_property(_libgadu.gg_event_user_data_attr_value_get, _libgadu.gg_event_user_data_attr_value_set)
    def __init__(self): 
        this = _libgadu.new_gg_event_user_data_attr()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _libgadu.delete_gg_event_user_data_attr
    __del__ = lambda self : None;
gg_event_user_data_attr_swigregister = _libgadu.gg_event_user_data_attr_swigregister
gg_event_user_data_attr_swigregister(gg_event_user_data_attr)

class gg_event_user_data_user(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, gg_event_user_data_user, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, gg_event_user_data_user, name)
    __repr__ = _swig_repr
    __swig_setmethods__["uin"] = _libgadu.gg_event_user_data_user_uin_set
    __swig_getmethods__["uin"] = _libgadu.gg_event_user_data_user_uin_get
    if _newclass:uin = _swig_property(_libgadu.gg_event_user_data_user_uin_get, _libgadu.gg_event_user_data_user_uin_set)
    __swig_setmethods__["attr_count"] = _libgadu.gg_event_user_data_user_attr_count_set
    __swig_getmethods__["attr_count"] = _libgadu.gg_event_user_data_user_attr_count_get
    if _newclass:attr_count = _swig_property(_libgadu.gg_event_user_data_user_attr_count_get, _libgadu.gg_event_user_data_user_attr_count_set)
    __swig_setmethods__["attrs"] = _libgadu.gg_event_user_data_user_attrs_set
    __swig_getmethods__["attrs"] = _libgadu.gg_event_user_data_user_attrs_get
    if _newclass:attrs = _swig_property(_libgadu.gg_event_user_data_user_attrs_get, _libgadu.gg_event_user_data_user_attrs_set)
    def __init__(self): 
        this = _libgadu.new_gg_event_user_data_user()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _libgadu.delete_gg_event_user_data_user
    __del__ = lambda self : None;
gg_event_user_data_user_swigregister = _libgadu.gg_event_user_data_user_swigregister
gg_event_user_data_user_swigregister(gg_event_user_data_user)

class gg_event_user_data(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, gg_event_user_data, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, gg_event_user_data, name)
    __repr__ = _swig_repr
    __swig_setmethods__["type"] = _libgadu.gg_event_user_data_type_set
    __swig_getmethods__["type"] = _libgadu.gg_event_user_data_type_get
    if _newclass:type = _swig_property(_libgadu.gg_event_user_data_type_get, _libgadu.gg_event_user_data_type_set)
    __swig_setmethods__["user_count"] = _libgadu.gg_event_user_data_user_count_set
    __swig_getmethods__["user_count"] = _libgadu.gg_event_user_data_user_count_get
    if _newclass:user_count = _swig_property(_libgadu.gg_event_user_data_user_count_get, _libgadu.gg_event_user_data_user_count_set)
    __swig_setmethods__["users"] = _libgadu.gg_event_user_data_users_set
    __swig_getmethods__["users"] = _libgadu.gg_event_user_data_users_get
    if _newclass:users = _swig_property(_libgadu.gg_event_user_data_users_get, _libgadu.gg_event_user_data_users_set)
    def __init__(self): 
        this = _libgadu.new_gg_event_user_data()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _libgadu.delete_gg_event_user_data
    __del__ = lambda self : None;
gg_event_user_data_swigregister = _libgadu.gg_event_user_data_swigregister
gg_event_user_data_swigregister(gg_event_user_data)

class gg_multilogon_session(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, gg_multilogon_session, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, gg_multilogon_session, name)
    __repr__ = _swig_repr
    __swig_setmethods__["id"] = _libgadu.gg_multilogon_session_id_set
    __swig_getmethods__["id"] = _libgadu.gg_multilogon_session_id_get
    if _newclass:id = _swig_property(_libgadu.gg_multilogon_session_id_get, _libgadu.gg_multilogon_session_id_set)
    __swig_setmethods__["name"] = _libgadu.gg_multilogon_session_name_set
    __swig_getmethods__["name"] = _libgadu.gg_multilogon_session_name_get
    if _newclass:name = _swig_property(_libgadu.gg_multilogon_session_name_get, _libgadu.gg_multilogon_session_name_set)
    __swig_setmethods__["remote_addr"] = _libgadu.gg_multilogon_session_remote_addr_set
    __swig_getmethods__["remote_addr"] = _libgadu.gg_multilogon_session_remote_addr_get
    if _newclass:remote_addr = _swig_property(_libgadu.gg_multilogon_session_remote_addr_get, _libgadu.gg_multilogon_session_remote_addr_set)
    __swig_setmethods__["status_flags"] = _libgadu.gg_multilogon_session_status_flags_set
    __swig_getmethods__["status_flags"] = _libgadu.gg_multilogon_session_status_flags_get
    if _newclass:status_flags = _swig_property(_libgadu.gg_multilogon_session_status_flags_get, _libgadu.gg_multilogon_session_status_flags_set)
    __swig_setmethods__["protocol_features"] = _libgadu.gg_multilogon_session_protocol_features_set
    __swig_getmethods__["protocol_features"] = _libgadu.gg_multilogon_session_protocol_features_get
    if _newclass:protocol_features = _swig_property(_libgadu.gg_multilogon_session_protocol_features_get, _libgadu.gg_multilogon_session_protocol_features_set)
    __swig_setmethods__["logon_time"] = _libgadu.gg_multilogon_session_logon_time_set
    __swig_getmethods__["logon_time"] = _libgadu.gg_multilogon_session_logon_time_get
    if _newclass:logon_time = _swig_property(_libgadu.gg_multilogon_session_logon_time_get, _libgadu.gg_multilogon_session_logon_time_set)
    def __init__(self): 
        this = _libgadu.new_gg_multilogon_session()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _libgadu.delete_gg_multilogon_session
    __del__ = lambda self : None;
gg_multilogon_session_swigregister = _libgadu.gg_multilogon_session_swigregister
gg_multilogon_session_swigregister(gg_multilogon_session)

class gg_event_multilogon_info(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, gg_event_multilogon_info, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, gg_event_multilogon_info, name)
    __repr__ = _swig_repr
    __swig_setmethods__["count"] = _libgadu.gg_event_multilogon_info_count_set
    __swig_getmethods__["count"] = _libgadu.gg_event_multilogon_info_count_get
    if _newclass:count = _swig_property(_libgadu.gg_event_multilogon_info_count_get, _libgadu.gg_event_multilogon_info_count_set)
    __swig_setmethods__["sessions"] = _libgadu.gg_event_multilogon_info_sessions_set
    __swig_getmethods__["sessions"] = _libgadu.gg_event_multilogon_info_sessions_get
    if _newclass:sessions = _swig_property(_libgadu.gg_event_multilogon_info_sessions_get, _libgadu.gg_event_multilogon_info_sessions_set)
    def __init__(self): 
        this = _libgadu.new_gg_event_multilogon_info()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _libgadu.delete_gg_event_multilogon_info
    __del__ = lambda self : None;
gg_event_multilogon_info_swigregister = _libgadu.gg_event_multilogon_info_swigregister
gg_event_multilogon_info_swigregister(gg_event_multilogon_info)

class gg_event_userlist100_version(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, gg_event_userlist100_version, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, gg_event_userlist100_version, name)
    __repr__ = _swig_repr
    __swig_setmethods__["version"] = _libgadu.gg_event_userlist100_version_version_set
    __swig_getmethods__["version"] = _libgadu.gg_event_userlist100_version_version_get
    if _newclass:version = _swig_property(_libgadu.gg_event_userlist100_version_version_get, _libgadu.gg_event_userlist100_version_version_set)
    def __init__(self): 
        this = _libgadu.new_gg_event_userlist100_version()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _libgadu.delete_gg_event_userlist100_version
    __del__ = lambda self : None;
gg_event_userlist100_version_swigregister = _libgadu.gg_event_userlist100_version_swigregister
gg_event_userlist100_version_swigregister(gg_event_userlist100_version)

class gg_event_userlist100_reply(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, gg_event_userlist100_reply, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, gg_event_userlist100_reply, name)
    __repr__ = _swig_repr
    __swig_setmethods__["type"] = _libgadu.gg_event_userlist100_reply_type_set
    __swig_getmethods__["type"] = _libgadu.gg_event_userlist100_reply_type_get
    if _newclass:type = _swig_property(_libgadu.gg_event_userlist100_reply_type_get, _libgadu.gg_event_userlist100_reply_type_set)
    __swig_setmethods__["version"] = _libgadu.gg_event_userlist100_reply_version_set
    __swig_getmethods__["version"] = _libgadu.gg_event_userlist100_reply_version_get
    if _newclass:version = _swig_property(_libgadu.gg_event_userlist100_reply_version_get, _libgadu.gg_event_userlist100_reply_version_set)
    __swig_setmethods__["format_type"] = _libgadu.gg_event_userlist100_reply_format_type_set
    __swig_getmethods__["format_type"] = _libgadu.gg_event_userlist100_reply_format_type_get
    if _newclass:format_type = _swig_property(_libgadu.gg_event_userlist100_reply_format_type_get, _libgadu.gg_event_userlist100_reply_format_type_set)
    __swig_setmethods__["reply"] = _libgadu.gg_event_userlist100_reply_reply_set
    __swig_getmethods__["reply"] = _libgadu.gg_event_userlist100_reply_reply_get
    if _newclass:reply = _swig_property(_libgadu.gg_event_userlist100_reply_reply_get, _libgadu.gg_event_userlist100_reply_reply_set)
    def __init__(self): 
        this = _libgadu.new_gg_event_userlist100_reply()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _libgadu.delete_gg_event_userlist100_reply
    __del__ = lambda self : None;
gg_event_userlist100_reply_swigregister = _libgadu.gg_event_userlist100_reply_swigregister
gg_event_userlist100_reply_swigregister(gg_event_userlist100_reply)

class gg_event_union(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, gg_event_union, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, gg_event_union, name)
    __repr__ = _swig_repr
    __swig_setmethods__["failure"] = _libgadu.gg_event_union_failure_set
    __swig_getmethods__["failure"] = _libgadu.gg_event_union_failure_get
    if _newclass:failure = _swig_property(_libgadu.gg_event_union_failure_get, _libgadu.gg_event_union_failure_set)
    __swig_setmethods__["notify"] = _libgadu.gg_event_union_notify_set
    __swig_getmethods__["notify"] = _libgadu.gg_event_union_notify_get
    if _newclass:notify = _swig_property(_libgadu.gg_event_union_notify_get, _libgadu.gg_event_union_notify_set)
    __swig_setmethods__["notify_descr"] = _libgadu.gg_event_union_notify_descr_set
    __swig_getmethods__["notify_descr"] = _libgadu.gg_event_union_notify_descr_get
    if _newclass:notify_descr = _swig_property(_libgadu.gg_event_union_notify_descr_get, _libgadu.gg_event_union_notify_descr_set)
    __swig_setmethods__["status"] = _libgadu.gg_event_union_status_set
    __swig_getmethods__["status"] = _libgadu.gg_event_union_status_get
    if _newclass:status = _swig_property(_libgadu.gg_event_union_status_get, _libgadu.gg_event_union_status_set)
    __swig_setmethods__["status60"] = _libgadu.gg_event_union_status60_set
    __swig_getmethods__["status60"] = _libgadu.gg_event_union_status60_get
    if _newclass:status60 = _swig_property(_libgadu.gg_event_union_status60_get, _libgadu.gg_event_union_status60_set)
    __swig_setmethods__["notify60"] = _libgadu.gg_event_union_notify60_set
    __swig_getmethods__["notify60"] = _libgadu.gg_event_union_notify60_get
    if _newclass:notify60 = _swig_property(_libgadu.gg_event_union_notify60_get, _libgadu.gg_event_union_notify60_set)
    __swig_setmethods__["msg"] = _libgadu.gg_event_union_msg_set
    __swig_getmethods__["msg"] = _libgadu.gg_event_union_msg_get
    if _newclass:msg = _swig_property(_libgadu.gg_event_union_msg_get, _libgadu.gg_event_union_msg_set)
    __swig_setmethods__["ack"] = _libgadu.gg_event_union_ack_set
    __swig_getmethods__["ack"] = _libgadu.gg_event_union_ack_get
    if _newclass:ack = _swig_property(_libgadu.gg_event_union_ack_get, _libgadu.gg_event_union_ack_set)
    __swig_setmethods__["image_request"] = _libgadu.gg_event_union_image_request_set
    __swig_getmethods__["image_request"] = _libgadu.gg_event_union_image_request_get
    if _newclass:image_request = _swig_property(_libgadu.gg_event_union_image_request_get, _libgadu.gg_event_union_image_request_set)
    __swig_setmethods__["image_reply"] = _libgadu.gg_event_union_image_reply_set
    __swig_getmethods__["image_reply"] = _libgadu.gg_event_union_image_reply_get
    if _newclass:image_reply = _swig_property(_libgadu.gg_event_union_image_reply_get, _libgadu.gg_event_union_image_reply_set)
    __swig_setmethods__["userlist"] = _libgadu.gg_event_union_userlist_set
    __swig_getmethods__["userlist"] = _libgadu.gg_event_union_userlist_get
    if _newclass:userlist = _swig_property(_libgadu.gg_event_union_userlist_get, _libgadu.gg_event_union_userlist_set)
    __swig_setmethods__["pubdir50"] = _libgadu.gg_event_union_pubdir50_set
    __swig_getmethods__["pubdir50"] = _libgadu.gg_event_union_pubdir50_get
    if _newclass:pubdir50 = _swig_property(_libgadu.gg_event_union_pubdir50_get, _libgadu.gg_event_union_pubdir50_set)
    __swig_setmethods__["xml_event"] = _libgadu.gg_event_union_xml_event_set
    __swig_getmethods__["xml_event"] = _libgadu.gg_event_union_xml_event_get
    if _newclass:xml_event = _swig_property(_libgadu.gg_event_union_xml_event_get, _libgadu.gg_event_union_xml_event_set)
    __swig_setmethods__["dcc_new"] = _libgadu.gg_event_union_dcc_new_set
    __swig_getmethods__["dcc_new"] = _libgadu.gg_event_union_dcc_new_get
    if _newclass:dcc_new = _swig_property(_libgadu.gg_event_union_dcc_new_get, _libgadu.gg_event_union_dcc_new_set)
    __swig_setmethods__["dcc_error"] = _libgadu.gg_event_union_dcc_error_set
    __swig_getmethods__["dcc_error"] = _libgadu.gg_event_union_dcc_error_get
    if _newclass:dcc_error = _swig_property(_libgadu.gg_event_union_dcc_error_get, _libgadu.gg_event_union_dcc_error_set)
    __swig_setmethods__["dcc_voice_data"] = _libgadu.gg_event_union_dcc_voice_data_set
    __swig_getmethods__["dcc_voice_data"] = _libgadu.gg_event_union_dcc_voice_data_get
    if _newclass:dcc_voice_data = _swig_property(_libgadu.gg_event_union_dcc_voice_data_get, _libgadu.gg_event_union_dcc_voice_data_set)
    __swig_setmethods__["dcc7_new"] = _libgadu.gg_event_union_dcc7_new_set
    __swig_getmethods__["dcc7_new"] = _libgadu.gg_event_union_dcc7_new_get
    if _newclass:dcc7_new = _swig_property(_libgadu.gg_event_union_dcc7_new_get, _libgadu.gg_event_union_dcc7_new_set)
    __swig_setmethods__["dcc7_error"] = _libgadu.gg_event_union_dcc7_error_set
    __swig_getmethods__["dcc7_error"] = _libgadu.gg_event_union_dcc7_error_get
    if _newclass:dcc7_error = _swig_property(_libgadu.gg_event_union_dcc7_error_get, _libgadu.gg_event_union_dcc7_error_set)
    __swig_setmethods__["dcc7_connected"] = _libgadu.gg_event_union_dcc7_connected_set
    __swig_getmethods__["dcc7_connected"] = _libgadu.gg_event_union_dcc7_connected_get
    if _newclass:dcc7_connected = _swig_property(_libgadu.gg_event_union_dcc7_connected_get, _libgadu.gg_event_union_dcc7_connected_set)
    __swig_setmethods__["dcc7_pending"] = _libgadu.gg_event_union_dcc7_pending_set
    __swig_getmethods__["dcc7_pending"] = _libgadu.gg_event_union_dcc7_pending_get
    if _newclass:dcc7_pending = _swig_property(_libgadu.gg_event_union_dcc7_pending_get, _libgadu.gg_event_union_dcc7_pending_set)
    __swig_setmethods__["dcc7_reject"] = _libgadu.gg_event_union_dcc7_reject_set
    __swig_getmethods__["dcc7_reject"] = _libgadu.gg_event_union_dcc7_reject_get
    if _newclass:dcc7_reject = _swig_property(_libgadu.gg_event_union_dcc7_reject_get, _libgadu.gg_event_union_dcc7_reject_set)
    __swig_setmethods__["dcc7_accept"] = _libgadu.gg_event_union_dcc7_accept_set
    __swig_getmethods__["dcc7_accept"] = _libgadu.gg_event_union_dcc7_accept_get
    if _newclass:dcc7_accept = _swig_property(_libgadu.gg_event_union_dcc7_accept_get, _libgadu.gg_event_union_dcc7_accept_set)
    __swig_setmethods__["dcc7_done"] = _libgadu.gg_event_union_dcc7_done_set
    __swig_getmethods__["dcc7_done"] = _libgadu.gg_event_union_dcc7_done_get
    if _newclass:dcc7_done = _swig_property(_libgadu.gg_event_union_dcc7_done_get, _libgadu.gg_event_union_dcc7_done_set)
    __swig_setmethods__["typing_notification"] = _libgadu.gg_event_union_typing_notification_set
    __swig_getmethods__["typing_notification"] = _libgadu.gg_event_union_typing_notification_get
    if _newclass:typing_notification = _swig_property(_libgadu.gg_event_union_typing_notification_get, _libgadu.gg_event_union_typing_notification_set)
    __swig_setmethods__["user_data"] = _libgadu.gg_event_union_user_data_set
    __swig_getmethods__["user_data"] = _libgadu.gg_event_union_user_data_get
    if _newclass:user_data = _swig_property(_libgadu.gg_event_union_user_data_get, _libgadu.gg_event_union_user_data_set)
    __swig_setmethods__["multilogon_msg"] = _libgadu.gg_event_union_multilogon_msg_set
    __swig_getmethods__["multilogon_msg"] = _libgadu.gg_event_union_multilogon_msg_get
    if _newclass:multilogon_msg = _swig_property(_libgadu.gg_event_union_multilogon_msg_get, _libgadu.gg_event_union_multilogon_msg_set)
    __swig_setmethods__["multilogon_info"] = _libgadu.gg_event_union_multilogon_info_set
    __swig_getmethods__["multilogon_info"] = _libgadu.gg_event_union_multilogon_info_get
    if _newclass:multilogon_info = _swig_property(_libgadu.gg_event_union_multilogon_info_get, _libgadu.gg_event_union_multilogon_info_set)
    __swig_setmethods__["userlist100_version"] = _libgadu.gg_event_union_userlist100_version_set
    __swig_getmethods__["userlist100_version"] = _libgadu.gg_event_union_userlist100_version_get
    if _newclass:userlist100_version = _swig_property(_libgadu.gg_event_union_userlist100_version_get, _libgadu.gg_event_union_userlist100_version_set)
    __swig_setmethods__["userlist100_reply"] = _libgadu.gg_event_union_userlist100_reply_set
    __swig_getmethods__["userlist100_reply"] = _libgadu.gg_event_union_userlist100_reply_get
    if _newclass:userlist100_reply = _swig_property(_libgadu.gg_event_union_userlist100_reply_get, _libgadu.gg_event_union_userlist100_reply_set)
    def __init__(self): 
        this = _libgadu.new_gg_event_union()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _libgadu.delete_gg_event_union
    __del__ = lambda self : None;
gg_event_union_swigregister = _libgadu.gg_event_union_swigregister
gg_event_union_swigregister(gg_event_union)

class gg_event(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, gg_event, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, gg_event, name)
    __repr__ = _swig_repr
    __swig_setmethods__["type"] = _libgadu.gg_event_type_set
    __swig_getmethods__["type"] = _libgadu.gg_event_type_get
    if _newclass:type = _swig_property(_libgadu.gg_event_type_get, _libgadu.gg_event_type_set)
    __swig_setmethods__["event"] = _libgadu.gg_event_event_set
    __swig_getmethods__["event"] = _libgadu.gg_event_event_get
    if _newclass:event = _swig_property(_libgadu.gg_event_event_get, _libgadu.gg_event_event_set)
    def __init__(self): 
        this = _libgadu.new_gg_event()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _libgadu.delete_gg_event
    __del__ = lambda self : None;
gg_event_swigregister = _libgadu.gg_event_swigregister
gg_event_swigregister(gg_event)


def gg_watch_fd(*args):
  return _libgadu.gg_watch_fd(*args)
gg_watch_fd = _libgadu.gg_watch_fd

def gg_free_event(*args):
  return _libgadu.gg_free_event(*args)
gg_free_event = _libgadu.gg_free_event

def gg_notify_ex(*args):
  return _libgadu.gg_notify_ex(*args)
gg_notify_ex = _libgadu.gg_notify_ex

def gg_notify(*args):
  return _libgadu.gg_notify(*args)
gg_notify = _libgadu.gg_notify

def gg_add_notify_ex(*args):
  return _libgadu.gg_add_notify_ex(*args)
gg_add_notify_ex = _libgadu.gg_add_notify_ex

def gg_add_notify(*args):
  return _libgadu.gg_add_notify(*args)
gg_add_notify = _libgadu.gg_add_notify

def gg_remove_notify_ex(*args):
  return _libgadu.gg_remove_notify_ex(*args)
gg_remove_notify_ex = _libgadu.gg_remove_notify_ex

def gg_remove_notify(*args):
  return _libgadu.gg_remove_notify(*args)
gg_remove_notify = _libgadu.gg_remove_notify

def gg_http_connect(*args):
  return _libgadu.gg_http_connect(*args)
gg_http_connect = _libgadu.gg_http_connect

def gg_http_watch_fd(*args):
  return _libgadu.gg_http_watch_fd(*args)
gg_http_watch_fd = _libgadu.gg_http_watch_fd

def gg_http_stop(*args):
  return _libgadu.gg_http_stop(*args)
gg_http_stop = _libgadu.gg_http_stop

def gg_http_free(*args):
  return _libgadu.gg_http_free(*args)
gg_http_free = _libgadu.gg_http_free

def gg_pubdir50(*args):
  return _libgadu.gg_pubdir50(*args)
gg_pubdir50 = _libgadu.gg_pubdir50

def gg_pubdir50_new(*args):
  return _libgadu.gg_pubdir50_new(*args)
gg_pubdir50_new = _libgadu.gg_pubdir50_new

def gg_pubdir50_add(*args):
  return _libgadu.gg_pubdir50_add(*args)
gg_pubdir50_add = _libgadu.gg_pubdir50_add

def gg_pubdir50_seq_set(*args):
  return _libgadu.gg_pubdir50_seq_set(*args)
gg_pubdir50_seq_set = _libgadu.gg_pubdir50_seq_set

def gg_pubdir50_get(*args):
  return _libgadu.gg_pubdir50_get(*args)
gg_pubdir50_get = _libgadu.gg_pubdir50_get

def gg_pubdir50_type(*args):
  return _libgadu.gg_pubdir50_type(*args)
gg_pubdir50_type = _libgadu.gg_pubdir50_type

def gg_pubdir50_count(*args):
  return _libgadu.gg_pubdir50_count(*args)
gg_pubdir50_count = _libgadu.gg_pubdir50_count

def gg_pubdir50_next(*args):
  return _libgadu.gg_pubdir50_next(*args)
gg_pubdir50_next = _libgadu.gg_pubdir50_next

def gg_pubdir50_seq(*args):
  return _libgadu.gg_pubdir50_seq(*args)
gg_pubdir50_seq = _libgadu.gg_pubdir50_seq

def gg_pubdir50_free(*args):
  return _libgadu.gg_pubdir50_free(*args)
gg_pubdir50_free = _libgadu.gg_pubdir50_free
GG_PUBDIR50_UIN = _libgadu.GG_PUBDIR50_UIN
GG_PUBDIR50_STATUS = _libgadu.GG_PUBDIR50_STATUS
GG_PUBDIR50_FIRSTNAME = _libgadu.GG_PUBDIR50_FIRSTNAME
GG_PUBDIR50_LASTNAME = _libgadu.GG_PUBDIR50_LASTNAME
GG_PUBDIR50_NICKNAME = _libgadu.GG_PUBDIR50_NICKNAME
GG_PUBDIR50_BIRTHYEAR = _libgadu.GG_PUBDIR50_BIRTHYEAR
GG_PUBDIR50_CITY = _libgadu.GG_PUBDIR50_CITY
GG_PUBDIR50_GENDER = _libgadu.GG_PUBDIR50_GENDER
GG_PUBDIR50_GENDER_FEMALE = _libgadu.GG_PUBDIR50_GENDER_FEMALE
GG_PUBDIR50_GENDER_MALE = _libgadu.GG_PUBDIR50_GENDER_MALE
GG_PUBDIR50_GENDER_SET_FEMALE = _libgadu.GG_PUBDIR50_GENDER_SET_FEMALE
GG_PUBDIR50_GENDER_SET_MALE = _libgadu.GG_PUBDIR50_GENDER_SET_MALE
GG_PUBDIR50_ACTIVE = _libgadu.GG_PUBDIR50_ACTIVE
GG_PUBDIR50_ACTIVE_TRUE = _libgadu.GG_PUBDIR50_ACTIVE_TRUE
GG_PUBDIR50_START = _libgadu.GG_PUBDIR50_START
GG_PUBDIR50_FAMILYNAME = _libgadu.GG_PUBDIR50_FAMILYNAME
GG_PUBDIR50_FAMILYCITY = _libgadu.GG_PUBDIR50_FAMILYCITY
class gg_pubdir(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, gg_pubdir, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, gg_pubdir, name)
    __repr__ = _swig_repr
    __swig_setmethods__["success"] = _libgadu.gg_pubdir_success_set
    __swig_getmethods__["success"] = _libgadu.gg_pubdir_success_get
    if _newclass:success = _swig_property(_libgadu.gg_pubdir_success_get, _libgadu.gg_pubdir_success_set)
    __swig_setmethods__["uin"] = _libgadu.gg_pubdir_uin_set
    __swig_getmethods__["uin"] = _libgadu.gg_pubdir_uin_get
    if _newclass:uin = _swig_property(_libgadu.gg_pubdir_uin_get, _libgadu.gg_pubdir_uin_set)
    def __init__(self): 
        this = _libgadu.new_gg_pubdir()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _libgadu.delete_gg_pubdir
    __del__ = lambda self : None;
gg_pubdir_swigregister = _libgadu.gg_pubdir_swigregister
gg_pubdir_swigregister(gg_pubdir)


def gg_pubdir_watch_fd(*args):
  return _libgadu.gg_pubdir_watch_fd(*args)
gg_pubdir_watch_fd = _libgadu.gg_pubdir_watch_fd

def gg_pubdir_free(*args):
  return _libgadu.gg_pubdir_free(*args)
gg_pubdir_free = _libgadu.gg_pubdir_free
class gg_token(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, gg_token, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, gg_token, name)
    __repr__ = _swig_repr
    __swig_setmethods__["width"] = _libgadu.gg_token_width_set
    __swig_getmethods__["width"] = _libgadu.gg_token_width_get
    if _newclass:width = _swig_property(_libgadu.gg_token_width_get, _libgadu.gg_token_width_set)
    __swig_setmethods__["height"] = _libgadu.gg_token_height_set
    __swig_getmethods__["height"] = _libgadu.gg_token_height_get
    if _newclass:height = _swig_property(_libgadu.gg_token_height_get, _libgadu.gg_token_height_set)
    __swig_setmethods__["length"] = _libgadu.gg_token_length_set
    __swig_getmethods__["length"] = _libgadu.gg_token_length_get
    if _newclass:length = _swig_property(_libgadu.gg_token_length_get, _libgadu.gg_token_length_set)
    __swig_setmethods__["tokenid"] = _libgadu.gg_token_tokenid_set
    __swig_getmethods__["tokenid"] = _libgadu.gg_token_tokenid_get
    if _newclass:tokenid = _swig_property(_libgadu.gg_token_tokenid_get, _libgadu.gg_token_tokenid_set)
    def __init__(self): 
        this = _libgadu.new_gg_token()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _libgadu.delete_gg_token
    __del__ = lambda self : None;
gg_token_swigregister = _libgadu.gg_token_swigregister
gg_token_swigregister(gg_token)


def gg_token_watch_fd(*args):
  return _libgadu.gg_token_watch_fd(*args)
gg_token_watch_fd = _libgadu.gg_token_watch_fd

def gg_token_free(*args):
  return _libgadu.gg_token_free(*args)
gg_token_free = _libgadu.gg_token_free

def gg_register3(*args):
  return _libgadu.gg_register3(*args)
gg_register3 = _libgadu.gg_register3

def gg_unregister3(*args):
  return _libgadu.gg_unregister3(*args)
gg_unregister3 = _libgadu.gg_unregister3

def gg_remind_passwd3(*args):
  return _libgadu.gg_remind_passwd3(*args)
gg_remind_passwd3 = _libgadu.gg_remind_passwd3

def gg_change_passwd4(*args):
  return _libgadu.gg_change_passwd4(*args)
gg_change_passwd4 = _libgadu.gg_change_passwd4

def gg_dcc_request(*args):
  return _libgadu.gg_dcc_request(*args)
gg_dcc_request = _libgadu.gg_dcc_request

def gg_dcc_send_file(*args):
  return _libgadu.gg_dcc_send_file(*args)
gg_dcc_send_file = _libgadu.gg_dcc_send_file

def gg_dcc_get_file(*args):
  return _libgadu.gg_dcc_get_file(*args)
gg_dcc_get_file = _libgadu.gg_dcc_get_file

def gg_dcc_voice_chat(*args):
  return _libgadu.gg_dcc_voice_chat(*args)
gg_dcc_voice_chat = _libgadu.gg_dcc_voice_chat

def gg_dcc_set_type(*args):
  return _libgadu.gg_dcc_set_type(*args)
gg_dcc_set_type = _libgadu.gg_dcc_set_type

def gg_dcc_fill_file_info(*args):
  return _libgadu.gg_dcc_fill_file_info(*args)
gg_dcc_fill_file_info = _libgadu.gg_dcc_fill_file_info

def gg_dcc_fill_file_info2(*args):
  return _libgadu.gg_dcc_fill_file_info2(*args)
gg_dcc_fill_file_info2 = _libgadu.gg_dcc_fill_file_info2

def gg_dcc_voice_send(*args):
  return _libgadu.gg_dcc_voice_send(*args)
gg_dcc_voice_send = _libgadu.gg_dcc_voice_send
GG_DCC_VOICE_FRAME_LENGTH = _libgadu.GG_DCC_VOICE_FRAME_LENGTH
GG_DCC_VOICE_FRAME_LENGTH_505 = _libgadu.GG_DCC_VOICE_FRAME_LENGTH_505

def gg_dcc_socket_create(*args):
  return _libgadu.gg_dcc_socket_create(*args)
gg_dcc_socket_create = _libgadu.gg_dcc_socket_create

def gg_dcc_watch_fd(*args):
  return _libgadu.gg_dcc_watch_fd(*args)
gg_dcc_watch_fd = _libgadu.gg_dcc_watch_fd

def gg_dcc_free(*args):
  return _libgadu.gg_dcc_free(*args)
gg_dcc_free = _libgadu.gg_dcc_free

def gg_dcc7_watch_fd(*args):
  return _libgadu.gg_dcc7_watch_fd(*args)
gg_dcc7_watch_fd = _libgadu.gg_dcc7_watch_fd

def gg_dcc7_send_file(*args):
  return _libgadu.gg_dcc7_send_file(*args)
gg_dcc7_send_file = _libgadu.gg_dcc7_send_file

def gg_dcc7_send_file_fd(*args):
  return _libgadu.gg_dcc7_send_file_fd(*args)
gg_dcc7_send_file_fd = _libgadu.gg_dcc7_send_file_fd

def gg_dcc7_accept(*args):
  return _libgadu.gg_dcc7_accept(*args)
gg_dcc7_accept = _libgadu.gg_dcc7_accept

def gg_dcc7_reject(*args):
  return _libgadu.gg_dcc7_reject(*args)
gg_dcc7_reject = _libgadu.gg_dcc7_reject

def gg_dcc7_free(*args):
  return _libgadu.gg_dcc7_free(*args)
gg_dcc7_free = _libgadu.gg_dcc7_free
GG_DEBUG_NET = _libgadu.GG_DEBUG_NET
GG_DEBUG_TRAFFIC = _libgadu.GG_DEBUG_TRAFFIC
GG_DEBUG_DUMP = _libgadu.GG_DEBUG_DUMP
GG_DEBUG_FUNCTION = _libgadu.GG_DEBUG_FUNCTION
GG_DEBUG_MISC = _libgadu.GG_DEBUG_MISC

def gg_debug(*args):
  return _libgadu.gg_debug(*args)
gg_debug = _libgadu.gg_debug

def gg_debug_session(*args):
  return _libgadu.gg_debug_session(*args)
gg_debug_session = _libgadu.gg_debug_session

def gg_libgadu_version():
  return _libgadu.gg_libgadu_version()
gg_libgadu_version = _libgadu.gg_libgadu_version
GG_LIBGADU_FEATURE_SSL = _libgadu.GG_LIBGADU_FEATURE_SSL
GG_LIBGADU_FEATURE_PTHREAD = _libgadu.GG_LIBGADU_FEATURE_PTHREAD
GG_LIBGADU_FEATURE_USERLIST100 = _libgadu.GG_LIBGADU_FEATURE_USERLIST100

def gg_libgadu_check_feature(*args):
  return _libgadu.gg_libgadu_check_feature(*args)
gg_libgadu_check_feature = _libgadu.gg_libgadu_check_feature
GG_LOGIN_HASH_GG32 = _libgadu.GG_LOGIN_HASH_GG32
GG_LOGIN_HASH_SHA1 = _libgadu.GG_LOGIN_HASH_SHA1
GG_PUBDIR50_WRITE = _libgadu.GG_PUBDIR50_WRITE
GG_PUBDIR50_READ = _libgadu.GG_PUBDIR50_READ
GG_PUBDIR50_SEARCH = _libgadu.GG_PUBDIR50_SEARCH
GG_PUBDIR50_SEARCH_REQUEST = _libgadu.GG_PUBDIR50_SEARCH_REQUEST
GG_PUBDIR50_SEARCH_REPLY = _libgadu.GG_PUBDIR50_SEARCH_REPLY
class gg_search_request(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, gg_search_request, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, gg_search_request, name)
    __repr__ = _swig_repr
    __swig_setmethods__["active"] = _libgadu.gg_search_request_active_set
    __swig_getmethods__["active"] = _libgadu.gg_search_request_active_get
    if _newclass:active = _swig_property(_libgadu.gg_search_request_active_get, _libgadu.gg_search_request_active_set)
    __swig_setmethods__["start"] = _libgadu.gg_search_request_start_set
    __swig_getmethods__["start"] = _libgadu.gg_search_request_start_get
    if _newclass:start = _swig_property(_libgadu.gg_search_request_start_get, _libgadu.gg_search_request_start_set)
    __swig_setmethods__["nickname"] = _libgadu.gg_search_request_nickname_set
    __swig_getmethods__["nickname"] = _libgadu.gg_search_request_nickname_get
    if _newclass:nickname = _swig_property(_libgadu.gg_search_request_nickname_get, _libgadu.gg_search_request_nickname_set)
    __swig_setmethods__["first_name"] = _libgadu.gg_search_request_first_name_set
    __swig_getmethods__["first_name"] = _libgadu.gg_search_request_first_name_get
    if _newclass:first_name = _swig_property(_libgadu.gg_search_request_first_name_get, _libgadu.gg_search_request_first_name_set)
    __swig_setmethods__["last_name"] = _libgadu.gg_search_request_last_name_set
    __swig_getmethods__["last_name"] = _libgadu.gg_search_request_last_name_get
    if _newclass:last_name = _swig_property(_libgadu.gg_search_request_last_name_get, _libgadu.gg_search_request_last_name_set)
    __swig_setmethods__["city"] = _libgadu.gg_search_request_city_set
    __swig_getmethods__["city"] = _libgadu.gg_search_request_city_get
    if _newclass:city = _swig_property(_libgadu.gg_search_request_city_get, _libgadu.gg_search_request_city_set)
    __swig_setmethods__["gender"] = _libgadu.gg_search_request_gender_set
    __swig_getmethods__["gender"] = _libgadu.gg_search_request_gender_get
    if _newclass:gender = _swig_property(_libgadu.gg_search_request_gender_get, _libgadu.gg_search_request_gender_set)
    __swig_setmethods__["min_birth"] = _libgadu.gg_search_request_min_birth_set
    __swig_getmethods__["min_birth"] = _libgadu.gg_search_request_min_birth_get
    if _newclass:min_birth = _swig_property(_libgadu.gg_search_request_min_birth_get, _libgadu.gg_search_request_min_birth_set)
    __swig_setmethods__["max_birth"] = _libgadu.gg_search_request_max_birth_set
    __swig_getmethods__["max_birth"] = _libgadu.gg_search_request_max_birth_get
    if _newclass:max_birth = _swig_property(_libgadu.gg_search_request_max_birth_get, _libgadu.gg_search_request_max_birth_set)
    __swig_setmethods__["email"] = _libgadu.gg_search_request_email_set
    __swig_getmethods__["email"] = _libgadu.gg_search_request_email_get
    if _newclass:email = _swig_property(_libgadu.gg_search_request_email_get, _libgadu.gg_search_request_email_set)
    __swig_setmethods__["phone"] = _libgadu.gg_search_request_phone_set
    __swig_getmethods__["phone"] = _libgadu.gg_search_request_phone_get
    if _newclass:phone = _swig_property(_libgadu.gg_search_request_phone_get, _libgadu.gg_search_request_phone_set)
    __swig_setmethods__["uin"] = _libgadu.gg_search_request_uin_set
    __swig_getmethods__["uin"] = _libgadu.gg_search_request_uin_get
    if _newclass:uin = _swig_property(_libgadu.gg_search_request_uin_get, _libgadu.gg_search_request_uin_set)
    def __init__(self): 
        this = _libgadu.new_gg_search_request()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _libgadu.delete_gg_search_request
    __del__ = lambda self : None;
gg_search_request_swigregister = _libgadu.gg_search_request_swigregister
gg_search_request_swigregister(gg_search_request)
cvar = _libgadu.cvar

class gg_search(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, gg_search, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, gg_search, name)
    __repr__ = _swig_repr
    __swig_setmethods__["count"] = _libgadu.gg_search_count_set
    __swig_getmethods__["count"] = _libgadu.gg_search_count_get
    if _newclass:count = _swig_property(_libgadu.gg_search_count_get, _libgadu.gg_search_count_set)
    __swig_setmethods__["results"] = _libgadu.gg_search_results_set
    __swig_getmethods__["results"] = _libgadu.gg_search_results_get
    if _newclass:results = _swig_property(_libgadu.gg_search_results_get, _libgadu.gg_search_results_set)
    def __init__(self): 
        this = _libgadu.new_gg_search()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _libgadu.delete_gg_search
    __del__ = lambda self : None;
gg_search_swigregister = _libgadu.gg_search_swigregister
gg_search_swigregister(gg_search)

class gg_search_result(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, gg_search_result, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, gg_search_result, name)
    __repr__ = _swig_repr
    __swig_setmethods__["uin"] = _libgadu.gg_search_result_uin_set
    __swig_getmethods__["uin"] = _libgadu.gg_search_result_uin_get
    if _newclass:uin = _swig_property(_libgadu.gg_search_result_uin_get, _libgadu.gg_search_result_uin_set)
    __swig_setmethods__["first_name"] = _libgadu.gg_search_result_first_name_set
    __swig_getmethods__["first_name"] = _libgadu.gg_search_result_first_name_get
    if _newclass:first_name = _swig_property(_libgadu.gg_search_result_first_name_get, _libgadu.gg_search_result_first_name_set)
    __swig_setmethods__["last_name"] = _libgadu.gg_search_result_last_name_set
    __swig_getmethods__["last_name"] = _libgadu.gg_search_result_last_name_get
    if _newclass:last_name = _swig_property(_libgadu.gg_search_result_last_name_get, _libgadu.gg_search_result_last_name_set)
    __swig_setmethods__["nickname"] = _libgadu.gg_search_result_nickname_set
    __swig_getmethods__["nickname"] = _libgadu.gg_search_result_nickname_get
    if _newclass:nickname = _swig_property(_libgadu.gg_search_result_nickname_get, _libgadu.gg_search_result_nickname_set)
    __swig_setmethods__["born"] = _libgadu.gg_search_result_born_set
    __swig_getmethods__["born"] = _libgadu.gg_search_result_born_get
    if _newclass:born = _swig_property(_libgadu.gg_search_result_born_get, _libgadu.gg_search_result_born_set)
    __swig_setmethods__["gender"] = _libgadu.gg_search_result_gender_set
    __swig_getmethods__["gender"] = _libgadu.gg_search_result_gender_get
    if _newclass:gender = _swig_property(_libgadu.gg_search_result_gender_get, _libgadu.gg_search_result_gender_set)
    __swig_setmethods__["city"] = _libgadu.gg_search_result_city_set
    __swig_getmethods__["city"] = _libgadu.gg_search_result_city_get
    if _newclass:city = _swig_property(_libgadu.gg_search_result_city_get, _libgadu.gg_search_result_city_set)
    __swig_setmethods__["active"] = _libgadu.gg_search_result_active_set
    __swig_getmethods__["active"] = _libgadu.gg_search_result_active_get
    if _newclass:active = _swig_property(_libgadu.gg_search_result_active_get, _libgadu.gg_search_result_active_set)
    def __init__(self): 
        this = _libgadu.new_gg_search_result()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _libgadu.delete_gg_search_result
    __del__ = lambda self : None;
gg_search_result_swigregister = _libgadu.gg_search_result_swigregister
gg_search_result_swigregister(gg_search_result)

GG_GENDER_NONE = _libgadu.GG_GENDER_NONE
GG_GENDER_FEMALE = _libgadu.GG_GENDER_FEMALE
GG_GENDER_MALE = _libgadu.GG_GENDER_MALE

def gg_search_watch_fd(*args):
  return _libgadu.gg_search_watch_fd(*args)
gg_search_watch_fd = _libgadu.gg_search_watch_fd

def gg_free_search(*args):
  return _libgadu.gg_free_search(*args)
gg_free_search = _libgadu.gg_free_search

def gg_search_request_mode_0(*args):
  return _libgadu.gg_search_request_mode_0(*args)
gg_search_request_mode_0 = _libgadu.gg_search_request_mode_0

def gg_search_request_mode_1(*args):
  return _libgadu.gg_search_request_mode_1(*args)
gg_search_request_mode_1 = _libgadu.gg_search_request_mode_1

def gg_search_request_mode_2(*args):
  return _libgadu.gg_search_request_mode_2(*args)
gg_search_request_mode_2 = _libgadu.gg_search_request_mode_2

def gg_search_request_mode_3(*args):
  return _libgadu.gg_search_request_mode_3(*args)
gg_search_request_mode_3 = _libgadu.gg_search_request_mode_3

def gg_search_request_free(*args):
  return _libgadu.gg_search_request_free(*args)
gg_search_request_free = _libgadu.gg_search_request_free

def gg_register(*args):
  return _libgadu.gg_register(*args)
gg_register = _libgadu.gg_register

def gg_register2(*args):
  return _libgadu.gg_register2(*args)
gg_register2 = _libgadu.gg_register2

def gg_unregister(*args):
  return _libgadu.gg_unregister(*args)
gg_unregister = _libgadu.gg_unregister

def gg_unregister2(*args):
  return _libgadu.gg_unregister2(*args)
gg_unregister2 = _libgadu.gg_unregister2

def gg_remind_passwd(*args):
  return _libgadu.gg_remind_passwd(*args)
gg_remind_passwd = _libgadu.gg_remind_passwd

def gg_remind_passwd2(*args):
  return _libgadu.gg_remind_passwd2(*args)
gg_remind_passwd2 = _libgadu.gg_remind_passwd2

def gg_change_passwd(*args):
  return _libgadu.gg_change_passwd(*args)
gg_change_passwd = _libgadu.gg_change_passwd

def gg_change_passwd2(*args):
  return _libgadu.gg_change_passwd2(*args)
gg_change_passwd2 = _libgadu.gg_change_passwd2

def gg_change_passwd3(*args):
  return _libgadu.gg_change_passwd3(*args)
gg_change_passwd3 = _libgadu.gg_change_passwd3
class gg_change_info_request(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, gg_change_info_request, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, gg_change_info_request, name)
    __repr__ = _swig_repr
    __swig_setmethods__["first_name"] = _libgadu.gg_change_info_request_first_name_set
    __swig_getmethods__["first_name"] = _libgadu.gg_change_info_request_first_name_get
    if _newclass:first_name = _swig_property(_libgadu.gg_change_info_request_first_name_get, _libgadu.gg_change_info_request_first_name_set)
    __swig_setmethods__["last_name"] = _libgadu.gg_change_info_request_last_name_set
    __swig_getmethods__["last_name"] = _libgadu.gg_change_info_request_last_name_get
    if _newclass:last_name = _swig_property(_libgadu.gg_change_info_request_last_name_get, _libgadu.gg_change_info_request_last_name_set)
    __swig_setmethods__["nickname"] = _libgadu.gg_change_info_request_nickname_set
    __swig_getmethods__["nickname"] = _libgadu.gg_change_info_request_nickname_get
    if _newclass:nickname = _swig_property(_libgadu.gg_change_info_request_nickname_get, _libgadu.gg_change_info_request_nickname_set)
    __swig_setmethods__["email"] = _libgadu.gg_change_info_request_email_set
    __swig_getmethods__["email"] = _libgadu.gg_change_info_request_email_get
    if _newclass:email = _swig_property(_libgadu.gg_change_info_request_email_get, _libgadu.gg_change_info_request_email_set)
    __swig_setmethods__["born"] = _libgadu.gg_change_info_request_born_set
    __swig_getmethods__["born"] = _libgadu.gg_change_info_request_born_get
    if _newclass:born = _swig_property(_libgadu.gg_change_info_request_born_get, _libgadu.gg_change_info_request_born_set)
    __swig_setmethods__["gender"] = _libgadu.gg_change_info_request_gender_set
    __swig_getmethods__["gender"] = _libgadu.gg_change_info_request_gender_get
    if _newclass:gender = _swig_property(_libgadu.gg_change_info_request_gender_get, _libgadu.gg_change_info_request_gender_set)
    __swig_setmethods__["city"] = _libgadu.gg_change_info_request_city_set
    __swig_getmethods__["city"] = _libgadu.gg_change_info_request_city_get
    if _newclass:city = _swig_property(_libgadu.gg_change_info_request_city_get, _libgadu.gg_change_info_request_city_set)
    def __init__(self): 
        this = _libgadu.new_gg_change_info_request()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _libgadu.delete_gg_change_info_request
    __del__ = lambda self : None;
gg_change_info_request_swigregister = _libgadu.gg_change_info_request_swigregister
gg_change_info_request_swigregister(gg_change_info_request)


def gg_change_info_request_new(*args):
  return _libgadu.gg_change_info_request_new(*args)
gg_change_info_request_new = _libgadu.gg_change_info_request_new

def gg_change_info_request_free(*args):
  return _libgadu.gg_change_info_request_free(*args)
gg_change_info_request_free = _libgadu.gg_change_info_request_free

def gg_change_info(*args):
  return _libgadu.gg_change_info(*args)
gg_change_info = _libgadu.gg_change_info

def gg_userlist_get(*args):
  return _libgadu.gg_userlist_get(*args)
gg_userlist_get = _libgadu.gg_userlist_get

def gg_userlist_get_watch_fd(*args):
  return _libgadu.gg_userlist_get_watch_fd(*args)
gg_userlist_get_watch_fd = _libgadu.gg_userlist_get_watch_fd

def gg_userlist_get_free(*args):
  return _libgadu.gg_userlist_get_free(*args)
gg_userlist_get_free = _libgadu.gg_userlist_get_free

def gg_userlist_put(*args):
  return _libgadu.gg_userlist_put(*args)
gg_userlist_put = _libgadu.gg_userlist_put

def gg_userlist_put_watch_fd(*args):
  return _libgadu.gg_userlist_put_watch_fd(*args)
gg_userlist_put_watch_fd = _libgadu.gg_userlist_put_watch_fd

def gg_userlist_put_free(*args):
  return _libgadu.gg_userlist_put_free(*args)
gg_userlist_put_free = _libgadu.gg_userlist_put_free

def gg_userlist_remove(*args):
  return _libgadu.gg_userlist_remove(*args)
gg_userlist_remove = _libgadu.gg_userlist_remove

def gg_userlist_remove_watch_fd(*args):
  return _libgadu.gg_userlist_remove_watch_fd(*args)
gg_userlist_remove_watch_fd = _libgadu.gg_userlist_remove_watch_fd

def gg_userlist_remove_free(*args):
  return _libgadu.gg_userlist_remove_free(*args)
gg_userlist_remove_free = _libgadu.gg_userlist_remove_free

def gg_pubdir50_handle_reply(*args):
  return _libgadu.gg_pubdir50_handle_reply(*args)
gg_pubdir50_handle_reply = _libgadu.gg_pubdir50_handle_reply

def gg_file_hash_sha1(*args):
  return _libgadu.gg_file_hash_sha1(*args)
gg_file_hash_sha1 = _libgadu.gg_file_hash_sha1

def gg_saprintf(*args):
  return _libgadu.gg_saprintf(*args)
gg_saprintf = _libgadu.gg_saprintf

def gg_vsaprintf(*args):
  return _libgadu.gg_vsaprintf(*args)
gg_vsaprintf = _libgadu.gg_vsaprintf

def gg_get_line(*args):
  return _libgadu.gg_get_line(*args)
gg_get_line = _libgadu.gg_get_line

def gg_connect(*args):
  return _libgadu.gg_connect(*args)
gg_connect = _libgadu.gg_connect

def gg_gethostbyname(*args):
  return _libgadu.gg_gethostbyname(*args)
gg_gethostbyname = _libgadu.gg_gethostbyname

def gg_read_line(*args):
  return _libgadu.gg_read_line(*args)
gg_read_line = _libgadu.gg_read_line

def gg_chomp(*args):
  return _libgadu.gg_chomp(*args)
gg_chomp = _libgadu.gg_chomp

def gg_urlencode(*args):
  return _libgadu.gg_urlencode(*args)
gg_urlencode = _libgadu.gg_urlencode

def gg_http_hash(*args):
  return _libgadu.gg_http_hash(*args)
gg_http_hash = _libgadu.gg_http_hash

def gg_http_free_fields(*args):
  return _libgadu.gg_http_free_fields(*args)
gg_http_free_fields = _libgadu.gg_http_free_fields

def gg_read(*args):
  return _libgadu.gg_read(*args)
gg_read = _libgadu.gg_read

def gg_write(*args):
  return _libgadu.gg_write(*args)
gg_write = _libgadu.gg_write

def gg_recv_packet(*args):
  return _libgadu.gg_recv_packet(*args)
gg_recv_packet = _libgadu.gg_recv_packet

def gg_send_packet(*args):
  return _libgadu.gg_send_packet(*args)
gg_send_packet = _libgadu.gg_send_packet

def gg_login_hash(*args):
  return _libgadu.gg_login_hash(*args)
gg_login_hash = _libgadu.gg_login_hash

def gg_login_hash_sha1(*args):
  return _libgadu.gg_login_hash_sha1(*args)
gg_login_hash_sha1 = _libgadu.gg_login_hash_sha1

def gg_fix32(*args):
  return _libgadu.gg_fix32(*args)
gg_fix32 = _libgadu.gg_fix32

def gg_fix16(*args):
  return _libgadu.gg_fix16(*args)
gg_fix16 = _libgadu.gg_fix16

def gg_proxy_auth():
  return _libgadu.gg_proxy_auth()
gg_proxy_auth = _libgadu.gg_proxy_auth

def gg_base64_encode(*args):
  return _libgadu.gg_base64_encode(*args)
gg_base64_encode = _libgadu.gg_base64_encode

def gg_base64_decode(*args):
  return _libgadu.gg_base64_decode(*args)
gg_base64_decode = _libgadu.gg_base64_decode

def gg_image_queue_remove(*args):
  return _libgadu.gg_image_queue_remove(*args)
gg_image_queue_remove = _libgadu.gg_image_queue_remove
class gg_image_queue(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, gg_image_queue, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, gg_image_queue, name)
    __repr__ = _swig_repr
    __swig_setmethods__["sender"] = _libgadu.gg_image_queue_sender_set
    __swig_getmethods__["sender"] = _libgadu.gg_image_queue_sender_get
    if _newclass:sender = _swig_property(_libgadu.gg_image_queue_sender_get, _libgadu.gg_image_queue_sender_set)
    __swig_setmethods__["size"] = _libgadu.gg_image_queue_size_set
    __swig_getmethods__["size"] = _libgadu.gg_image_queue_size_get
    if _newclass:size = _swig_property(_libgadu.gg_image_queue_size_get, _libgadu.gg_image_queue_size_set)
    __swig_setmethods__["crc32"] = _libgadu.gg_image_queue_crc32_set
    __swig_getmethods__["crc32"] = _libgadu.gg_image_queue_crc32_get
    if _newclass:crc32 = _swig_property(_libgadu.gg_image_queue_crc32_get, _libgadu.gg_image_queue_crc32_set)
    __swig_setmethods__["filename"] = _libgadu.gg_image_queue_filename_set
    __swig_getmethods__["filename"] = _libgadu.gg_image_queue_filename_get
    if _newclass:filename = _swig_property(_libgadu.gg_image_queue_filename_get, _libgadu.gg_image_queue_filename_set)
    __swig_setmethods__["image"] = _libgadu.gg_image_queue_image_set
    __swig_getmethods__["image"] = _libgadu.gg_image_queue_image_get
    if _newclass:image = _swig_property(_libgadu.gg_image_queue_image_get, _libgadu.gg_image_queue_image_set)
    __swig_setmethods__["done"] = _libgadu.gg_image_queue_done_set
    __swig_getmethods__["done"] = _libgadu.gg_image_queue_done_get
    if _newclass:done = _swig_property(_libgadu.gg_image_queue_done_get, _libgadu.gg_image_queue_done_set)
    __swig_setmethods__["next"] = _libgadu.gg_image_queue_next_set
    __swig_getmethods__["next"] = _libgadu.gg_image_queue_next_get
    if _newclass:next = _swig_property(_libgadu.gg_image_queue_next_get, _libgadu.gg_image_queue_next_set)
    def __init__(self): 
        this = _libgadu.new_gg_image_queue()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _libgadu.delete_gg_image_queue
    __del__ = lambda self : None;
gg_image_queue_swigregister = _libgadu.gg_image_queue_swigregister
gg_image_queue_swigregister(gg_image_queue)


def gg_dcc7_handle_id(*args):
  return _libgadu.gg_dcc7_handle_id(*args)
gg_dcc7_handle_id = _libgadu.gg_dcc7_handle_id

def gg_dcc7_handle_new(*args):
  return _libgadu.gg_dcc7_handle_new(*args)
gg_dcc7_handle_new = _libgadu.gg_dcc7_handle_new

def gg_dcc7_handle_info(*args):
  return _libgadu.gg_dcc7_handle_info(*args)
gg_dcc7_handle_info = _libgadu.gg_dcc7_handle_info

def gg_dcc7_handle_accept(*args):
  return _libgadu.gg_dcc7_handle_accept(*args)
gg_dcc7_handle_accept = _libgadu.gg_dcc7_handle_accept

def gg_dcc7_handle_reject(*args):
  return _libgadu.gg_dcc7_handle_reject(*args)
gg_dcc7_handle_reject = _libgadu.gg_dcc7_handle_reject
GG_APPMSG_HOST = _libgadu.GG_APPMSG_HOST
GG_APPMSG_PORT = _libgadu.GG_APPMSG_PORT
GG_PUBDIR_HOST = _libgadu.GG_PUBDIR_HOST
GG_PUBDIR_PORT = _libgadu.GG_PUBDIR_PORT
GG_REGISTER_HOST = _libgadu.GG_REGISTER_HOST
GG_REGISTER_PORT = _libgadu.GG_REGISTER_PORT
GG_REMIND_HOST = _libgadu.GG_REMIND_HOST
GG_REMIND_PORT = _libgadu.GG_REMIND_PORT
GG_RELAY_HOST = _libgadu.GG_RELAY_HOST
GG_RELAY_PORT = _libgadu.GG_RELAY_PORT
GG_DEFAULT_PORT = _libgadu.GG_DEFAULT_PORT
GG_HTTPS_PORT = _libgadu.GG_HTTPS_PORT
GG_HTTP_USERAGENT = _libgadu.GG_HTTP_USERAGENT
GG_DEFAULT_CLIENT_VERSION = _libgadu.GG_DEFAULT_CLIENT_VERSION
GG_DEFAULT_PROTOCOL_VERSION = _libgadu.GG_DEFAULT_PROTOCOL_VERSION
GG_DEFAULT_TIMEOUT = _libgadu.GG_DEFAULT_TIMEOUT
GG_HAS_AUDIO_MASK = _libgadu.GG_HAS_AUDIO_MASK
GG_HAS_AUDIO7_MASK = _libgadu.GG_HAS_AUDIO7_MASK
GG_ERA_OMNIX_MASK = _libgadu.GG_ERA_OMNIX_MASK
GG_LIBGADU_VERSION = _libgadu.GG_LIBGADU_VERSION
GG_FEATURE_MSG77 = _libgadu.GG_FEATURE_MSG77
GG_FEATURE_STATUS77 = _libgadu.GG_FEATURE_STATUS77
GG_FEATURE_UNKNOWN_4 = _libgadu.GG_FEATURE_UNKNOWN_4
GG_FEATURE_UNKNOWN_8 = _libgadu.GG_FEATURE_UNKNOWN_8
GG_FEATURE_DND_FFC = _libgadu.GG_FEATURE_DND_FFC
GG_FEATURE_IMAGE_DESCR = _libgadu.GG_FEATURE_IMAGE_DESCR
GG_FEATURE_UNKNOWN_40 = _libgadu.GG_FEATURE_UNKNOWN_40
GG_FEATURE_UNKNOWN_80 = _libgadu.GG_FEATURE_UNKNOWN_80
GG_FEATURE_UNKNOWN_100 = _libgadu.GG_FEATURE_UNKNOWN_100
GG_FEATURE_USER_DATA = _libgadu.GG_FEATURE_USER_DATA
GG_FEATURE_MSG_ACK = _libgadu.GG_FEATURE_MSG_ACK
GG_FEATURE_UNKNOWN_800 = _libgadu.GG_FEATURE_UNKNOWN_800
GG_FEATURE_UNKNOWN_1000 = _libgadu.GG_FEATURE_UNKNOWN_1000
GG_FEATURE_TYPING_NOTIFICATION = _libgadu.GG_FEATURE_TYPING_NOTIFICATION
GG_FEATURE_MULTILOGON = _libgadu.GG_FEATURE_MULTILOGON
GG_FEATURE_MSG80 = _libgadu.GG_FEATURE_MSG80
GG_FEATURE_STATUS80 = _libgadu.GG_FEATURE_STATUS80
GG_FEATURE_STATUS80BETA = _libgadu.GG_FEATURE_STATUS80BETA
GG_FEATURE_ALL = _libgadu.GG_FEATURE_ALL
GG_DEFAULT_DCC_PORT = _libgadu.GG_DEFAULT_DCC_PORT
class gg_header(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, gg_header, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, gg_header, name)
    __repr__ = _swig_repr
    __swig_setmethods__["type"] = _libgadu.gg_header_type_set
    __swig_getmethods__["type"] = _libgadu.gg_header_type_get
    if _newclass:type = _swig_property(_libgadu.gg_header_type_get, _libgadu.gg_header_type_set)
    __swig_setmethods__["length"] = _libgadu.gg_header_length_set
    __swig_getmethods__["length"] = _libgadu.gg_header_length_get
    if _newclass:length = _swig_property(_libgadu.gg_header_length_get, _libgadu.gg_header_length_set)
    def __init__(self): 
        this = _libgadu.new_gg_header()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _libgadu.delete_gg_header
    __del__ = lambda self : None;
gg_header_swigregister = _libgadu.gg_header_swigregister
gg_header_swigregister(gg_header)

GG_WELCOME = _libgadu.GG_WELCOME
GG_NEED_EMAIL = _libgadu.GG_NEED_EMAIL
class gg_welcome(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, gg_welcome, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, gg_welcome, name)
    __repr__ = _swig_repr
    __swig_setmethods__["key"] = _libgadu.gg_welcome_key_set
    __swig_getmethods__["key"] = _libgadu.gg_welcome_key_get
    if _newclass:key = _swig_property(_libgadu.gg_welcome_key_get, _libgadu.gg_welcome_key_set)
    def __init__(self): 
        this = _libgadu.new_gg_welcome()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _libgadu.delete_gg_welcome
    __del__ = lambda self : None;
gg_welcome_swigregister = _libgadu.gg_welcome_swigregister
gg_welcome_swigregister(gg_welcome)

GG_LOGIN = _libgadu.GG_LOGIN
GG_LOGIN_EXT = _libgadu.GG_LOGIN_EXT
class gg_login_ext(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, gg_login_ext, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, gg_login_ext, name)
    __repr__ = _swig_repr
    __swig_setmethods__["uin"] = _libgadu.gg_login_ext_uin_set
    __swig_getmethods__["uin"] = _libgadu.gg_login_ext_uin_get
    if _newclass:uin = _swig_property(_libgadu.gg_login_ext_uin_get, _libgadu.gg_login_ext_uin_set)
    __swig_setmethods__["hash"] = _libgadu.gg_login_ext_hash_set
    __swig_getmethods__["hash"] = _libgadu.gg_login_ext_hash_get
    if _newclass:hash = _swig_property(_libgadu.gg_login_ext_hash_get, _libgadu.gg_login_ext_hash_set)
    __swig_setmethods__["status"] = _libgadu.gg_login_ext_status_set
    __swig_getmethods__["status"] = _libgadu.gg_login_ext_status_get
    if _newclass:status = _swig_property(_libgadu.gg_login_ext_status_get, _libgadu.gg_login_ext_status_set)
    __swig_setmethods__["version"] = _libgadu.gg_login_ext_version_set
    __swig_getmethods__["version"] = _libgadu.gg_login_ext_version_get
    if _newclass:version = _swig_property(_libgadu.gg_login_ext_version_get, _libgadu.gg_login_ext_version_set)
    __swig_setmethods__["local_ip"] = _libgadu.gg_login_ext_local_ip_set
    __swig_getmethods__["local_ip"] = _libgadu.gg_login_ext_local_ip_get
    if _newclass:local_ip = _swig_property(_libgadu.gg_login_ext_local_ip_get, _libgadu.gg_login_ext_local_ip_set)
    __swig_setmethods__["local_port"] = _libgadu.gg_login_ext_local_port_set
    __swig_getmethods__["local_port"] = _libgadu.gg_login_ext_local_port_get
    if _newclass:local_port = _swig_property(_libgadu.gg_login_ext_local_port_get, _libgadu.gg_login_ext_local_port_set)
    __swig_setmethods__["external_ip"] = _libgadu.gg_login_ext_external_ip_set
    __swig_getmethods__["external_ip"] = _libgadu.gg_login_ext_external_ip_get
    if _newclass:external_ip = _swig_property(_libgadu.gg_login_ext_external_ip_get, _libgadu.gg_login_ext_external_ip_set)
    __swig_setmethods__["external_port"] = _libgadu.gg_login_ext_external_port_set
    __swig_getmethods__["external_port"] = _libgadu.gg_login_ext_external_port_get
    if _newclass:external_port = _swig_property(_libgadu.gg_login_ext_external_port_get, _libgadu.gg_login_ext_external_port_set)
    def __init__(self): 
        this = _libgadu.new_gg_login_ext()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _libgadu.delete_gg_login_ext
    __del__ = lambda self : None;
gg_login_ext_swigregister = _libgadu.gg_login_ext_swigregister
gg_login_ext_swigregister(gg_login_ext)

GG_LOGIN60 = _libgadu.GG_LOGIN60
class gg_login60(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, gg_login60, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, gg_login60, name)
    __repr__ = _swig_repr
    __swig_setmethods__["uin"] = _libgadu.gg_login60_uin_set
    __swig_getmethods__["uin"] = _libgadu.gg_login60_uin_get
    if _newclass:uin = _swig_property(_libgadu.gg_login60_uin_get, _libgadu.gg_login60_uin_set)
    __swig_setmethods__["hash"] = _libgadu.gg_login60_hash_set
    __swig_getmethods__["hash"] = _libgadu.gg_login60_hash_get
    if _newclass:hash = _swig_property(_libgadu.gg_login60_hash_get, _libgadu.gg_login60_hash_set)
    __swig_setmethods__["status"] = _libgadu.gg_login60_status_set
    __swig_getmethods__["status"] = _libgadu.gg_login60_status_get
    if _newclass:status = _swig_property(_libgadu.gg_login60_status_get, _libgadu.gg_login60_status_set)
    __swig_setmethods__["version"] = _libgadu.gg_login60_version_set
    __swig_getmethods__["version"] = _libgadu.gg_login60_version_get
    if _newclass:version = _swig_property(_libgadu.gg_login60_version_get, _libgadu.gg_login60_version_set)
    __swig_setmethods__["dunno1"] = _libgadu.gg_login60_dunno1_set
    __swig_getmethods__["dunno1"] = _libgadu.gg_login60_dunno1_get
    if _newclass:dunno1 = _swig_property(_libgadu.gg_login60_dunno1_get, _libgadu.gg_login60_dunno1_set)
    __swig_setmethods__["local_ip"] = _libgadu.gg_login60_local_ip_set
    __swig_getmethods__["local_ip"] = _libgadu.gg_login60_local_ip_get
    if _newclass:local_ip = _swig_property(_libgadu.gg_login60_local_ip_get, _libgadu.gg_login60_local_ip_set)
    __swig_setmethods__["local_port"] = _libgadu.gg_login60_local_port_set
    __swig_getmethods__["local_port"] = _libgadu.gg_login60_local_port_get
    if _newclass:local_port = _swig_property(_libgadu.gg_login60_local_port_get, _libgadu.gg_login60_local_port_set)
    __swig_setmethods__["external_ip"] = _libgadu.gg_login60_external_ip_set
    __swig_getmethods__["external_ip"] = _libgadu.gg_login60_external_ip_get
    if _newclass:external_ip = _swig_property(_libgadu.gg_login60_external_ip_get, _libgadu.gg_login60_external_ip_set)
    __swig_setmethods__["external_port"] = _libgadu.gg_login60_external_port_set
    __swig_getmethods__["external_port"] = _libgadu.gg_login60_external_port_get
    if _newclass:external_port = _swig_property(_libgadu.gg_login60_external_port_get, _libgadu.gg_login60_external_port_set)
    __swig_setmethods__["image_size"] = _libgadu.gg_login60_image_size_set
    __swig_getmethods__["image_size"] = _libgadu.gg_login60_image_size_get
    if _newclass:image_size = _swig_property(_libgadu.gg_login60_image_size_get, _libgadu.gg_login60_image_size_set)
    __swig_setmethods__["dunno2"] = _libgadu.gg_login60_dunno2_set
    __swig_getmethods__["dunno2"] = _libgadu.gg_login60_dunno2_get
    if _newclass:dunno2 = _swig_property(_libgadu.gg_login60_dunno2_get, _libgadu.gg_login60_dunno2_set)
    def __init__(self): 
        this = _libgadu.new_gg_login60()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _libgadu.delete_gg_login60
    __del__ = lambda self : None;
gg_login60_swigregister = _libgadu.gg_login60_swigregister
gg_login60_swigregister(gg_login60)

GG_LOGIN70 = _libgadu.GG_LOGIN70
class gg_login70(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, gg_login70, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, gg_login70, name)
    __repr__ = _swig_repr
    __swig_setmethods__["uin"] = _libgadu.gg_login70_uin_set
    __swig_getmethods__["uin"] = _libgadu.gg_login70_uin_get
    if _newclass:uin = _swig_property(_libgadu.gg_login70_uin_get, _libgadu.gg_login70_uin_set)
    __swig_setmethods__["hash_type"] = _libgadu.gg_login70_hash_type_set
    __swig_getmethods__["hash_type"] = _libgadu.gg_login70_hash_type_get
    if _newclass:hash_type = _swig_property(_libgadu.gg_login70_hash_type_get, _libgadu.gg_login70_hash_type_set)
    __swig_setmethods__["hash"] = _libgadu.gg_login70_hash_set
    __swig_getmethods__["hash"] = _libgadu.gg_login70_hash_get
    if _newclass:hash = _swig_property(_libgadu.gg_login70_hash_get, _libgadu.gg_login70_hash_set)
    __swig_setmethods__["status"] = _libgadu.gg_login70_status_set
    __swig_getmethods__["status"] = _libgadu.gg_login70_status_get
    if _newclass:status = _swig_property(_libgadu.gg_login70_status_get, _libgadu.gg_login70_status_set)
    __swig_setmethods__["version"] = _libgadu.gg_login70_version_set
    __swig_getmethods__["version"] = _libgadu.gg_login70_version_get
    if _newclass:version = _swig_property(_libgadu.gg_login70_version_get, _libgadu.gg_login70_version_set)
    __swig_setmethods__["dunno1"] = _libgadu.gg_login70_dunno1_set
    __swig_getmethods__["dunno1"] = _libgadu.gg_login70_dunno1_get
    if _newclass:dunno1 = _swig_property(_libgadu.gg_login70_dunno1_get, _libgadu.gg_login70_dunno1_set)
    __swig_setmethods__["local_ip"] = _libgadu.gg_login70_local_ip_set
    __swig_getmethods__["local_ip"] = _libgadu.gg_login70_local_ip_get
    if _newclass:local_ip = _swig_property(_libgadu.gg_login70_local_ip_get, _libgadu.gg_login70_local_ip_set)
    __swig_setmethods__["local_port"] = _libgadu.gg_login70_local_port_set
    __swig_getmethods__["local_port"] = _libgadu.gg_login70_local_port_get
    if _newclass:local_port = _swig_property(_libgadu.gg_login70_local_port_get, _libgadu.gg_login70_local_port_set)
    __swig_setmethods__["external_ip"] = _libgadu.gg_login70_external_ip_set
    __swig_getmethods__["external_ip"] = _libgadu.gg_login70_external_ip_get
    if _newclass:external_ip = _swig_property(_libgadu.gg_login70_external_ip_get, _libgadu.gg_login70_external_ip_set)
    __swig_setmethods__["external_port"] = _libgadu.gg_login70_external_port_set
    __swig_getmethods__["external_port"] = _libgadu.gg_login70_external_port_get
    if _newclass:external_port = _swig_property(_libgadu.gg_login70_external_port_get, _libgadu.gg_login70_external_port_set)
    __swig_setmethods__["image_size"] = _libgadu.gg_login70_image_size_set
    __swig_getmethods__["image_size"] = _libgadu.gg_login70_image_size_get
    if _newclass:image_size = _swig_property(_libgadu.gg_login70_image_size_get, _libgadu.gg_login70_image_size_set)
    __swig_setmethods__["dunno2"] = _libgadu.gg_login70_dunno2_set
    __swig_getmethods__["dunno2"] = _libgadu.gg_login70_dunno2_get
    if _newclass:dunno2 = _swig_property(_libgadu.gg_login70_dunno2_get, _libgadu.gg_login70_dunno2_set)
    def __init__(self): 
        this = _libgadu.new_gg_login70()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _libgadu.delete_gg_login70
    __del__ = lambda self : None;
gg_login70_swigregister = _libgadu.gg_login70_swigregister
gg_login70_swigregister(gg_login70)

GG_LOGIN_OK = _libgadu.GG_LOGIN_OK
GG_LOGIN_FAILED = _libgadu.GG_LOGIN_FAILED
GG_PUBDIR50_REQUEST = _libgadu.GG_PUBDIR50_REQUEST
class gg_pubdir50_request(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, gg_pubdir50_request, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, gg_pubdir50_request, name)
    __repr__ = _swig_repr
    __swig_setmethods__["type"] = _libgadu.gg_pubdir50_request_type_set
    __swig_getmethods__["type"] = _libgadu.gg_pubdir50_request_type_get
    if _newclass:type = _swig_property(_libgadu.gg_pubdir50_request_type_get, _libgadu.gg_pubdir50_request_type_set)
    __swig_setmethods__["seq"] = _libgadu.gg_pubdir50_request_seq_set
    __swig_getmethods__["seq"] = _libgadu.gg_pubdir50_request_seq_get
    if _newclass:seq = _swig_property(_libgadu.gg_pubdir50_request_seq_get, _libgadu.gg_pubdir50_request_seq_set)
    def __init__(self): 
        this = _libgadu.new_gg_pubdir50_request()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _libgadu.delete_gg_pubdir50_request
    __del__ = lambda self : None;
gg_pubdir50_request_swigregister = _libgadu.gg_pubdir50_request_swigregister
gg_pubdir50_request_swigregister(gg_pubdir50_request)

GG_PUBDIR50_REPLY = _libgadu.GG_PUBDIR50_REPLY
class gg_pubdir50_reply(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, gg_pubdir50_reply, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, gg_pubdir50_reply, name)
    __repr__ = _swig_repr
    __swig_setmethods__["type"] = _libgadu.gg_pubdir50_reply_type_set
    __swig_getmethods__["type"] = _libgadu.gg_pubdir50_reply_type_get
    if _newclass:type = _swig_property(_libgadu.gg_pubdir50_reply_type_get, _libgadu.gg_pubdir50_reply_type_set)
    __swig_setmethods__["seq"] = _libgadu.gg_pubdir50_reply_seq_set
    __swig_getmethods__["seq"] = _libgadu.gg_pubdir50_reply_seq_get
    if _newclass:seq = _swig_property(_libgadu.gg_pubdir50_reply_seq_get, _libgadu.gg_pubdir50_reply_seq_set)
    def __init__(self): 
        this = _libgadu.new_gg_pubdir50_reply()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _libgadu.delete_gg_pubdir50_reply
    __del__ = lambda self : None;
gg_pubdir50_reply_swigregister = _libgadu.gg_pubdir50_reply_swigregister
gg_pubdir50_reply_swigregister(gg_pubdir50_reply)

GG_NEW_STATUS = _libgadu.GG_NEW_STATUS
GG_STATUS_NOT_AVAIL = _libgadu.GG_STATUS_NOT_AVAIL
GG_STATUS_NOT_AVAIL_DESCR = _libgadu.GG_STATUS_NOT_AVAIL_DESCR
GG_STATUS_FFC = _libgadu.GG_STATUS_FFC
GG_STATUS_FFC_DESCR = _libgadu.GG_STATUS_FFC_DESCR
GG_STATUS_AVAIL = _libgadu.GG_STATUS_AVAIL
GG_STATUS_AVAIL_DESCR = _libgadu.GG_STATUS_AVAIL_DESCR
GG_STATUS_BUSY = _libgadu.GG_STATUS_BUSY
GG_STATUS_BUSY_DESCR = _libgadu.GG_STATUS_BUSY_DESCR
GG_STATUS_DND = _libgadu.GG_STATUS_DND
GG_STATUS_DND_DESCR = _libgadu.GG_STATUS_DND_DESCR
GG_STATUS_INVISIBLE = _libgadu.GG_STATUS_INVISIBLE
GG_STATUS_INVISIBLE_DESCR = _libgadu.GG_STATUS_INVISIBLE_DESCR
GG_STATUS_BLOCKED = _libgadu.GG_STATUS_BLOCKED
GG_STATUS_IMAGE_MASK = _libgadu.GG_STATUS_IMAGE_MASK
GG_STATUS_DESCR_MASK = _libgadu.GG_STATUS_DESCR_MASK
GG_STATUS_FRIENDS_MASK = _libgadu.GG_STATUS_FRIENDS_MASK
GG_STATUS_FLAG_UNKNOWN = _libgadu.GG_STATUS_FLAG_UNKNOWN
GG_STATUS_FLAG_VIDEO = _libgadu.GG_STATUS_FLAG_VIDEO
GG_STATUS_FLAG_MOBILE = _libgadu.GG_STATUS_FLAG_MOBILE
GG_STATUS_FLAG_SPAM = _libgadu.GG_STATUS_FLAG_SPAM
GG_STATUS_VOICE_MASK = _libgadu.GG_STATUS_VOICE_MASK
GG_STATUS_DESCR_MAXSIZE = _libgadu.GG_STATUS_DESCR_MAXSIZE
GG_STATUS_DESCR_MAXSIZE_PRE_8_0 = _libgadu.GG_STATUS_DESCR_MAXSIZE_PRE_8_0
GG_STATUS_MASK = _libgadu.GG_STATUS_MASK
class gg_new_status(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, gg_new_status, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, gg_new_status, name)
    __repr__ = _swig_repr
    __swig_setmethods__["status"] = _libgadu.gg_new_status_status_set
    __swig_getmethods__["status"] = _libgadu.gg_new_status_status_get
    if _newclass:status = _swig_property(_libgadu.gg_new_status_status_get, _libgadu.gg_new_status_status_set)
    def __init__(self): 
        this = _libgadu.new_gg_new_status()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _libgadu.delete_gg_new_status
    __del__ = lambda self : None;
gg_new_status_swigregister = _libgadu.gg_new_status_swigregister
gg_new_status_swigregister(gg_new_status)

GG_NOTIFY_FIRST = _libgadu.GG_NOTIFY_FIRST
GG_NOTIFY_LAST = _libgadu.GG_NOTIFY_LAST
GG_NOTIFY = _libgadu.GG_NOTIFY
GG_USER_OFFLINE = _libgadu.GG_USER_OFFLINE
GG_USER_NORMAL = _libgadu.GG_USER_NORMAL
GG_USER_BLOCKED = _libgadu.GG_USER_BLOCKED
GG_LIST_EMPTY = _libgadu.GG_LIST_EMPTY
GG_NOTIFY_REPLY = _libgadu.GG_NOTIFY_REPLY
class gg_notify_reply(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, gg_notify_reply, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, gg_notify_reply, name)
    __repr__ = _swig_repr
    __swig_setmethods__["uin"] = _libgadu.gg_notify_reply_uin_set
    __swig_getmethods__["uin"] = _libgadu.gg_notify_reply_uin_get
    if _newclass:uin = _swig_property(_libgadu.gg_notify_reply_uin_get, _libgadu.gg_notify_reply_uin_set)
    __swig_setmethods__["status"] = _libgadu.gg_notify_reply_status_set
    __swig_getmethods__["status"] = _libgadu.gg_notify_reply_status_get
    if _newclass:status = _swig_property(_libgadu.gg_notify_reply_status_get, _libgadu.gg_notify_reply_status_set)
    __swig_setmethods__["remote_ip"] = _libgadu.gg_notify_reply_remote_ip_set
    __swig_getmethods__["remote_ip"] = _libgadu.gg_notify_reply_remote_ip_get
    if _newclass:remote_ip = _swig_property(_libgadu.gg_notify_reply_remote_ip_get, _libgadu.gg_notify_reply_remote_ip_set)
    __swig_setmethods__["remote_port"] = _libgadu.gg_notify_reply_remote_port_set
    __swig_getmethods__["remote_port"] = _libgadu.gg_notify_reply_remote_port_get
    if _newclass:remote_port = _swig_property(_libgadu.gg_notify_reply_remote_port_get, _libgadu.gg_notify_reply_remote_port_set)
    __swig_setmethods__["version"] = _libgadu.gg_notify_reply_version_set
    __swig_getmethods__["version"] = _libgadu.gg_notify_reply_version_get
    if _newclass:version = _swig_property(_libgadu.gg_notify_reply_version_get, _libgadu.gg_notify_reply_version_set)
    __swig_setmethods__["dunno2"] = _libgadu.gg_notify_reply_dunno2_set
    __swig_getmethods__["dunno2"] = _libgadu.gg_notify_reply_dunno2_get
    if _newclass:dunno2 = _swig_property(_libgadu.gg_notify_reply_dunno2_get, _libgadu.gg_notify_reply_dunno2_set)
    def __init__(self): 
        this = _libgadu.new_gg_notify_reply()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _libgadu.delete_gg_notify_reply
    __del__ = lambda self : None;
gg_notify_reply_swigregister = _libgadu.gg_notify_reply_swigregister
gg_notify_reply_swigregister(gg_notify_reply)

GG_NOTIFY_REPLY60 = _libgadu.GG_NOTIFY_REPLY60
class gg_notify_reply60(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, gg_notify_reply60, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, gg_notify_reply60, name)
    __repr__ = _swig_repr
    __swig_setmethods__["uin"] = _libgadu.gg_notify_reply60_uin_set
    __swig_getmethods__["uin"] = _libgadu.gg_notify_reply60_uin_get
    if _newclass:uin = _swig_property(_libgadu.gg_notify_reply60_uin_get, _libgadu.gg_notify_reply60_uin_set)
    __swig_setmethods__["status"] = _libgadu.gg_notify_reply60_status_set
    __swig_getmethods__["status"] = _libgadu.gg_notify_reply60_status_get
    if _newclass:status = _swig_property(_libgadu.gg_notify_reply60_status_get, _libgadu.gg_notify_reply60_status_set)
    __swig_setmethods__["remote_ip"] = _libgadu.gg_notify_reply60_remote_ip_set
    __swig_getmethods__["remote_ip"] = _libgadu.gg_notify_reply60_remote_ip_get
    if _newclass:remote_ip = _swig_property(_libgadu.gg_notify_reply60_remote_ip_get, _libgadu.gg_notify_reply60_remote_ip_set)
    __swig_setmethods__["remote_port"] = _libgadu.gg_notify_reply60_remote_port_set
    __swig_getmethods__["remote_port"] = _libgadu.gg_notify_reply60_remote_port_get
    if _newclass:remote_port = _swig_property(_libgadu.gg_notify_reply60_remote_port_get, _libgadu.gg_notify_reply60_remote_port_set)
    __swig_setmethods__["version"] = _libgadu.gg_notify_reply60_version_set
    __swig_getmethods__["version"] = _libgadu.gg_notify_reply60_version_get
    if _newclass:version = _swig_property(_libgadu.gg_notify_reply60_version_get, _libgadu.gg_notify_reply60_version_set)
    __swig_setmethods__["image_size"] = _libgadu.gg_notify_reply60_image_size_set
    __swig_getmethods__["image_size"] = _libgadu.gg_notify_reply60_image_size_get
    if _newclass:image_size = _swig_property(_libgadu.gg_notify_reply60_image_size_get, _libgadu.gg_notify_reply60_image_size_set)
    __swig_setmethods__["dunno1"] = _libgadu.gg_notify_reply60_dunno1_set
    __swig_getmethods__["dunno1"] = _libgadu.gg_notify_reply60_dunno1_get
    if _newclass:dunno1 = _swig_property(_libgadu.gg_notify_reply60_dunno1_get, _libgadu.gg_notify_reply60_dunno1_set)
    def __init__(self): 
        this = _libgadu.new_gg_notify_reply60()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _libgadu.delete_gg_notify_reply60
    __del__ = lambda self : None;
gg_notify_reply60_swigregister = _libgadu.gg_notify_reply60_swigregister
gg_notify_reply60_swigregister(gg_notify_reply60)

GG_STATUS60 = _libgadu.GG_STATUS60
class gg_status60(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, gg_status60, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, gg_status60, name)
    __repr__ = _swig_repr
    __swig_setmethods__["uin"] = _libgadu.gg_status60_uin_set
    __swig_getmethods__["uin"] = _libgadu.gg_status60_uin_get
    if _newclass:uin = _swig_property(_libgadu.gg_status60_uin_get, _libgadu.gg_status60_uin_set)
    __swig_setmethods__["status"] = _libgadu.gg_status60_status_set
    __swig_getmethods__["status"] = _libgadu.gg_status60_status_get
    if _newclass:status = _swig_property(_libgadu.gg_status60_status_get, _libgadu.gg_status60_status_set)
    __swig_setmethods__["remote_ip"] = _libgadu.gg_status60_remote_ip_set
    __swig_getmethods__["remote_ip"] = _libgadu.gg_status60_remote_ip_get
    if _newclass:remote_ip = _swig_property(_libgadu.gg_status60_remote_ip_get, _libgadu.gg_status60_remote_ip_set)
    __swig_setmethods__["remote_port"] = _libgadu.gg_status60_remote_port_set
    __swig_getmethods__["remote_port"] = _libgadu.gg_status60_remote_port_get
    if _newclass:remote_port = _swig_property(_libgadu.gg_status60_remote_port_get, _libgadu.gg_status60_remote_port_set)
    __swig_setmethods__["version"] = _libgadu.gg_status60_version_set
    __swig_getmethods__["version"] = _libgadu.gg_status60_version_get
    if _newclass:version = _swig_property(_libgadu.gg_status60_version_get, _libgadu.gg_status60_version_set)
    __swig_setmethods__["image_size"] = _libgadu.gg_status60_image_size_set
    __swig_getmethods__["image_size"] = _libgadu.gg_status60_image_size_get
    if _newclass:image_size = _swig_property(_libgadu.gg_status60_image_size_get, _libgadu.gg_status60_image_size_set)
    __swig_setmethods__["dunno1"] = _libgadu.gg_status60_dunno1_set
    __swig_getmethods__["dunno1"] = _libgadu.gg_status60_dunno1_get
    if _newclass:dunno1 = _swig_property(_libgadu.gg_status60_dunno1_get, _libgadu.gg_status60_dunno1_set)
    def __init__(self): 
        this = _libgadu.new_gg_status60()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _libgadu.delete_gg_status60
    __del__ = lambda self : None;
gg_status60_swigregister = _libgadu.gg_status60_swigregister
gg_status60_swigregister(gg_status60)

GG_NOTIFY_REPLY77 = _libgadu.GG_NOTIFY_REPLY77
class gg_notify_reply77(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, gg_notify_reply77, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, gg_notify_reply77, name)
    __repr__ = _swig_repr
    __swig_setmethods__["uin"] = _libgadu.gg_notify_reply77_uin_set
    __swig_getmethods__["uin"] = _libgadu.gg_notify_reply77_uin_get
    if _newclass:uin = _swig_property(_libgadu.gg_notify_reply77_uin_get, _libgadu.gg_notify_reply77_uin_set)
    __swig_setmethods__["status"] = _libgadu.gg_notify_reply77_status_set
    __swig_getmethods__["status"] = _libgadu.gg_notify_reply77_status_get
    if _newclass:status = _swig_property(_libgadu.gg_notify_reply77_status_get, _libgadu.gg_notify_reply77_status_set)
    __swig_setmethods__["remote_ip"] = _libgadu.gg_notify_reply77_remote_ip_set
    __swig_getmethods__["remote_ip"] = _libgadu.gg_notify_reply77_remote_ip_get
    if _newclass:remote_ip = _swig_property(_libgadu.gg_notify_reply77_remote_ip_get, _libgadu.gg_notify_reply77_remote_ip_set)
    __swig_setmethods__["remote_port"] = _libgadu.gg_notify_reply77_remote_port_set
    __swig_getmethods__["remote_port"] = _libgadu.gg_notify_reply77_remote_port_get
    if _newclass:remote_port = _swig_property(_libgadu.gg_notify_reply77_remote_port_get, _libgadu.gg_notify_reply77_remote_port_set)
    __swig_setmethods__["version"] = _libgadu.gg_notify_reply77_version_set
    __swig_getmethods__["version"] = _libgadu.gg_notify_reply77_version_get
    if _newclass:version = _swig_property(_libgadu.gg_notify_reply77_version_get, _libgadu.gg_notify_reply77_version_set)
    __swig_setmethods__["image_size"] = _libgadu.gg_notify_reply77_image_size_set
    __swig_getmethods__["image_size"] = _libgadu.gg_notify_reply77_image_size_get
    if _newclass:image_size = _swig_property(_libgadu.gg_notify_reply77_image_size_get, _libgadu.gg_notify_reply77_image_size_set)
    __swig_setmethods__["dunno1"] = _libgadu.gg_notify_reply77_dunno1_set
    __swig_getmethods__["dunno1"] = _libgadu.gg_notify_reply77_dunno1_get
    if _newclass:dunno1 = _swig_property(_libgadu.gg_notify_reply77_dunno1_get, _libgadu.gg_notify_reply77_dunno1_set)
    __swig_setmethods__["dunno2"] = _libgadu.gg_notify_reply77_dunno2_set
    __swig_getmethods__["dunno2"] = _libgadu.gg_notify_reply77_dunno2_get
    if _newclass:dunno2 = _swig_property(_libgadu.gg_notify_reply77_dunno2_get, _libgadu.gg_notify_reply77_dunno2_set)
    def __init__(self): 
        this = _libgadu.new_gg_notify_reply77()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _libgadu.delete_gg_notify_reply77
    __del__ = lambda self : None;
gg_notify_reply77_swigregister = _libgadu.gg_notify_reply77_swigregister
gg_notify_reply77_swigregister(gg_notify_reply77)

GG_STATUS77 = _libgadu.GG_STATUS77
class gg_status77(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, gg_status77, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, gg_status77, name)
    __repr__ = _swig_repr
    __swig_setmethods__["uin"] = _libgadu.gg_status77_uin_set
    __swig_getmethods__["uin"] = _libgadu.gg_status77_uin_get
    if _newclass:uin = _swig_property(_libgadu.gg_status77_uin_get, _libgadu.gg_status77_uin_set)
    __swig_setmethods__["status"] = _libgadu.gg_status77_status_set
    __swig_getmethods__["status"] = _libgadu.gg_status77_status_get
    if _newclass:status = _swig_property(_libgadu.gg_status77_status_get, _libgadu.gg_status77_status_set)
    __swig_setmethods__["remote_ip"] = _libgadu.gg_status77_remote_ip_set
    __swig_getmethods__["remote_ip"] = _libgadu.gg_status77_remote_ip_get
    if _newclass:remote_ip = _swig_property(_libgadu.gg_status77_remote_ip_get, _libgadu.gg_status77_remote_ip_set)
    __swig_setmethods__["remote_port"] = _libgadu.gg_status77_remote_port_set
    __swig_getmethods__["remote_port"] = _libgadu.gg_status77_remote_port_get
    if _newclass:remote_port = _swig_property(_libgadu.gg_status77_remote_port_get, _libgadu.gg_status77_remote_port_set)
    __swig_setmethods__["version"] = _libgadu.gg_status77_version_set
    __swig_getmethods__["version"] = _libgadu.gg_status77_version_get
    if _newclass:version = _swig_property(_libgadu.gg_status77_version_get, _libgadu.gg_status77_version_set)
    __swig_setmethods__["image_size"] = _libgadu.gg_status77_image_size_set
    __swig_getmethods__["image_size"] = _libgadu.gg_status77_image_size_get
    if _newclass:image_size = _swig_property(_libgadu.gg_status77_image_size_get, _libgadu.gg_status77_image_size_set)
    __swig_setmethods__["dunno1"] = _libgadu.gg_status77_dunno1_set
    __swig_getmethods__["dunno1"] = _libgadu.gg_status77_dunno1_get
    if _newclass:dunno1 = _swig_property(_libgadu.gg_status77_dunno1_get, _libgadu.gg_status77_dunno1_set)
    __swig_setmethods__["dunno2"] = _libgadu.gg_status77_dunno2_set
    __swig_getmethods__["dunno2"] = _libgadu.gg_status77_dunno2_get
    if _newclass:dunno2 = _swig_property(_libgadu.gg_status77_dunno2_get, _libgadu.gg_status77_dunno2_set)
    def __init__(self): 
        this = _libgadu.new_gg_status77()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _libgadu.delete_gg_status77
    __del__ = lambda self : None;
gg_status77_swigregister = _libgadu.gg_status77_swigregister
gg_status77_swigregister(gg_status77)

GG_ADD_NOTIFY = _libgadu.GG_ADD_NOTIFY
GG_REMOVE_NOTIFY = _libgadu.GG_REMOVE_NOTIFY
class gg_add_remove(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, gg_add_remove, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, gg_add_remove, name)
    __repr__ = _swig_repr
    __swig_setmethods__["uin"] = _libgadu.gg_add_remove_uin_set
    __swig_getmethods__["uin"] = _libgadu.gg_add_remove_uin_get
    if _newclass:uin = _swig_property(_libgadu.gg_add_remove_uin_get, _libgadu.gg_add_remove_uin_set)
    __swig_setmethods__["dunno1"] = _libgadu.gg_add_remove_dunno1_set
    __swig_getmethods__["dunno1"] = _libgadu.gg_add_remove_dunno1_get
    if _newclass:dunno1 = _swig_property(_libgadu.gg_add_remove_dunno1_get, _libgadu.gg_add_remove_dunno1_set)
    def __init__(self): 
        this = _libgadu.new_gg_add_remove()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _libgadu.delete_gg_add_remove
    __del__ = lambda self : None;
gg_add_remove_swigregister = _libgadu.gg_add_remove_swigregister
gg_add_remove_swigregister(gg_add_remove)

GG_STATUS = _libgadu.GG_STATUS
class gg_status(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, gg_status, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, gg_status, name)
    __repr__ = _swig_repr
    __swig_setmethods__["uin"] = _libgadu.gg_status_uin_set
    __swig_getmethods__["uin"] = _libgadu.gg_status_uin_get
    if _newclass:uin = _swig_property(_libgadu.gg_status_uin_get, _libgadu.gg_status_uin_set)
    __swig_setmethods__["status"] = _libgadu.gg_status_status_set
    __swig_getmethods__["status"] = _libgadu.gg_status_status_get
    if _newclass:status = _swig_property(_libgadu.gg_status_status_get, _libgadu.gg_status_status_set)
    def __init__(self): 
        this = _libgadu.new_gg_status()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _libgadu.delete_gg_status
    __del__ = lambda self : None;
gg_status_swigregister = _libgadu.gg_status_swigregister
gg_status_swigregister(gg_status)

GG_SEND_MSG = _libgadu.GG_SEND_MSG
GG_CLASS_QUEUED = _libgadu.GG_CLASS_QUEUED
GG_CLASS_OFFLINE = _libgadu.GG_CLASS_OFFLINE
GG_CLASS_MSG = _libgadu.GG_CLASS_MSG
GG_CLASS_CHAT = _libgadu.GG_CLASS_CHAT
GG_CLASS_CTCP = _libgadu.GG_CLASS_CTCP
GG_CLASS_ACK = _libgadu.GG_CLASS_ACK
GG_CLASS_EXT = _libgadu.GG_CLASS_EXT
GG_MSG_MAXSIZE = _libgadu.GG_MSG_MAXSIZE
class gg_send_msg(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, gg_send_msg, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, gg_send_msg, name)
    __repr__ = _swig_repr
    __swig_setmethods__["recipient"] = _libgadu.gg_send_msg_recipient_set
    __swig_getmethods__["recipient"] = _libgadu.gg_send_msg_recipient_get
    if _newclass:recipient = _swig_property(_libgadu.gg_send_msg_recipient_get, _libgadu.gg_send_msg_recipient_set)
    __swig_setmethods__["seq"] = _libgadu.gg_send_msg_seq_set
    __swig_getmethods__["seq"] = _libgadu.gg_send_msg_seq_get
    if _newclass:seq = _swig_property(_libgadu.gg_send_msg_seq_get, _libgadu.gg_send_msg_seq_set)
    __swig_setmethods__["msgclass"] = _libgadu.gg_send_msg_msgclass_set
    __swig_getmethods__["msgclass"] = _libgadu.gg_send_msg_msgclass_get
    if _newclass:msgclass = _swig_property(_libgadu.gg_send_msg_msgclass_get, _libgadu.gg_send_msg_msgclass_set)
    def __init__(self): 
        this = _libgadu.new_gg_send_msg()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _libgadu.delete_gg_send_msg
    __del__ = lambda self : None;
gg_send_msg_swigregister = _libgadu.gg_send_msg_swigregister
gg_send_msg_swigregister(gg_send_msg)

class gg_msg_richtext(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, gg_msg_richtext, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, gg_msg_richtext, name)
    __repr__ = _swig_repr
    __swig_setmethods__["flag"] = _libgadu.gg_msg_richtext_flag_set
    __swig_getmethods__["flag"] = _libgadu.gg_msg_richtext_flag_get
    if _newclass:flag = _swig_property(_libgadu.gg_msg_richtext_flag_get, _libgadu.gg_msg_richtext_flag_set)
    __swig_setmethods__["length"] = _libgadu.gg_msg_richtext_length_set
    __swig_getmethods__["length"] = _libgadu.gg_msg_richtext_length_get
    if _newclass:length = _swig_property(_libgadu.gg_msg_richtext_length_get, _libgadu.gg_msg_richtext_length_set)
    def __init__(self): 
        this = _libgadu.new_gg_msg_richtext()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _libgadu.delete_gg_msg_richtext
    __del__ = lambda self : None;
gg_msg_richtext_swigregister = _libgadu.gg_msg_richtext_swigregister
gg_msg_richtext_swigregister(gg_msg_richtext)

class gg_msg_richtext_format(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, gg_msg_richtext_format, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, gg_msg_richtext_format, name)
    __repr__ = _swig_repr
    __swig_setmethods__["position"] = _libgadu.gg_msg_richtext_format_position_set
    __swig_getmethods__["position"] = _libgadu.gg_msg_richtext_format_position_get
    if _newclass:position = _swig_property(_libgadu.gg_msg_richtext_format_position_get, _libgadu.gg_msg_richtext_format_position_set)
    __swig_setmethods__["font"] = _libgadu.gg_msg_richtext_format_font_set
    __swig_getmethods__["font"] = _libgadu.gg_msg_richtext_format_font_get
    if _newclass:font = _swig_property(_libgadu.gg_msg_richtext_format_font_get, _libgadu.gg_msg_richtext_format_font_set)
    def __init__(self): 
        this = _libgadu.new_gg_msg_richtext_format()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _libgadu.delete_gg_msg_richtext_format
    __del__ = lambda self : None;
gg_msg_richtext_format_swigregister = _libgadu.gg_msg_richtext_format_swigregister
gg_msg_richtext_format_swigregister(gg_msg_richtext_format)

GG_FONT_BOLD = _libgadu.GG_FONT_BOLD
GG_FONT_ITALIC = _libgadu.GG_FONT_ITALIC
GG_FONT_UNDERLINE = _libgadu.GG_FONT_UNDERLINE
GG_FONT_COLOR = _libgadu.GG_FONT_COLOR
GG_FONT_IMAGE = _libgadu.GG_FONT_IMAGE
class gg_msg_richtext_color(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, gg_msg_richtext_color, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, gg_msg_richtext_color, name)
    __repr__ = _swig_repr
    __swig_setmethods__["red"] = _libgadu.gg_msg_richtext_color_red_set
    __swig_getmethods__["red"] = _libgadu.gg_msg_richtext_color_red_get
    if _newclass:red = _swig_property(_libgadu.gg_msg_richtext_color_red_get, _libgadu.gg_msg_richtext_color_red_set)
    __swig_setmethods__["green"] = _libgadu.gg_msg_richtext_color_green_set
    __swig_getmethods__["green"] = _libgadu.gg_msg_richtext_color_green_get
    if _newclass:green = _swig_property(_libgadu.gg_msg_richtext_color_green_get, _libgadu.gg_msg_richtext_color_green_set)
    __swig_setmethods__["blue"] = _libgadu.gg_msg_richtext_color_blue_set
    __swig_getmethods__["blue"] = _libgadu.gg_msg_richtext_color_blue_get
    if _newclass:blue = _swig_property(_libgadu.gg_msg_richtext_color_blue_get, _libgadu.gg_msg_richtext_color_blue_set)
    def __init__(self): 
        this = _libgadu.new_gg_msg_richtext_color()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _libgadu.delete_gg_msg_richtext_color
    __del__ = lambda self : None;
gg_msg_richtext_color_swigregister = _libgadu.gg_msg_richtext_color_swigregister
gg_msg_richtext_color_swigregister(gg_msg_richtext_color)

class gg_msg_richtext_image(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, gg_msg_richtext_image, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, gg_msg_richtext_image, name)
    __repr__ = _swig_repr
    __swig_setmethods__["unknown1"] = _libgadu.gg_msg_richtext_image_unknown1_set
    __swig_getmethods__["unknown1"] = _libgadu.gg_msg_richtext_image_unknown1_get
    if _newclass:unknown1 = _swig_property(_libgadu.gg_msg_richtext_image_unknown1_get, _libgadu.gg_msg_richtext_image_unknown1_set)
    __swig_setmethods__["size"] = _libgadu.gg_msg_richtext_image_size_set
    __swig_getmethods__["size"] = _libgadu.gg_msg_richtext_image_size_get
    if _newclass:size = _swig_property(_libgadu.gg_msg_richtext_image_size_get, _libgadu.gg_msg_richtext_image_size_set)
    __swig_setmethods__["crc32"] = _libgadu.gg_msg_richtext_image_crc32_set
    __swig_getmethods__["crc32"] = _libgadu.gg_msg_richtext_image_crc32_get
    if _newclass:crc32 = _swig_property(_libgadu.gg_msg_richtext_image_crc32_get, _libgadu.gg_msg_richtext_image_crc32_set)
    def __init__(self): 
        this = _libgadu.new_gg_msg_richtext_image()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _libgadu.delete_gg_msg_richtext_image
    __del__ = lambda self : None;
gg_msg_richtext_image_swigregister = _libgadu.gg_msg_richtext_image_swigregister
gg_msg_richtext_image_swigregister(gg_msg_richtext_image)

class gg_msg_recipients(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, gg_msg_recipients, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, gg_msg_recipients, name)
    __repr__ = _swig_repr
    __swig_setmethods__["flag"] = _libgadu.gg_msg_recipients_flag_set
    __swig_getmethods__["flag"] = _libgadu.gg_msg_recipients_flag_get
    if _newclass:flag = _swig_property(_libgadu.gg_msg_recipients_flag_get, _libgadu.gg_msg_recipients_flag_set)
    __swig_setmethods__["count"] = _libgadu.gg_msg_recipients_count_set
    __swig_getmethods__["count"] = _libgadu.gg_msg_recipients_count_get
    if _newclass:count = _swig_property(_libgadu.gg_msg_recipients_count_get, _libgadu.gg_msg_recipients_count_set)
    def __init__(self): 
        this = _libgadu.new_gg_msg_recipients()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _libgadu.delete_gg_msg_recipients
    __del__ = lambda self : None;
gg_msg_recipients_swigregister = _libgadu.gg_msg_recipients_swigregister
gg_msg_recipients_swigregister(gg_msg_recipients)

class gg_msg_image_request(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, gg_msg_image_request, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, gg_msg_image_request, name)
    __repr__ = _swig_repr
    __swig_setmethods__["flag"] = _libgadu.gg_msg_image_request_flag_set
    __swig_getmethods__["flag"] = _libgadu.gg_msg_image_request_flag_get
    if _newclass:flag = _swig_property(_libgadu.gg_msg_image_request_flag_get, _libgadu.gg_msg_image_request_flag_set)
    __swig_setmethods__["size"] = _libgadu.gg_msg_image_request_size_set
    __swig_getmethods__["size"] = _libgadu.gg_msg_image_request_size_get
    if _newclass:size = _swig_property(_libgadu.gg_msg_image_request_size_get, _libgadu.gg_msg_image_request_size_set)
    __swig_setmethods__["crc32"] = _libgadu.gg_msg_image_request_crc32_set
    __swig_getmethods__["crc32"] = _libgadu.gg_msg_image_request_crc32_get
    if _newclass:crc32 = _swig_property(_libgadu.gg_msg_image_request_crc32_get, _libgadu.gg_msg_image_request_crc32_set)
    def __init__(self): 
        this = _libgadu.new_gg_msg_image_request()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _libgadu.delete_gg_msg_image_request
    __del__ = lambda self : None;
gg_msg_image_request_swigregister = _libgadu.gg_msg_image_request_swigregister
gg_msg_image_request_swigregister(gg_msg_image_request)

class gg_msg_image_reply(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, gg_msg_image_reply, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, gg_msg_image_reply, name)
    __repr__ = _swig_repr
    __swig_setmethods__["flag"] = _libgadu.gg_msg_image_reply_flag_set
    __swig_getmethods__["flag"] = _libgadu.gg_msg_image_reply_flag_get
    if _newclass:flag = _swig_property(_libgadu.gg_msg_image_reply_flag_get, _libgadu.gg_msg_image_reply_flag_set)
    __swig_setmethods__["size"] = _libgadu.gg_msg_image_reply_size_set
    __swig_getmethods__["size"] = _libgadu.gg_msg_image_reply_size_get
    if _newclass:size = _swig_property(_libgadu.gg_msg_image_reply_size_get, _libgadu.gg_msg_image_reply_size_set)
    __swig_setmethods__["crc32"] = _libgadu.gg_msg_image_reply_crc32_set
    __swig_getmethods__["crc32"] = _libgadu.gg_msg_image_reply_crc32_get
    if _newclass:crc32 = _swig_property(_libgadu.gg_msg_image_reply_crc32_get, _libgadu.gg_msg_image_reply_crc32_set)
    def __init__(self): 
        this = _libgadu.new_gg_msg_image_reply()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _libgadu.delete_gg_msg_image_reply
    __del__ = lambda self : None;
gg_msg_image_reply_swigregister = _libgadu.gg_msg_image_reply_swigregister
gg_msg_image_reply_swigregister(gg_msg_image_reply)

GG_SEND_MSG_ACK = _libgadu.GG_SEND_MSG_ACK
GG_ACK_BLOCKED = _libgadu.GG_ACK_BLOCKED
GG_ACK_DELIVERED = _libgadu.GG_ACK_DELIVERED
GG_ACK_QUEUED = _libgadu.GG_ACK_QUEUED
GG_ACK_MBOXFULL = _libgadu.GG_ACK_MBOXFULL
GG_ACK_NOT_DELIVERED = _libgadu.GG_ACK_NOT_DELIVERED
class gg_send_msg_ack(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, gg_send_msg_ack, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, gg_send_msg_ack, name)
    __repr__ = _swig_repr
    __swig_setmethods__["status"] = _libgadu.gg_send_msg_ack_status_set
    __swig_getmethods__["status"] = _libgadu.gg_send_msg_ack_status_get
    if _newclass:status = _swig_property(_libgadu.gg_send_msg_ack_status_get, _libgadu.gg_send_msg_ack_status_set)
    __swig_setmethods__["recipient"] = _libgadu.gg_send_msg_ack_recipient_set
    __swig_getmethods__["recipient"] = _libgadu.gg_send_msg_ack_recipient_get
    if _newclass:recipient = _swig_property(_libgadu.gg_send_msg_ack_recipient_get, _libgadu.gg_send_msg_ack_recipient_set)
    __swig_setmethods__["seq"] = _libgadu.gg_send_msg_ack_seq_set
    __swig_getmethods__["seq"] = _libgadu.gg_send_msg_ack_seq_get
    if _newclass:seq = _swig_property(_libgadu.gg_send_msg_ack_seq_get, _libgadu.gg_send_msg_ack_seq_set)
    def __init__(self): 
        this = _libgadu.new_gg_send_msg_ack()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _libgadu.delete_gg_send_msg_ack
    __del__ = lambda self : None;
gg_send_msg_ack_swigregister = _libgadu.gg_send_msg_ack_swigregister
gg_send_msg_ack_swigregister(gg_send_msg_ack)

GG_RECV_MSG = _libgadu.GG_RECV_MSG
class gg_recv_msg(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, gg_recv_msg, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, gg_recv_msg, name)
    __repr__ = _swig_repr
    __swig_setmethods__["sender"] = _libgadu.gg_recv_msg_sender_set
    __swig_getmethods__["sender"] = _libgadu.gg_recv_msg_sender_get
    if _newclass:sender = _swig_property(_libgadu.gg_recv_msg_sender_get, _libgadu.gg_recv_msg_sender_set)
    __swig_setmethods__["seq"] = _libgadu.gg_recv_msg_seq_set
    __swig_getmethods__["seq"] = _libgadu.gg_recv_msg_seq_get
    if _newclass:seq = _swig_property(_libgadu.gg_recv_msg_seq_get, _libgadu.gg_recv_msg_seq_set)
    __swig_setmethods__["time"] = _libgadu.gg_recv_msg_time_set
    __swig_getmethods__["time"] = _libgadu.gg_recv_msg_time_get
    if _newclass:time = _swig_property(_libgadu.gg_recv_msg_time_get, _libgadu.gg_recv_msg_time_set)
    __swig_setmethods__["msgclass"] = _libgadu.gg_recv_msg_msgclass_set
    __swig_getmethods__["msgclass"] = _libgadu.gg_recv_msg_msgclass_get
    if _newclass:msgclass = _swig_property(_libgadu.gg_recv_msg_msgclass_get, _libgadu.gg_recv_msg_msgclass_set)
    def __init__(self): 
        this = _libgadu.new_gg_recv_msg()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _libgadu.delete_gg_recv_msg
    __del__ = lambda self : None;
gg_recv_msg_swigregister = _libgadu.gg_recv_msg_swigregister
gg_recv_msg_swigregister(gg_recv_msg)

GG_PING = _libgadu.GG_PING
GG_PONG = _libgadu.GG_PONG
GG_DISCONNECTING = _libgadu.GG_DISCONNECTING
GG_USERLIST_REQUEST = _libgadu.GG_USERLIST_REQUEST
GG_XML_EVENT = _libgadu.GG_XML_EVENT
GG_USERLIST_PUT = _libgadu.GG_USERLIST_PUT
GG_USERLIST_PUT_MORE = _libgadu.GG_USERLIST_PUT_MORE
GG_USERLIST_GET = _libgadu.GG_USERLIST_GET
GG_USERLIST_REPLY = _libgadu.GG_USERLIST_REPLY
GG_USERLIST_PUT_REPLY = _libgadu.GG_USERLIST_PUT_REPLY
GG_USERLIST_PUT_MORE_REPLY = _libgadu.GG_USERLIST_PUT_MORE_REPLY
GG_USERLIST_GET_REPLY = _libgadu.GG_USERLIST_GET_REPLY
GG_USERLIST_GET_MORE_REPLY = _libgadu.GG_USERLIST_GET_MORE_REPLY
class gg_userlist_reply(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, gg_userlist_reply, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, gg_userlist_reply, name)
    __repr__ = _swig_repr
    __swig_setmethods__["type"] = _libgadu.gg_userlist_reply_type_set
    __swig_getmethods__["type"] = _libgadu.gg_userlist_reply_type_get
    if _newclass:type = _swig_property(_libgadu.gg_userlist_reply_type_get, _libgadu.gg_userlist_reply_type_set)
    def __init__(self): 
        this = _libgadu.new_gg_userlist_reply()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _libgadu.delete_gg_userlist_reply
    __del__ = lambda self : None;
gg_userlist_reply_swigregister = _libgadu.gg_userlist_reply_swigregister
gg_userlist_reply_swigregister(gg_userlist_reply)

GG_USERLIST100_PUT = _libgadu.GG_USERLIST100_PUT
GG_USERLIST100_GET = _libgadu.GG_USERLIST100_GET
GG_USERLIST100_FORMAT_TYPE_NONE = _libgadu.GG_USERLIST100_FORMAT_TYPE_NONE
GG_USERLIST100_FORMAT_TYPE_GG70 = _libgadu.GG_USERLIST100_FORMAT_TYPE_GG70
GG_USERLIST100_FORMAT_TYPE_GG100 = _libgadu.GG_USERLIST100_FORMAT_TYPE_GG100
GG_USERLIST100_REPLY_LIST = _libgadu.GG_USERLIST100_REPLY_LIST
GG_USERLIST100_REPLY_ACK = _libgadu.GG_USERLIST100_REPLY_ACK
GG_USERLIST100_REPLY_REJECT = _libgadu.GG_USERLIST100_REPLY_REJECT
class gg_dcc_tiny_packet(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, gg_dcc_tiny_packet, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, gg_dcc_tiny_packet, name)
    __repr__ = _swig_repr
    __swig_setmethods__["type"] = _libgadu.gg_dcc_tiny_packet_type_set
    __swig_getmethods__["type"] = _libgadu.gg_dcc_tiny_packet_type_get
    if _newclass:type = _swig_property(_libgadu.gg_dcc_tiny_packet_type_get, _libgadu.gg_dcc_tiny_packet_type_set)
    def __init__(self): 
        this = _libgadu.new_gg_dcc_tiny_packet()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _libgadu.delete_gg_dcc_tiny_packet
    __del__ = lambda self : None;
gg_dcc_tiny_packet_swigregister = _libgadu.gg_dcc_tiny_packet_swigregister
gg_dcc_tiny_packet_swigregister(gg_dcc_tiny_packet)

class gg_dcc_small_packet(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, gg_dcc_small_packet, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, gg_dcc_small_packet, name)
    __repr__ = _swig_repr
    __swig_setmethods__["type"] = _libgadu.gg_dcc_small_packet_type_set
    __swig_getmethods__["type"] = _libgadu.gg_dcc_small_packet_type_get
    if _newclass:type = _swig_property(_libgadu.gg_dcc_small_packet_type_get, _libgadu.gg_dcc_small_packet_type_set)
    def __init__(self): 
        this = _libgadu.new_gg_dcc_small_packet()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _libgadu.delete_gg_dcc_small_packet
    __del__ = lambda self : None;
gg_dcc_small_packet_swigregister = _libgadu.gg_dcc_small_packet_swigregister
gg_dcc_small_packet_swigregister(gg_dcc_small_packet)

class gg_dcc_big_packet(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, gg_dcc_big_packet, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, gg_dcc_big_packet, name)
    __repr__ = _swig_repr
    __swig_setmethods__["type"] = _libgadu.gg_dcc_big_packet_type_set
    __swig_getmethods__["type"] = _libgadu.gg_dcc_big_packet_type_get
    if _newclass:type = _swig_property(_libgadu.gg_dcc_big_packet_type_get, _libgadu.gg_dcc_big_packet_type_set)
    __swig_setmethods__["dunno1"] = _libgadu.gg_dcc_big_packet_dunno1_set
    __swig_getmethods__["dunno1"] = _libgadu.gg_dcc_big_packet_dunno1_get
    if _newclass:dunno1 = _swig_property(_libgadu.gg_dcc_big_packet_dunno1_get, _libgadu.gg_dcc_big_packet_dunno1_set)
    __swig_setmethods__["dunno2"] = _libgadu.gg_dcc_big_packet_dunno2_set
    __swig_getmethods__["dunno2"] = _libgadu.gg_dcc_big_packet_dunno2_get
    if _newclass:dunno2 = _swig_property(_libgadu.gg_dcc_big_packet_dunno2_get, _libgadu.gg_dcc_big_packet_dunno2_set)
    def __init__(self): 
        this = _libgadu.new_gg_dcc_big_packet()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _libgadu.delete_gg_dcc_big_packet
    __del__ = lambda self : None;
gg_dcc_big_packet_swigregister = _libgadu.gg_dcc_big_packet_swigregister
gg_dcc_big_packet_swigregister(gg_dcc_big_packet)

GG_DCC_WANT_FILE = _libgadu.GG_DCC_WANT_FILE
GG_DCC_HAVE_FILE = _libgadu.GG_DCC_HAVE_FILE
GG_DCC_HAVE_FILEINFO = _libgadu.GG_DCC_HAVE_FILEINFO
GG_DCC_GIMME_FILE = _libgadu.GG_DCC_GIMME_FILE
GG_DCC_CATCH_FILE = _libgadu.GG_DCC_CATCH_FILE
GG_DCC_FILEATTR_READONLY = _libgadu.GG_DCC_FILEATTR_READONLY
GG_DCC_TIMEOUT_SEND = _libgadu.GG_DCC_TIMEOUT_SEND
GG_DCC_TIMEOUT_GET = _libgadu.GG_DCC_TIMEOUT_GET
GG_DCC_TIMEOUT_FILE_ACK = _libgadu.GG_DCC_TIMEOUT_FILE_ACK
GG_DCC_TIMEOUT_VOICE_ACK = _libgadu.GG_DCC_TIMEOUT_VOICE_ACK
GG_DCC7_INFO = _libgadu.GG_DCC7_INFO
class gg_dcc7_info(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, gg_dcc7_info, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, gg_dcc7_info, name)
    __repr__ = _swig_repr
    __swig_setmethods__["uin"] = _libgadu.gg_dcc7_info_uin_set
    __swig_getmethods__["uin"] = _libgadu.gg_dcc7_info_uin_get
    if _newclass:uin = _swig_property(_libgadu.gg_dcc7_info_uin_get, _libgadu.gg_dcc7_info_uin_set)
    __swig_setmethods__["type"] = _libgadu.gg_dcc7_info_type_set
    __swig_getmethods__["type"] = _libgadu.gg_dcc7_info_type_get
    if _newclass:type = _swig_property(_libgadu.gg_dcc7_info_type_get, _libgadu.gg_dcc7_info_type_set)
    __swig_setmethods__["id"] = _libgadu.gg_dcc7_info_id_set
    __swig_getmethods__["id"] = _libgadu.gg_dcc7_info_id_get
    if _newclass:id = _swig_property(_libgadu.gg_dcc7_info_id_get, _libgadu.gg_dcc7_info_id_set)
    __swig_setmethods__["info"] = _libgadu.gg_dcc7_info_info_set
    __swig_getmethods__["info"] = _libgadu.gg_dcc7_info_info_get
    if _newclass:info = _swig_property(_libgadu.gg_dcc7_info_info_get, _libgadu.gg_dcc7_info_info_set)
    __swig_setmethods__["hash"] = _libgadu.gg_dcc7_info_hash_set
    __swig_getmethods__["hash"] = _libgadu.gg_dcc7_info_hash_get
    if _newclass:hash = _swig_property(_libgadu.gg_dcc7_info_hash_get, _libgadu.gg_dcc7_info_hash_set)
    def __init__(self): 
        this = _libgadu.new_gg_dcc7_info()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _libgadu.delete_gg_dcc7_info
    __del__ = lambda self : None;
gg_dcc7_info_swigregister = _libgadu.gg_dcc7_info_swigregister
gg_dcc7_info_swigregister(gg_dcc7_info)

GG_DCC7_NEW = _libgadu.GG_DCC7_NEW
class gg_dcc7_new(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, gg_dcc7_new, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, gg_dcc7_new, name)
    __repr__ = _swig_repr
    __swig_setmethods__["id"] = _libgadu.gg_dcc7_new_id_set
    __swig_getmethods__["id"] = _libgadu.gg_dcc7_new_id_get
    if _newclass:id = _swig_property(_libgadu.gg_dcc7_new_id_get, _libgadu.gg_dcc7_new_id_set)
    __swig_setmethods__["uin_from"] = _libgadu.gg_dcc7_new_uin_from_set
    __swig_getmethods__["uin_from"] = _libgadu.gg_dcc7_new_uin_from_get
    if _newclass:uin_from = _swig_property(_libgadu.gg_dcc7_new_uin_from_get, _libgadu.gg_dcc7_new_uin_from_set)
    __swig_setmethods__["uin_to"] = _libgadu.gg_dcc7_new_uin_to_set
    __swig_getmethods__["uin_to"] = _libgadu.gg_dcc7_new_uin_to_get
    if _newclass:uin_to = _swig_property(_libgadu.gg_dcc7_new_uin_to_get, _libgadu.gg_dcc7_new_uin_to_set)
    __swig_setmethods__["type"] = _libgadu.gg_dcc7_new_type_set
    __swig_getmethods__["type"] = _libgadu.gg_dcc7_new_type_get
    if _newclass:type = _swig_property(_libgadu.gg_dcc7_new_type_get, _libgadu.gg_dcc7_new_type_set)
    __swig_setmethods__["filename"] = _libgadu.gg_dcc7_new_filename_set
    __swig_getmethods__["filename"] = _libgadu.gg_dcc7_new_filename_get
    if _newclass:filename = _swig_property(_libgadu.gg_dcc7_new_filename_get, _libgadu.gg_dcc7_new_filename_set)
    __swig_setmethods__["size"] = _libgadu.gg_dcc7_new_size_set
    __swig_getmethods__["size"] = _libgadu.gg_dcc7_new_size_get
    if _newclass:size = _swig_property(_libgadu.gg_dcc7_new_size_get, _libgadu.gg_dcc7_new_size_set)
    __swig_setmethods__["size_hi"] = _libgadu.gg_dcc7_new_size_hi_set
    __swig_getmethods__["size_hi"] = _libgadu.gg_dcc7_new_size_hi_get
    if _newclass:size_hi = _swig_property(_libgadu.gg_dcc7_new_size_hi_get, _libgadu.gg_dcc7_new_size_hi_set)
    __swig_setmethods__["hash"] = _libgadu.gg_dcc7_new_hash_set
    __swig_getmethods__["hash"] = _libgadu.gg_dcc7_new_hash_get
    if _newclass:hash = _swig_property(_libgadu.gg_dcc7_new_hash_get, _libgadu.gg_dcc7_new_hash_set)
    def __init__(self): 
        this = _libgadu.new_gg_dcc7_new()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _libgadu.delete_gg_dcc7_new
    __del__ = lambda self : None;
gg_dcc7_new_swigregister = _libgadu.gg_dcc7_new_swigregister
gg_dcc7_new_swigregister(gg_dcc7_new)

GG_DCC7_ACCEPT = _libgadu.GG_DCC7_ACCEPT
GG_DCC7_TYPE_P2P = _libgadu.GG_DCC7_TYPE_P2P
GG_DCC7_TYPE_SERVER = _libgadu.GG_DCC7_TYPE_SERVER
GG_DCC7_REJECT = _libgadu.GG_DCC7_REJECT
GG_DCC7_REJECT_BUSY = _libgadu.GG_DCC7_REJECT_BUSY
GG_DCC7_REJECT_USER = _libgadu.GG_DCC7_REJECT_USER
GG_DCC7_REJECT_VERSION = _libgadu.GG_DCC7_REJECT_VERSION
GG_DCC7_ID_REQUEST = _libgadu.GG_DCC7_ID_REQUEST
class gg_dcc7_id_request(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, gg_dcc7_id_request, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, gg_dcc7_id_request, name)
    __repr__ = _swig_repr
    __swig_setmethods__["type"] = _libgadu.gg_dcc7_id_request_type_set
    __swig_getmethods__["type"] = _libgadu.gg_dcc7_id_request_type_get
    if _newclass:type = _swig_property(_libgadu.gg_dcc7_id_request_type_get, _libgadu.gg_dcc7_id_request_type_set)
    def __init__(self): 
        this = _libgadu.new_gg_dcc7_id_request()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _libgadu.delete_gg_dcc7_id_request
    __del__ = lambda self : None;
gg_dcc7_id_request_swigregister = _libgadu.gg_dcc7_id_request_swigregister
gg_dcc7_id_request_swigregister(gg_dcc7_id_request)

GG_DCC7_TYPE_VOICE = _libgadu.GG_DCC7_TYPE_VOICE
GG_DCC7_TYPE_FILE = _libgadu.GG_DCC7_TYPE_FILE
GG_DCC7_ID_REPLY = _libgadu.GG_DCC7_ID_REPLY
class gg_dcc7_id_reply(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, gg_dcc7_id_reply, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, gg_dcc7_id_reply, name)
    __repr__ = _swig_repr
    __swig_setmethods__["type"] = _libgadu.gg_dcc7_id_reply_type_set
    __swig_getmethods__["type"] = _libgadu.gg_dcc7_id_reply_type_get
    if _newclass:type = _swig_property(_libgadu.gg_dcc7_id_reply_type_get, _libgadu.gg_dcc7_id_reply_type_set)
    __swig_setmethods__["id"] = _libgadu.gg_dcc7_id_reply_id_set
    __swig_getmethods__["id"] = _libgadu.gg_dcc7_id_reply_id_get
    if _newclass:id = _swig_property(_libgadu.gg_dcc7_id_reply_id_get, _libgadu.gg_dcc7_id_reply_id_set)
    def __init__(self): 
        this = _libgadu.new_gg_dcc7_id_reply()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _libgadu.delete_gg_dcc7_id_reply
    __del__ = lambda self : None;
gg_dcc7_id_reply_swigregister = _libgadu.gg_dcc7_id_reply_swigregister
gg_dcc7_id_reply_swigregister(gg_dcc7_id_reply)

GG_DCC7_DUNNO1 = _libgadu.GG_DCC7_DUNNO1
class gg_dcc7_dunno1(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, gg_dcc7_dunno1, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, gg_dcc7_dunno1, name)
    __repr__ = _swig_repr
    def __init__(self): 
        this = _libgadu.new_gg_dcc7_dunno1()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _libgadu.delete_gg_dcc7_dunno1
    __del__ = lambda self : None;
gg_dcc7_dunno1_swigregister = _libgadu.gg_dcc7_dunno1_swigregister
gg_dcc7_dunno1_swigregister(gg_dcc7_dunno1)

GG_DCC7_TIMEOUT_CONNECT = _libgadu.GG_DCC7_TIMEOUT_CONNECT
GG_DCC7_TIMEOUT_SEND = _libgadu.GG_DCC7_TIMEOUT_SEND
GG_DCC7_TIMEOUT_GET = _libgadu.GG_DCC7_TIMEOUT_GET
GG_DCC7_TIMEOUT_FILE_ACK = _libgadu.GG_DCC7_TIMEOUT_FILE_ACK
GG_DCC7_TIMEOUT_VOICE_ACK = _libgadu.GG_DCC7_TIMEOUT_VOICE_ACK
# This file is compatible with both classic and new-style classes.


